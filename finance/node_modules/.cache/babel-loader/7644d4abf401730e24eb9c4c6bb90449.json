{"ast":null,"code":"import { Droppable, isBlazor, addClass, isUndefined } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, remove, updateBlazorTemplate, removeClass } from '@syncfusion/ej2-base';\nimport { getUpdateUsingRaf, appendChildren, parentsUntil } from '../base/util';\nimport * as events from '../base/constant';\nimport { Row } from '../models/row';\nimport { RowRenderer } from './row-renderer';\nimport { CellMergeRender } from './cell-merge-renderer';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport { getScrollBarWidth, isGroupAdaptive } from '../base/util';\n/**\n * Content module is used to render grid content\n * @hidden\n */\n\nvar ContentRender =\n/** @class */\nfunction () {\n  /**\n   * Constructor for content renderer module\n   */\n  function ContentRender(parent, serviceLocator) {\n    var _this = this;\n\n    this.rows = [];\n    this.freezeRows = [];\n    this.movableRows = [];\n    this.freezeRowElements = [];\n    /** @hidden */\n\n    this.currentInfo = {};\n    /** @hidden */\n\n    this.prevCurrentView = [];\n    this.isLoaded = true;\n    this.viewColIndexes = [];\n\n    this.drop = function (e) {\n      if (parentsUntil(e.target, 'e-row') || parentsUntil(e.target, 'e-emptyrow')) {\n        _this.parent.notify(events.columnDrop, {\n          target: e.target,\n          droppedElement: e.droppedElement\n        });\n\n        remove(e.droppedElement);\n      }\n    };\n\n    this.infiniteCache = {};\n    this.isRemove = false;\n    this.visibleRows = [];\n    this.visibleFrozenRows = [];\n    this.isAddRows = false;\n    this.isInfiniteFreeze = false;\n    this.useGroupCache = false;\n    this.mutableData = false;\n\n    this.rafCallback = function (args) {\n      var arg = args;\n      return function () {\n        if (_this.parent.getFrozenColumns() && _this.parent.enableVirtualization) {\n          var mContentRows = [].slice.call(_this.parent.getMovableVirtualContent().querySelectorAll('.e-row'));\n          var fContentRows = [].slice.call(_this.parent.getFrozenVirtualContent().querySelectorAll('.e-row'));\n          _this.isLoaded = !mContentRows ? false : mContentRows.length === fContentRows.length;\n\n          if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && _this.isLoaded) {\n            var mHdr = [].slice.call(_this.parent.getMovableVirtualHeader().querySelectorAll('.e-row'));\n            var fHdr = [].slice.call(_this.parent.getFrozenVirtualHeader().querySelectorAll('.e-row'));\n            _this.isLoaded = mHdr.length === fHdr.length;\n          }\n        }\n\n        _this.ariaService.setBusy(_this.getPanel().querySelector('.e-content'), false);\n\n        if (_this.parent.isDestroyed) {\n          return;\n        }\n\n        var rows = _this.rows.slice(0);\n\n        if (_this.parent.getFrozenColumns() !== 0) {\n          rows = args.isFrozen ? _this.freezeRows : _this.movableRows;\n        }\n\n        _this.parent.notify(events.contentReady, {\n          rows: rows,\n          args: arg\n        });\n\n        if (_this.isLoaded) {\n          _this.parent.trigger(events.dataBound, {}, function () {\n            if (_this.parent.allowTextWrap) {\n              _this.parent.notify(events.freezeRender, {\n                case: 'textwrap'\n              });\n            }\n          });\n        }\n\n        if (arg) {\n          var action = (arg.requestType || '').toLowerCase() + '-complete';\n\n          _this.parent.notify(action, arg);\n\n          if (args.requestType === 'batchsave') {\n            args.cancel = false;\n\n            _this.parent.trigger(events.actionComplete, args);\n          }\n        }\n\n        if (_this.isLoaded) {\n          _this.parent.hideSpinner();\n        }\n      };\n    };\n\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.ariaService = this.serviceLocator.getService('ariaService');\n    this.mutableData = this.parent.getDataModule().isRemote();\n    this.generator = this.getModelGenerator();\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization && !this.parent.groupSettings.enableLazyLoading) {\n      this.parent.on(events.columnVisibilityChanged, this.setVisible, this);\n    }\n\n    this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);\n    this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n    this.parent.on(events.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n    this.parent.on(events.beforeCellFocused, this.beforeCellFocused, this);\n  }\n\n  ContentRender.prototype.beforeCellFocused = function (e) {\n    if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n      this.pressedKey = e.keyArgs.action;\n    } else {\n      this.pressedKey = undefined;\n    }\n  };\n  /**\n   * The function is used to render grid content div\n   */\n\n\n  ContentRender.prototype.renderPanel = function () {\n    var gObj = this.parent;\n    var div = this.parent.element.querySelector('.e-gridcontent');\n\n    if (div) {\n      this.ariaService.setOptions(this.parent.element.querySelector('.e-content'), {\n        busy: false\n      });\n      this.setPanel(div);\n      return;\n    }\n\n    div = this.parent.createElement('div', {\n      className: 'e-gridcontent'\n    });\n    var innerDiv = this.parent.createElement('div', {\n      className: 'e-content'\n    });\n    this.ariaService.setOptions(innerDiv, {\n      busy: false\n    });\n    div.appendChild(innerDiv);\n    this.setPanel(div);\n    gObj.element.appendChild(div);\n  };\n  /**\n   * The function is used to render grid content table\n   */\n\n\n  ContentRender.prototype.renderTable = function () {\n    var contentDiv = this.getPanel();\n    var virtualTable = contentDiv.querySelector('.e-virtualtable');\n    var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n\n    if (this.parent.enableVirtualization && !isNullOrUndefined(virtualTable) && !isNullOrUndefined(virtualTrack) && (!isBlazor() || isBlazor() && !this.parent.isServerRendered)) {\n      remove(virtualTable);\n      remove(virtualTrack);\n    }\n\n    contentDiv.appendChild(this.createContentTable('_content_table'));\n    this.setTable(contentDiv.querySelector('.e-table'));\n    this.ariaService.setOptions(this.getTable(), {\n      multiselectable: this.parent.selectionSettings.type === 'Multiple'\n    });\n    this.initializeContentDrop();\n\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().classList.add('e-frozenhdrcont');\n    }\n  };\n  /**\n   * The function is used to create content table elements\n   * @return {Element}\n   * @hidden\n   */\n\n\n  ContentRender.prototype.createContentTable = function (id) {\n    var innerDiv = this.getPanel().firstElementChild;\n\n    if (!isBlazor()) {\n      if (this.getTable()) {\n        remove(this.getTable());\n      }\n    }\n\n    var table = innerDiv.querySelector('.e-table') ? innerDiv.querySelector('.e-table') : this.parent.createElement('table', {\n      className: 'e-table',\n      attrs: {\n        cellspacing: '0.25px',\n        role: 'grid',\n        id: this.parent.element.id + id\n      }\n    });\n    this.setColGroup(this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true));\n    table.appendChild(this.getColGroup());\n    table.appendChild(this.parent.createElement('tbody'));\n    innerDiv.appendChild(table);\n    return innerDiv;\n  };\n\n  ContentRender.prototype.splitRows = function (idx) {\n    if (this.parent.getFrozenColumns()) {\n      if (idx === 0) {\n        this.freezeRows = this.rows;\n        this.freezeRowElements = this.rowElements;\n      } else {\n        this.movableRows = this.rows;\n      }\n    }\n  };\n  /**\n   * Refresh the content of the Grid.\n   * @return {void}\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  ContentRender.prototype.refreshContentRows = function (args) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = {};\n    }\n\n    var gObj = this.parent;\n\n    if (gObj.currentViewData.length === 0) {\n      return;\n    }\n\n    var dataSource = this.currentMovableRows || gObj.currentViewData;\n    var isReact = gObj.isReact && !isNullOrUndefined(gObj.rowTemplate);\n    var frag = isReact ? gObj.createElement('tbody') : document.createDocumentFragment();\n\n    if (!this.initialPageRecords) {\n      this.initialPageRecords = extend([], dataSource);\n    }\n\n    var hdrfrag = isReact ? gObj.createElement('tbody') : document.createDocumentFragment();\n    var columns = gObj.getColumns();\n    var tr;\n    var hdrTbody;\n    var frzCols = gObj.getFrozenColumns();\n    var trElement;\n    var row = new RowRenderer(this.serviceLocator, null, this.parent);\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && args.requestType === 'infiniteScroll';\n    this.rowElements = [];\n    this.rows = [];\n    var fCont = this.getPanel().querySelector('.e-frozencontent');\n    var mCont = this.getPanel().querySelector('.e-movablecontent');\n    var cont = this.getPanel().querySelector('.e-content');\n\n    if (isGroupAdaptive(gObj)) {\n      if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder'].some(function (value) {\n        return args.requestType === value;\n      })) {\n        gObj.vcRows = [];\n        gObj.vRows = [];\n      }\n    }\n\n    var modelData;\n    var isServerRendered = 'isServerRendered';\n\n    if (isBlazor() && this.parent[isServerRendered]) {\n      modelData = this.generator.generateRows(dataSource, args);\n\n      if (this.parent.enableVirtualization) {\n        this.prevInfo = this.prevInfo ? this.prevInfo : args.virtualInfo;\n        this.prevInfo = args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'Y' && this.currentInfo.page && this.currentInfo.page !== args.virtualInfo.page ? this.currentInfo : args.virtualInfo;\n      }\n\n      this.rows = modelData;\n      this.freezeRows = modelData;\n      this.rowElements = [].slice.call(this.getTable().querySelectorAll('tr.e-row[data-uid]'));\n\n      if (frzCols) {\n        this.movableRows = modelData.map(function (mRow) {\n          var sRow = new Row(mRow);\n          sRow.cells = mRow.cells.slice(frzCols, mRow.cells.length);\n          mRow.cells = mRow.cells.slice(0, frzCols);\n          return sRow;\n        });\n        this.freezeRowElements = this.rowElements;\n      }\n\n      this.isLoaded = true;\n      this.parent.hideSpinner();\n      args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n      var arg = extend({\n        rows: this.rows\n      }, args);\n\n      if (this.getTable().querySelector('.e-emptyrow')) {\n        remove(this.getTable().querySelector('.e-emptyrow'));\n\n        if (!isNullOrUndefined(this.getTable().querySelectorAll('.e-table > tbody')[1])) {\n          remove(this.getTable().querySelectorAll('.e-table > tbody')[1]);\n        }\n      }\n\n      this.parent.notify('contentcolgroup', {});\n      this.rafCallback(arg)();\n\n      if (frzCols) {\n        cont.style.overflowY = 'hidden';\n        fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n        mCont.style.overflowY = this.parent.height !== 'auto' ? 'scroll' : 'auto';\n        fCont.style.borderRightWidth = '1px';\n        this.parent.notify(events.contentReady, {\n          rows: this.movableRows,\n          args: extend({}, arg, {\n            isFrozen: false\n          })\n        });\n      }\n\n      if (!(this.parent.isCheckBoxSelection || this.parent.selectionSettings.type === 'Multiple') || !this.parent.isPersistSelection && !this.parent.enableVirtualization) {\n        var rowIndex = 'editRowIndex';\n\n        if (this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(args[rowIndex])) {\n          this.parent.selectRow(args[rowIndex]);\n        }\n      }\n\n      if (this.parent.enableVirtualization && !this.parent.getHeaderContent().querySelectorAll('.e-check').length) {\n        var removeClassByUid = this.parent.getRows().filter(function (x) {\n          return x.getAttribute('aria-selected');\n        }).map(function (y) {\n          return y.getAttribute('data-uid');\n        });\n        var addClassByUid = this.parent.getRows().filter(function (x) {\n          return x.getAttribute('aria-selected') === null;\n        }).map(function (y) {\n          return y.getAttribute('data-uid');\n        });\n\n        for (var i = 0; i < removeClassByUid.length; i++) {\n          if (!isNullOrUndefined(this.parent.getRowObjectFromUID(removeClassByUid[i])) && !this.parent.getRowObjectFromUID(removeClassByUid[i]).isSelected) {\n            this.parent.getRowElementByUID(removeClassByUid[i]).removeAttribute('aria-selected');\n\n            if (!isNullOrUndefined(this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check'))) {\n              removeClass([this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check')], ['e-check']);\n            }\n\n            for (var j = 0; j < this.parent.getRowElementByUID(removeClassByUid[i]).children.length; j++) {\n              this.parent.getRowElementByUID(removeClassByUid[i]).children[j].classList.remove('e-selectionbackground', 'e-active');\n            }\n          }\n        }\n\n        for (var i = 0; i < addClassByUid.length; i++) {\n          if (!isNullOrUndefined(this.parent.getRowObjectFromUID(addClassByUid[i])) && this.parent.getRowObjectFromUID(addClassByUid[i]).isSelected) {\n            this.parent.getRowElementByUID(addClassByUid[i]).setAttribute('aria-selected', 'true');\n\n            if (!isNullOrUndefined(this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame'))) {\n              addClass([this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame')], ['e-check']);\n            }\n\n            for (var j = 0; j < this.parent.getRowElementByUID(addClassByUid[i]).children.length; j++) {\n              this.parent.getRowElementByUID(addClassByUid[i]).children[j].classList.add('e-selectionbackground', 'e-active');\n            }\n          }\n        }\n      }\n\n      return;\n    }\n\n    if (this.parent.enableVirtualization && this.parent.getFrozenColumns()) {\n      if (this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll') {\n        if (args.virtualInfo.sentinelInfo.axis === 'X') {\n          modelData = this.parent.contentModule.generateRows(dataSource, args);\n          args.renderMovableContent = true;\n        } else if (mCont.scrollLeft > 0 && !args.renderMovableContent) {\n          this.viewColIndexes = args.virtualInfo.columnIndexes;\n          var indexes = [];\n\n          for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n            indexes.push(i);\n          }\n\n          this.parent.setColumnIndexesInView(indexes);\n          args.virtualInfo.columnIndexes = indexes;\n        }\n      }\n\n      modelData = this.parent.contentModule.generateRows(dataSource, args);\n    } else {\n      modelData = this.checkCache(modelData, args);\n\n      if (!this.isAddRows && !this.useGroupCache) {\n        modelData = this.generator.generateRows(dataSource, args);\n      }\n    }\n\n    this.setGroupCache(modelData, args);\n    this.parent.notify(events.setInfiniteCache, {\n      isInfiniteScroll: isInfiniteScroll,\n      modelData: modelData,\n      args: args\n    });\n\n    if (isNullOrUndefined(modelData[0].cells[0])) {\n      mCont.querySelector('tbody').innerHTML = '';\n    }\n\n    var idx = modelData[0].cells[0].index;\n\n    if (isUndefined(idx) && this.parent.getFrozenColumns() && this.parent.isRowDragable()) {\n      idx = modelData[0].cells[1].index;\n    }\n\n    if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns() && args.renderMovableContent && args.requestType === 'virtualscroll' && mCont.scrollLeft > 0 && args.virtualInfo.columnIndexes[0] !== 0) {\n      idx = this.parent.getFrozenColumns();\n    }\n    /* tslint:disable:no-any */\n\n\n    if (args.requestType !== 'infiniteScroll' && this.parent.registeredTemplate && this.parent.registeredTemplate.template && !args.isFrozen) {\n      var templatetoclear = [];\n\n      for (var i = 0; i < this.parent.registeredTemplate.template.length; i++) {\n        for (var j = 0; j < this.parent.registeredTemplate.template[i].rootNodes.length; j++) {\n          if (isNullOrUndefined(this.parent.registeredTemplate.template[i].rootNodes[j].parentNode)) {\n            templatetoclear.push(this.parent.registeredTemplate.template[i]);\n            /* tslint:enable:no-any */\n          }\n        }\n      }\n\n      this.parent.destroyTemplate(['template'], templatetoclear);\n    }\n\n    if (this.parent.isReact && args.requestType !== 'infiniteScroll' && !args.isFrozen) {\n      this.parent.destroyTemplate(['template', 'rowTemplate', 'detailTemplate', 'captionTemplate', 'commandsTemplate']);\n      this.parent.renderTemplates();\n    }\n\n    if (this.parent.enableColumnVirtualization) {\n      var cellMerge = new CellMergeRender(this.serviceLocator, this.parent);\n      cellMerge.updateVirtualCells(modelData);\n    }\n\n    if (frzCols && idx >= frzCols) {\n      this.tbody = mCont.querySelector('tbody');\n    } else {\n      this.tbody = this.getTable().querySelector('tbody');\n    }\n\n    var startIndex = 0;\n    var blockLoad = true;\n\n    if (isGroupAdaptive(gObj) && gObj.vcRows.length) {\n      var top_1 = 'top';\n      var scrollTop = !isNullOrUndefined(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top : !isNullOrUndefined(args.scrollTop) ? args.scrollTop[top_1] : 0;\n\n      if (scrollTop !== 0) {\n        var offsets_1 = gObj.vGroupOffsets;\n        var bSize = gObj.pageSettings.pageSize / 2;\n        var values = Object.keys(offsets_1).map(function (key) {\n          return offsets_1[key];\n        });\n\n        for (var m = 0; m < values.length; m++) {\n          if (scrollTop < values[m]) {\n            if (!isNullOrUndefined(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n              args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n              startIndex = m === 0 || m === 1 ? 0 : m * bSize;\n              break;\n            } else {\n              args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n              startIndex = m === 0 || m === 1 ? 0 : m * bSize;\n              break;\n            }\n          }\n        }\n\n        if (scrollTop + this.contentPanel.firstElementChild.offsetHeight === this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n          blockLoad = false;\n        }\n      }\n    }\n\n    var isVFFrozenOnly = gObj.frozenRows && !gObj.getFrozenColumns() && this.parent.enableVirtualization && args.requestType === 'reorder';\n\n    if (gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X' || isVFFrozenOnly) {\n      var bIndex = args.virtualInfo.blockIndexes;\n      var page = args.virtualInfo.page;\n      args.virtualInfo.blockIndexes = [1, 2];\n\n      if (isVFFrozenOnly) {\n        args.virtualInfo.page = 1;\n      }\n\n      var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n      var mhdrData = this.vgenerator.generateRows(data, args);\n      mhdrData.splice(this.parent.frozenRows);\n\n      for (var i = 0; i < this.parent.frozenRows; i++) {\n        mhdrData[i].cells.splice(0, this.parent.getFrozenColumns());\n        tr = row.render(mhdrData[i], columns);\n        hdrfrag.appendChild(tr);\n      }\n\n      args.virtualInfo.blockIndexes = bIndex;\n      args.virtualInfo.page = page;\n\n      if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n        modelData.splice(0, this.parent.frozenRows);\n      }\n    }\n\n    this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n\n    for (var i = startIndex, len = modelData.length; i < len; i++) {\n      this.rows.push(modelData[i]);\n\n      if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n        this.setRowsInLazyGroup(modelData[i], i);\n\n        if (isNullOrUndefined(modelData[i].indent)) {\n          continue;\n        }\n      }\n\n      this.setInfiniteVisibleRows(args, modelData[i]);\n\n      if (isGroupAdaptive(gObj) && this.rows.length >= gObj.pageSettings.pageSize && blockLoad) {\n        break;\n      }\n\n      if (!gObj.rowTemplate) {\n        tr = row.render(modelData[i], columns);\n        var isVFreorder = this.ensureFrozenHeaderRender(args);\n\n        if (gObj.frozenRows && i < gObj.frozenRows && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder) {\n          hdrfrag.appendChild(tr);\n        } else {\n          frag.appendChild(tr);\n        }\n\n        if (modelData[i].isExpand) {\n          gObj.notify(events.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n        }\n      } else {\n        var rowTemplateID = gObj.element.id + 'rowTemplate';\n        var elements = void 0;\n\n        if (gObj.isReact) {\n          var isHeader = gObj.frozenRows && i < gObj.frozenRows;\n          var copied = extend({\n            index: i\n          }, dataSource[i]);\n          gObj.getRowTemplate()(copied, gObj, 'rowTemplate', rowTemplateID, null, null, isHeader ? hdrfrag : frag);\n          gObj.renderTemplates();\n        } else {\n          elements = gObj.getRowTemplate()(extend({\n            index: i\n          }, dataSource[i]), gObj, 'rowTemplate', rowTemplateID);\n        }\n\n        if (!gObj.isReact && elements[0].tagName === 'TBODY') {\n          for (var j = 0; j < elements.length; j++) {\n            var isTR = elements[j].nodeName.toLowerCase() === 'tr';\n\n            if (isTR || elements[j].querySelectorAll && elements[j].querySelectorAll('tr').length) {\n              tr = isTR ? elements[j] : elements[j].querySelector('tr');\n            }\n          }\n\n          if (gObj.frozenRows && i < gObj.frozenRows) {\n            hdrfrag.appendChild(tr);\n          } else {\n            frag.appendChild(tr);\n          }\n        } else {\n          if (gObj.frozenRows && i < gObj.frozenRows) {\n            tr = !gObj.isReact ? appendChildren(hdrfrag, elements) : hdrfrag.lastElementChild;\n          } else {\n            // frag.appendChild(tr);\n            if (!gObj.isReact) {\n              tr = appendChildren(frag, elements);\n            }\n\n            trElement = gObj.isReact ? frag.lastElementChild : tr.lastElementChild;\n          }\n        }\n\n        var arg = {\n          data: modelData[i].data,\n          row: trElement ? trElement : tr\n        };\n        this.parent.trigger(events.rowDataBound, arg);\n      }\n\n      if (modelData[i].isDataRow) {\n        this.rowElements.push(tr);\n      }\n\n      this.ariaService.setOptions(this.getTable(), {\n        colcount: gObj.getColumns().length.toString()\n      });\n    }\n\n    this.splitRows(idx);\n\n    if (gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll || args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X') {\n      hdrTbody = frzCols ? gObj.getHeaderContent().querySelector(idx === 0 ? '.e-frozenheader' : '.e-movableheader').querySelector('tbody') : gObj.getHeaderTable().querySelector('tbody');\n\n      if (isReact) {\n        var parentTable = hdrTbody.parentElement;\n        remove(hdrTbody);\n        parentTable.appendChild(hdrfrag);\n      } else {\n        hdrTbody.innerHTML = '';\n        hdrTbody.appendChild(hdrfrag);\n      }\n    }\n\n    if (!gObj.enableVirtualization && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n      cont.style.height = cont.offsetHeight - hdrTbody.offsetHeight + 'px';\n    }\n\n    if (frzCols && idx === 0) {\n      this.getPanel().firstChild.style.overflowY = 'hidden';\n    }\n\n    if (!isBlazor() || this.parent.isJsComponent) {\n      args.rows = this.rows.slice(0);\n    }\n\n    args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n    this.index = idx;\n    getUpdateUsingRaf(function () {\n      _this.parent.notify(events.beforeFragAppend, args);\n\n      var isVFTable = _this.parent.enableVirtualization && _this.parent.getFrozenColumns() !== 0;\n\n      if (!_this.parent.enableVirtualization && !isInfiniteScroll) {\n        remove(_this.tbody);\n        _this.tbody = _this.parent.createElement('tbody');\n      }\n\n      if (frzCols && !isVFTable && !_this.parent.enableInfiniteScrolling) {\n        if (isReact) {\n          _this.tbody = frag;\n        } else {\n          _this.tbody.appendChild(frag);\n        }\n\n        if (_this.index === 0) {\n          _this.isLoaded = false;\n          fCont.querySelector('table').appendChild(_this.tbody);\n        } else {\n          if (_this.tbody.childElementCount < 1) {\n            _this.tbody.appendChild(_this.parent.createElement('tr').appendChild(_this.parent.createElement('td')));\n          }\n\n          _this.isLoaded = true;\n          mCont.querySelector('table').appendChild(_this.tbody);\n\n          if (_this.parent.getFrozenColumns() !== 0 && !_this.parent.allowTextWrap) {\n            _this.parent.notify(events.freezeRender, {\n              case: 'refreshHeight'\n            });\n          }\n\n          fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n          mCont.style.overflowY = _this.parent.height !== 'auto' ? 'scroll' : 'auto';\n          fCont.style.borderRightWidth = '1px';\n        }\n      } else {\n        if (gObj.rowTemplate) {\n          updateBlazorTemplate(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n        }\n\n        if (isVFTable) {\n          if (!args.renderMovableContent) {\n            _this.appendContent(fCont.querySelector('tbody'), frag, args);\n\n            if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && mCont.scrollLeft > 0) {\n              _this.parent.setColumnIndexesInView(_this.viewColIndexes);\n\n              args.virtualInfo.columnIndexes = _this.viewColIndexes;\n            }\n          } else {\n            _this.appendContent(mCont.querySelector('tbody'), frag, args);\n\n            if (args.virtualInfo && args.virtualInfo.direction !== 'right' && args.virtualInfo.direction !== 'left') {\n              fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n            }\n\n            args.renderMovableContent = false;\n          }\n        } else {\n          if (!isNullOrUndefined(_this.parent.infiniteScrollModule) && _this.parent.enableInfiniteScrolling) {\n            _this.isAddRows = false;\n\n            _this.parent.notify(events.removeInfiniteRows, {\n              args: args\n            });\n\n            _this.parent.notify(events.appendInfiniteContent, {\n              tbody: _this.tbody,\n              frag: frag,\n              args: args,\n              rows: _this.rows,\n              rowElements: _this.rowElements,\n              visibleRows: _this.visibleRows\n            });\n\n            if (frzCols && idx !== 0) {\n              fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n              mCont.style.overflowY = _this.parent.height !== 'auto' ? 'scroll' : 'auto';\n              fCont.style.borderRightWidth = '1px';\n            }\n          } else {\n            _this.useGroupCache = false;\n\n            _this.appendContent(_this.tbody, frag, args);\n          }\n        }\n      }\n\n      if (frzCols && idx === 0) {\n        if (isVFTable) {\n          args.renderMovableContent = true;\n        }\n\n        _this.refreshContentRows(extend({}, args));\n      }\n\n      frag = null;\n    }, this.rafCallback(extend({}, args)));\n  };\n\n  ContentRender.prototype.appendContent = function (tbody, frag, args) {\n    var isReact = this.parent.isReact && !isNullOrUndefined(this.parent.rowTemplate);\n\n    if (isReact) {\n      this.getTable().appendChild(frag);\n    } else {\n      tbody.appendChild(frag);\n      this.getTable().appendChild(tbody);\n    }\n  };\n\n  ContentRender.prototype.setRowsInLazyGroup = function (row, index) {\n    if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n      this.parent.contentModule.maintainRows(row, index);\n    }\n  };\n\n  ContentRender.prototype.setGroupCache = function (data, args) {\n    if (!this.useGroupCache && this.parent.groupSettings.enableLazyLoading) {\n      this.parent.notify(events.setGroupCache, {\n        args: args,\n        data: data\n      });\n    }\n  };\n\n  ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n    return !(this.parent.enableVirtualization && (args.requestType === 'reorder' || args.requestType === 'refresh') || this.parent.infiniteScrollSettings.enableCache && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete' && this.parent.pageSettings.currentPage !== 1);\n  };\n\n  ContentRender.prototype.checkCache = function (modelData, args) {\n    if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n      var index = args.isFrozen ? 1 : 0;\n      var frozenCols = this.parent.getFrozenColumns();\n      this.isAddRows = !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage]);\n\n      if (frozenCols && !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage])) {\n        this.isAddRows = this.infiniteCache[this.parent.pageSettings.currentPage][index].length !== 0;\n      }\n\n      if (this.isAddRows) {\n        var data = !frozenCols ? this.infiniteCache[this.parent.pageSettings.currentPage] : this.infiniteCache[this.parent.pageSettings.currentPage][index];\n        modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n      }\n\n      return modelData;\n    }\n\n    if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length && (args.requestType === 'paging' || args.requestType === 'columnstate' || args.requestType === 'reorder') && this.parent.contentModule.getGroupCache()[this.parent.pageSettings.currentPage]) {\n      this.useGroupCache = true;\n      return this.parent.contentModule.initialGroupRows(args.requestType === 'reorder');\n    }\n\n    return null;\n  };\n\n  ContentRender.prototype.setInfiniteVisibleRows = function (args, data) {\n    var frozenCols = this.parent.getFrozenColumns();\n\n    if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache) {\n      if (frozenCols) {\n        !args.isFrozen ? this.visibleFrozenRows.push(data) : this.visibleRows.push(data);\n      } else if (!this.parent.infiniteScrollSettings.enableCache) {\n        this.visibleRows.push(data);\n      }\n    }\n  };\n\n  ContentRender.prototype.getCurrentBlockInfiniteRecords = function (isFreeze) {\n    var data = [];\n\n    if (this.parent.infiniteScrollSettings.enableCache) {\n      if (!Object.keys(this.infiniteCache).length) {\n        return [];\n      }\n\n      var frozenCols = this.parent.getFrozenColumns();\n      var rows = this.parent.getRows();\n      var index = parseInt(rows[this.parent.frozenRows].getAttribute('aria-rowindex'), 10);\n      var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n      index = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10);\n      var last = Math.ceil(index / this.parent.pageSettings.pageSize);\n\n      if (frozenCols) {\n        var idx = isFreeze ? 0 : 1;\n\n        for (var i = first; i <= last; i++) {\n          data = !data.length ? this.infiniteCache[i][idx] : data.concat(this.infiniteCache[i][idx]);\n        }\n\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n          data = this.infiniteCache[1][idx].slice(0, this.parent.frozenRows).concat(data);\n        }\n      } else {\n        for (var i = first; i <= last; i++) {\n          data = !data.length ? this.infiniteCache[i] : data.concat(this.infiniteCache[i]);\n        }\n\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n          data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n        }\n      }\n    }\n\n    return data;\n  };\n\n  ContentRender.prototype.getReorderedVFRows = function (args) {\n    return this.parent.contentModule.getReorderedFrozenRows(args);\n  };\n\n  ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n    if (this.parent.frozenRows && this.parent.getFrozenColumns() && this.parent.enableVirtualization && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n      var tr = void 0;\n      this.currentMovableRows = dataSource;\n      var fhdrData = this.getReorderedVFRows(args);\n\n      for (var i = 0; i < fhdrData.length; i++) {\n        tr = row.render(fhdrData[i], columns);\n        hdrfrag.appendChild(tr);\n      }\n\n      if (args.virtualInfo.page === 1) {\n        modelData.splice(0, this.parent.frozenRows);\n      }\n\n      if (args.renderMovableContent) {\n        this.parent.currentViewData = this.currentMovableRows;\n        this.currentMovableRows = null;\n      }\n    }\n  };\n\n  ContentRender.prototype.getInfiniteRows = function () {\n    var rows = [];\n    var frozenCols = this.parent.getFrozenColumns();\n\n    if (this.parent.enableInfiniteScrolling) {\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        var keys = Object.keys(this.infiniteCache);\n\n        for (var i = 0; i < keys.length; i++) {\n          rows = !frozenCols ? rows.concat(this.infiniteCache[keys[i]]) : rows.concat(this.infiniteCache[keys[i]][0]);\n        }\n      } else {\n        rows = frozenCols ? this.visibleFrozenRows : this.visibleRows;\n      }\n    }\n\n    return rows;\n  };\n\n  ContentRender.prototype.getInfiniteMovableRows = function () {\n    var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n    var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows : this.visibleRows : [];\n    return infiniteRows;\n  };\n  /**\n   * Get the content div element of grid\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getPanel = function () {\n    return this.contentPanel;\n  };\n  /**\n   * Set the content div element of grid\n   * @param  {Element} panel\n   */\n\n\n  ContentRender.prototype.setPanel = function (panel) {\n    this.contentPanel = panel;\n  };\n  /**\n   * Get the content table element of grid\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getTable = function () {\n    return this.contentTable;\n  };\n  /**\n   * Set the content table element of grid\n   * @param  {Element} table\n   */\n\n\n  ContentRender.prototype.setTable = function (table) {\n    this.contentTable = table;\n  };\n  /**\n   * Get the Row collection in the Grid.\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n   */\n\n\n  ContentRender.prototype.getRows = function () {\n    var infiniteRows = this.getInfiniteRows();\n    return infiniteRows.length ? infiniteRows : this.parent.getFrozenColumns() ? this.freezeRows : this.rows;\n  };\n  /**\n   * Get the Movable Row collection in the Freeze pane Grid.\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n   */\n\n\n  ContentRender.prototype.getMovableRows = function () {\n    var infiniteRows = this.getInfiniteMovableRows();\n    return infiniteRows.length ? infiniteRows : this.movableRows;\n  };\n  /**\n   * Get the content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getRowElements = function () {\n    return this.parent.getFrozenColumns() ? this.freezeRowElements : this.rowElements;\n  };\n  /**\n   * Get the Freeze pane movable content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getMovableRowElements = function () {\n    return this.rowElements;\n  };\n  /**\n   * Get the content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.setRowElements = function (elements) {\n    this.rowElements = elements;\n  };\n  /**\n   * Get the header colgroup element\n   * @returns {Element}\n   */\n\n\n  ContentRender.prototype.getColGroup = function () {\n    return this.colgroup;\n  };\n  /**\n   * Set the header colgroup element\n   * @param {Element} colgroup\n   * @returns {Element}\n   */\n\n\n  ContentRender.prototype.setColGroup = function (colGroup) {\n    if (!isNullOrUndefined(colGroup)) {\n      colGroup.id = 'content-' + colGroup.id;\n    }\n\n    return this.colgroup = colGroup;\n  };\n  /**\n   * Function to hide content table column based on visible property\n   * @param  {Column[]} columns?\n   */\n\n\n  ContentRender.prototype.setVisible = function (columns) {\n    var gObj = this.parent;\n\n    if (isBlazor() && gObj.isServerRendered) {\n      this.parent.notify('setvisibility', columns);\n    }\n\n    var frzCols = gObj.getFrozenColumns();\n    var rows = [];\n\n    if (frzCols) {\n      var fRows = this.freezeRows;\n      var mRows = this.movableRows;\n      var rowLen = fRows.length;\n      var cellLen = void 0;\n\n      for (var i = 0, row = void 0; i < rowLen; i++) {\n        cellLen = mRows[i].cells.length;\n        row = fRows[i].clone();\n\n        for (var j = 0; j < cellLen; j++) {\n          row.cells.push(mRows[i].cells[j]);\n        }\n\n        rows.push(row);\n      }\n    } else {\n      rows = this.getRows();\n    }\n\n    var element;\n    var testRow;\n    rows.some(function (r) {\n      if (r.isDataRow) {\n        testRow = r;\n      }\n\n      return r.isDataRow;\n    });\n    var tasks = [];\n    var needFullRefresh = true;\n\n    if (!gObj.groupSettings.columns.length && testRow) {\n      needFullRefresh = false;\n    }\n\n    var tr = gObj.getDataRows();\n    var args = {};\n    var infiniteData = this.infiniteRowVisibility();\n    var contentrows = infiniteData ? infiniteData : this.rows.filter(function (row) {\n      return !row.isDetailRow;\n    });\n\n    for (var c = 0, clen = columns.length; c < clen; c++) {\n      var column = columns[c];\n      var idx = this.parent.getNormalizedColumnIndex(column.uid);\n      var colIdx = this.parent.getColumnIndexByUid(column.uid);\n      var displayVal = column.visible === true ? '' : 'none';\n\n      if (idx !== -1 && testRow && idx < testRow.cells.length) {\n        if (frzCols) {\n          var normalizedfrzCols = this.parent.isRowDragable() ? frzCols + 1 : frzCols;\n\n          if (idx < normalizedfrzCols) {\n            setStyleAttribute(this.getColGroup().childNodes[idx], {\n              'display': displayVal\n            });\n            var infiniteFreezeData = this.infiniteRowVisibility(true);\n            contentrows = infiniteFreezeData ? infiniteFreezeData : this.freezeRows;\n            tr = gObj.getDataRows();\n          } else {\n            var mTable = gObj.getContent().querySelector('.e-movablecontent').querySelector('colgroup');\n            colIdx = idx = idx - frzCols;\n            setStyleAttribute(mTable.childNodes[idx], {\n              'display': displayVal\n            });\n            tr = gObj.getMovableDataRows();\n            var infiniteMovableData = this.infiniteRowVisibility();\n            contentrows = infiniteMovableData ? infiniteMovableData : this.movableRows;\n          }\n        } else {\n          setStyleAttribute(this.getColGroup().childNodes[idx], {\n            'display': displayVal\n          });\n        }\n      }\n\n      if (!needFullRefresh) {\n        this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n      }\n\n      if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n        this.parent.updateMediaColumns(column);\n      }\n\n      this.parent.invokedFromMedia = false;\n    }\n\n    if (needFullRefresh) {\n      this.refreshContentRows({\n        requestType: 'refresh'\n      });\n    } else {\n      if (!this.parent.getFrozenColumns()) {\n        this.parent.notify(events.partialRefresh, {\n          rows: contentrows,\n          args: args\n        });\n      } else {\n        this.parent.notify(events.partialRefresh, {\n          rows: this.freezeRows,\n          args: {\n            isFrozen: true,\n            rows: this.freezeRows\n          }\n        });\n        this.parent.notify(events.partialRefresh, {\n          rows: this.movableRows,\n          args: {\n            isFrozen: false,\n            rows: this.movableRows\n          }\n        });\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n    var trs = Object.keys(tr);\n\n    for (var i = 0; i < trs.length; i++) {\n      var td = tr[trs[i]].querySelectorAll('td.e-rowcell')[idx];\n\n      if (tr[trs[i]].querySelectorAll('td.e-rowcell').length && td) {\n        setStyleAttribute(tr[trs[i]].querySelectorAll('td.e-rowcell')[idx], {\n          'display': displayVal\n        });\n\n        if (tr[trs[i]].querySelectorAll('td.e-rowcell')[idx].classList.contains('e-hide')) {\n          removeClass([tr[trs[i]].querySelectorAll('td.e-rowcell')[idx]], ['e-hide']);\n        }\n\n        if (this.parent.isRowDragable()) {\n          var index = this.parent.getFrozenColumns() ? idx : idx + 1;\n          rows[trs[i]].cells[index].visible = displayVal === '' ? true : false;\n        } else {\n          rows[trs[i]].cells[idx].visible = displayVal === '' ? true : false;\n        }\n      }\n    }\n\n    this.parent.notify(events.infiniteShowHide, {\n      visible: displayVal,\n      index: idx,\n      isFreeze: this.isInfiniteFreeze\n    });\n  };\n\n  ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n    var infiniteData;\n\n    if (this.parent.enableInfiniteScrolling) {\n      this.isInfiniteFreeze = isFreeze;\n\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        infiniteData = isFreeze ? this.getCurrentBlockInfiniteRecords(true) : this.getCurrentBlockInfiniteRecords();\n      } else {\n        infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n      }\n    }\n\n    return infiniteData;\n  };\n\n  ContentRender.prototype.colGroupRefresh = function () {\n    if (this.getColGroup()) {\n      var colGroup = void 0;\n\n      if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns() && this.parent.contentModule.isXaxis()) {\n        colGroup = this.parent.getMovableVirtualHeader().querySelector('colgroup').cloneNode(true);\n      } else {\n        colGroup = isBlazor() ? this.parent.getHeaderTable().querySelector('colgroup').cloneNode(true) : this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true);\n      }\n\n      this.getTable().replaceChild(colGroup, this.getColGroup());\n      this.setColGroup(colGroup);\n    }\n  };\n\n  ContentRender.prototype.initializeContentDrop = function () {\n    var gObj = this.parent;\n    var drop = new Droppable(gObj.element, {\n      accept: '.e-dragclone',\n      drop: this.drop\n    });\n  };\n\n  ContentRender.prototype.canSkip = function (column, row, index) {\n    /**\n     * Skip the toggle visiblity operation when one of the following success\n     * 1. Grid has empty records\n     * 2. column visible property is unchanged\n     * 3. cell`s isVisible property is same as column`s visible property.\n     */\n    return isNullOrUndefined(row) || //(1)\n    isNullOrUndefined(column.visible) || //(2)    \n    row.cells[index].visible === column.visible; //(3)\n  };\n\n  ContentRender.prototype.getModelGenerator = function () {\n    return this.generator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  };\n\n  ContentRender.prototype.renderEmpty = function (tbody) {\n    if (isBlazor() && !this.parent.isJsComponent && this.parent.frozenRows) {\n      return;\n    }\n\n    this.getTable().appendChild(tbody);\n\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().querySelector('tbody').innerHTML = '';\n    }\n  };\n\n  ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n    if (this.parent.getFrozenColumns()) {\n      var rows = this.getMovableRows().filter(function (row) {\n        return clearAll || uid === row.uid;\n      });\n\n      for (var i = 0; i < rows.length; i++) {\n        rows[i].isSelected = set;\n      }\n    }\n\n    var row = this.getRows().filter(function (row) {\n      return clearAll || uid === row.uid;\n    });\n\n    for (var j = 0; j < row.length; j++) {\n      row[j].isSelected = set;\n      var cells = row[j].cells;\n\n      for (var k = 0; k < cells.length; k++) {\n        cells[k].isSelected = set;\n      }\n    }\n  };\n\n  ContentRender.prototype.getRowByIndex = function (index) {\n    index = this.getInfiniteRowIndex(index);\n    return this.parent.getDataRows()[index];\n  };\n\n  ContentRender.prototype.getInfiniteRowIndex = function (index) {\n    if (this.parent.infiniteScrollSettings.enableCache) {\n      var fRows = this.parent.frozenRows;\n      var idx = fRows > index ? 0 : fRows;\n      var firstRowIndex = parseInt(this.parent.getRows()[idx].getAttribute('aria-rowindex'), 10);\n      index = fRows > index ? index : index - firstRowIndex + fRows;\n    }\n\n    return index;\n  };\n\n  ContentRender.prototype.getVirtualRowIndex = function (index) {\n    return index;\n  };\n\n  ContentRender.prototype.getMovableRowByIndex = function (index) {\n    index = this.getInfiniteRowIndex(index);\n    return this.parent.getMovableDataRows()[index];\n  };\n\n  ContentRender.prototype.enableAfterRender = function (e) {\n    if (e.module === 'group' && e.enable) {\n      this.generator = this.getModelGenerator();\n    }\n  };\n\n  ContentRender.prototype.setRowObjects = function (rows) {\n    this.rows = rows;\n  };\n  /** @hidden */\n\n\n  ContentRender.prototype.immutableModeRendering = function (args) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = {};\n    }\n\n    var gObj = this.parent;\n    gObj.hideSpinner();\n    var key = gObj.getPrimaryKeyFieldNames()[0];\n    var oldKeys = {};\n    var newKeys = {};\n    var newRowObjs = [];\n    var oldIndexes = {};\n    var oldRowObjs = gObj.getRowsObject().slice();\n    var batchChangeKeys = this.getBatchEditedRecords(key, oldRowObjs);\n    var newIndexes = {};\n    var hasBatch = Object.keys(batchChangeKeys).length !== 0;\n\n    if (gObj.getContent().querySelector('.e-emptyrow') || args.requestType === 'reorder' || this.parent.groupSettings.columns.length) {\n      this.refreshContentRows(args);\n    } else {\n      if (gObj.currentViewData.length === 0) {\n        return;\n      }\n\n      var oldRowElements = {};\n      var tbody = gObj.createElement('tbody');\n      var dataSource = gObj.currentViewData;\n      var trs = [].slice.call(this.getTable().querySelector('tbody').children);\n\n      if (this.prevCurrentView.length) {\n        var prevLen = this.prevCurrentView.length;\n        var currentLen = dataSource.length;\n\n        if (prevLen === currentLen) {\n          for (var i = 0; i < currentLen; i++) {\n            newKeys[dataSource[i][key]] = oldKeys[this.prevCurrentView[i][key]] = i;\n            newIndexes[i] = dataSource[i][key];\n            oldRowElements[oldRowObjs[i].uid] = trs[i];\n            oldIndexes[i] = this.prevCurrentView[i][key];\n          }\n        } else {\n          for (var i = 0; i < currentLen; i++) {\n            newKeys[dataSource[i][key]] = i;\n            newIndexes[i] = dataSource[i][key];\n          }\n\n          for (var i = 0; i < prevLen; i++) {\n            oldRowElements[oldRowObjs[i].uid] = trs[i];\n            oldKeys[this.prevCurrentView[i][key]] = i;\n            oldIndexes[i] = this.prevCurrentView[i][key];\n          }\n        }\n      }\n\n      for (var i = 0; i < dataSource.length; i++) {\n        var oldIndex = oldKeys[dataSource[i][key]];\n\n        if (!isNullOrUndefined(oldIndex)) {\n          var isEqual = false;\n\n          if (this.mutableData) {\n            isEqual = this.objectEqualityChecker(this.prevCurrentView[i], dataSource[i]);\n          }\n\n          var tr = oldRowElements[oldRowObjs[oldIndex].uid];\n          newRowObjs.push(gObj.getRowsObject()[oldIndex]);\n\n          if (this.rowElements[i] && this.rowElements[i].getAttribute('data-uid') === newRowObjs[i].uid && (hasBatch && isNullOrUndefined(batchChangeKeys[newIndexes[i]]) || !hasBatch && (isEqual || this.prevCurrentView[i] === dataSource[i]))) {\n            if (oldIndex !== i) {\n              this.refreshImmutableContent(i, tr, newRowObjs[i]);\n            }\n\n            tbody.appendChild(tr);\n            continue;\n          }\n\n          if (hasBatch && !isNullOrUndefined(batchChangeKeys[newIndexes[i]]) || !this.mutableData && dataSource[i] !== this.prevCurrentView[oldIndex] || this.mutableData && !isEqual) {\n            oldRowObjs[oldIndex].setRowValue(dataSource[i]);\n          }\n\n          tbody.appendChild(tr);\n          this.refreshImmutableContent(i, tr, newRowObjs[i]);\n        } else {\n          var row = new RowRenderer(this.serviceLocator, null, gObj);\n          var modelData = this.generator.generateRows([dataSource[i]]);\n          newRowObjs.push(modelData[0]);\n          var tr = row.render(modelData[0], gObj.getColumns());\n          tbody.appendChild(tr);\n          this.refreshImmutableContent(i, tr, newRowObjs[i]);\n        }\n      }\n\n      this.rows = newRowObjs;\n      this.rowElements = [].slice.call(tbody.children);\n      remove(this.getTable().querySelector('tbody'));\n      this.getTable().appendChild(tbody);\n      this.parent.trigger(events.dataBound, {}, function () {\n        if (_this.parent.allowTextWrap) {\n          _this.parent.notify(events.freezeRender, {\n            case: 'textwrap'\n          });\n        }\n      });\n\n      if (args) {\n        var action = (args.requestType || '').toLowerCase() + '-complete';\n        this.parent.notify(action, args);\n      }\n    }\n  };\n\n  ContentRender.prototype.objectEqualityChecker = function (old, next) {\n    var keys = Object.keys(old);\n    var isEqual = true;\n\n    for (var i = 0; i < keys.length; i++) {\n      if (old[keys[i]] !== next[keys[i]]) {\n        isEqual = false;\n        break;\n      }\n    }\n\n    return isEqual;\n  };\n\n  ContentRender.prototype.getBatchEditedRecords = function (primaryKey, rows) {\n    var keys = {};\n    var changes = this.parent.getBatchChanges();\n    var changedRecords = [];\n    var addedRecords = [];\n\n    if (Object.keys(changes).length) {\n      changedRecords = changes.changedRecords;\n      addedRecords = changes.addedRecords;\n    }\n\n    if (addedRecords.length) {\n      if (this.parent.editSettings.newRowPosition === 'Bottom') {\n        rows.splice(rows.length - 1, addedRecords.length);\n      } else {\n        rows.splice(0, addedRecords.length);\n      }\n    }\n\n    for (var i = 0; i < changedRecords.length; i++) {\n      keys[changedRecords[i][primaryKey]] = i;\n    }\n\n    return keys;\n  };\n\n  ContentRender.prototype.refreshImmutableContent = function (index, tr, row) {\n    row.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n    row.isAltRow ? tr.classList.add('e-altrow') : tr.classList.remove('e-altrow');\n    tr.setAttribute('aria-rowindex', index.toString());\n    this.updateCellIndex(tr, index);\n  };\n\n  ContentRender.prototype.updateCellIndex = function (rowEle, index) {\n    for (var i = 0; i < rowEle.cells.length; i++) {\n      rowEle.cells[i].setAttribute('index', index.toString());\n    }\n  };\n\n  return ContentRender;\n}();\n\nexport { ContentRender };","map":{"version":3,"sources":["D:/Projects/TCC/Finances/node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js"],"names":["Droppable","isBlazor","addClass","isUndefined","isNullOrUndefined","extend","setStyleAttribute","remove","updateBlazorTemplate","removeClass","getUpdateUsingRaf","appendChildren","parentsUntil","events","Row","RowRenderer","CellMergeRender","RowModelGenerator","GroupModelGenerator","getScrollBarWidth","isGroupAdaptive","ContentRender","parent","serviceLocator","_this","rows","freezeRows","movableRows","freezeRowElements","currentInfo","prevCurrentView","isLoaded","viewColIndexes","drop","e","target","notify","columnDrop","droppedElement","infiniteCache","isRemove","visibleRows","visibleFrozenRows","isAddRows","isInfiniteFreeze","useGroupCache","mutableData","rafCallback","args","arg","getFrozenColumns","enableVirtualization","mContentRows","slice","call","getMovableVirtualContent","querySelectorAll","fContentRows","getFrozenVirtualContent","length","enableColumnVirtualization","requestType","mHdr","getMovableVirtualHeader","fHdr","getFrozenVirtualHeader","ariaService","setBusy","getPanel","querySelector","isDestroyed","isFrozen","contentReady","trigger","dataBound","allowTextWrap","freezeRender","case","action","toLowerCase","cancel","actionComplete","hideSpinner","getService","getDataModule","isRemote","generator","getModelGenerator","groupSettings","enableLazyLoading","on","columnVisibilityChanged","setVisible","colGroupRefresh","uiUpdate","enableAfterRender","refreshInfiniteModeBlocks","refreshContentRows","beforeCellFocused","prototype","byKey","keyArgs","pressedKey","undefined","renderPanel","gObj","div","element","setOptions","busy","setPanel","createElement","className","innerDiv","appendChild","renderTable","contentDiv","virtualTable","virtualTrack","isServerRendered","createContentTable","setTable","getTable","multiselectable","selectionSettings","type","initializeContentDrop","frozenRows","getHeaderContent","classList","add","id","firstElementChild","table","attrs","cellspacing","role","setColGroup","cloneNode","getColGroup","splitRows","idx","rowElements","currentViewData","dataSource","currentMovableRows","isReact","rowTemplate","frag","document","createDocumentFragment","initialPageRecords","hdrfrag","columns","getColumns","tr","hdrTbody","frzCols","trElement","row","isInfiniteScroll","enableInfiniteScrolling","fCont","mCont","cont","some","value","vcRows","vRows","modelData","generateRows","prevInfo","virtualInfo","sentinelInfo","axis","page","map","mRow","sRow","cells","style","overflowY","height","offsetHeight","borderRightWidth","isCheckBoxSelection","isPersistSelection","rowIndex","editSettings","mode","selectRow","removeClassByUid","getRows","filter","x","getAttribute","y","addClassByUid","i","getRowObjectFromUID","isSelected","getRowElementByUID","removeAttribute","j","children","setAttribute","contentModule","renderMovableContent","scrollLeft","columnIndexes","indexes","push","setColumnIndexesInView","checkCache","setGroupCache","setInfiniteCache","innerHTML","index","isRowDragable","registeredTemplate","template","templatetoclear","rootNodes","parentNode","destroyTemplate","renderTemplates","cellMerge","updateVirtualCells","tbody","startIndex","blockLoad","top_1","scrollTop","offsets","top","offsets_1","vGroupOffsets","bSize","pageSettings","pageSize","values","Object","keys","key","m","direction","blockIndexes","contentPanel","scrollHeight","rowObject","isVFFrozenOnly","bIndex","data","mhdrData","vgenerator","splice","render","virtualFrozenHdrRefresh","len","setRowsInLazyGroup","indent","setInfiniteVisibleRows","isVFreorder","ensureFrozenHeaderRender","isExpand","expandChildGrid","rowTemplateID","elements","isHeader","copied","getRowTemplate","tagName","isTR","nodeName","lastElementChild","rowDataBound","isDataRow","colcount","toString","getHeaderTable","parentTable","parentElement","Number","firstChild","isJsComponent","beforeFragAppend","isVFTable","childElementCount","appendContent","infiniteScrollModule","removeInfiniteRows","appendInfiniteContent","maintainRows","infiniteScrollSettings","enableCache","currentPage","frozenCols","getGroupCache","initialGroupRows","getCurrentBlockInfiniteRecords","isFreeze","parseInt","first","Math","ceil","last","concat","getReorderedVFRows","getReorderedFrozenRows","fhdrData","getInfiniteRows","getInfiniteMovableRows","infiniteCacheRows","infiniteRows","panel","contentTable","getMovableRows","getRowElements","getMovableRowElements","setRowElements","colgroup","colGroup","fRows","mRows","rowLen","cellLen","clone","testRow","r","tasks","needFullRefresh","getDataRows","infiniteData","infiniteRowVisibility","contentrows","isDetailRow","c","clen","column","getNormalizedColumnIndex","uid","colIdx","getColumnIndexByUid","displayVal","visible","normalizedfrzCols","childNodes","infiniteFreezeData","mTable","getContent","getMovableDataRows","infiniteMovableData","setDisplayNone","invokedFromMedia","hideAtMedia","updateMediaColumns","partialRefresh","trs","td","contains","infiniteShowHide","isXaxis","replaceChild","accept","canSkip","allowGrouping","renderEmpty","setSelection","set","clearAll","k","getRowByIndex","getInfiniteRowIndex","firstRowIndex","getVirtualRowIndex","getMovableRowByIndex","module","enable","setRowObjects","immutableModeRendering","getPrimaryKeyFieldNames","oldKeys","newKeys","newRowObjs","oldIndexes","oldRowObjs","getRowsObject","batchChangeKeys","getBatchEditedRecords","newIndexes","hasBatch","oldRowElements","prevLen","currentLen","oldIndex","isEqual","objectEqualityChecker","refreshImmutableContent","setRowValue","old","next","primaryKey","changes","getBatchChanges","changedRecords","addedRecords","newRowPosition","isAltRow","enableAltRow","updateCellIndex","rowEle"],"mappings":"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","sourcesContent":["import { Droppable, isBlazor, addClass, isUndefined } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, remove, updateBlazorTemplate, removeClass } from '@syncfusion/ej2-base';\nimport { getUpdateUsingRaf, appendChildren, parentsUntil } from '../base/util';\nimport * as events from '../base/constant';\nimport { Row } from '../models/row';\nimport { RowRenderer } from './row-renderer';\nimport { CellMergeRender } from './cell-merge-renderer';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport { getScrollBarWidth, isGroupAdaptive } from '../base/util';\n/**\n * Content module is used to render grid content\n * @hidden\n */\nvar ContentRender = /** @class */ (function () {\n    /**\n     * Constructor for content renderer module\n     */\n    function ContentRender(parent, serviceLocator) {\n        var _this = this;\n        this.rows = [];\n        this.freezeRows = [];\n        this.movableRows = [];\n        this.freezeRowElements = [];\n        /** @hidden */\n        this.currentInfo = {};\n        /** @hidden */\n        this.prevCurrentView = [];\n        this.isLoaded = true;\n        this.viewColIndexes = [];\n        this.drop = function (e) {\n            if (parentsUntil(e.target, 'e-row') || parentsUntil(e.target, 'e-emptyrow')) {\n                _this.parent.notify(events.columnDrop, { target: e.target, droppedElement: e.droppedElement });\n                remove(e.droppedElement);\n            }\n        };\n        this.infiniteCache = {};\n        this.isRemove = false;\n        this.visibleRows = [];\n        this.visibleFrozenRows = [];\n        this.isAddRows = false;\n        this.isInfiniteFreeze = false;\n        this.useGroupCache = false;\n        this.mutableData = false;\n        this.rafCallback = function (args) {\n            var arg = args;\n            return function () {\n                if (_this.parent.getFrozenColumns() && _this.parent.enableVirtualization) {\n                    var mContentRows = [].slice.call(_this.parent.getMovableVirtualContent().querySelectorAll('.e-row'));\n                    var fContentRows = [].slice.call(_this.parent.getFrozenVirtualContent().querySelectorAll('.e-row'));\n                    _this.isLoaded = !mContentRows ? false : mContentRows.length === fContentRows.length;\n                    if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && _this.isLoaded) {\n                        var mHdr = [].slice.call(_this.parent.getMovableVirtualHeader().querySelectorAll('.e-row'));\n                        var fHdr = [].slice.call(_this.parent.getFrozenVirtualHeader().querySelectorAll('.e-row'));\n                        _this.isLoaded = mHdr.length === fHdr.length;\n                    }\n                }\n                _this.ariaService.setBusy(_this.getPanel().querySelector('.e-content'), false);\n                if (_this.parent.isDestroyed) {\n                    return;\n                }\n                var rows = _this.rows.slice(0);\n                if (_this.parent.getFrozenColumns() !== 0) {\n                    rows = args.isFrozen ? _this.freezeRows : _this.movableRows;\n                }\n                _this.parent.notify(events.contentReady, { rows: rows, args: arg });\n                if (_this.isLoaded) {\n                    _this.parent.trigger(events.dataBound, {}, function () {\n                        if (_this.parent.allowTextWrap) {\n                            _this.parent.notify(events.freezeRender, { case: 'textwrap' });\n                        }\n                    });\n                }\n                if (arg) {\n                    var action = (arg.requestType || '').toLowerCase() + '-complete';\n                    _this.parent.notify(action, arg);\n                    if (args.requestType === 'batchsave') {\n                        args.cancel = false;\n                        _this.parent.trigger(events.actionComplete, args);\n                    }\n                }\n                if (_this.isLoaded) {\n                    _this.parent.hideSpinner();\n                }\n            };\n        };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.ariaService = this.serviceLocator.getService('ariaService');\n        this.mutableData = this.parent.getDataModule().isRemote();\n        this.generator = this.getModelGenerator();\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization\n            && !this.parent.groupSettings.enableLazyLoading) {\n            this.parent.on(events.columnVisibilityChanged, this.setVisible, this);\n        }\n        this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);\n        this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n        this.parent.on(events.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n        this.parent.on(events.beforeCellFocused, this.beforeCellFocused, this);\n    }\n    ContentRender.prototype.beforeCellFocused = function (e) {\n        if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n            this.pressedKey = e.keyArgs.action;\n        }\n        else {\n            this.pressedKey = undefined;\n        }\n    };\n    /**\n     * The function is used to render grid content div\n     */\n    ContentRender.prototype.renderPanel = function () {\n        var gObj = this.parent;\n        var div = this.parent.element.querySelector('.e-gridcontent');\n        if (div) {\n            this.ariaService.setOptions(this.parent.element.querySelector('.e-content'), { busy: false });\n            this.setPanel(div);\n            return;\n        }\n        div = this.parent.createElement('div', { className: 'e-gridcontent' });\n        var innerDiv = this.parent.createElement('div', {\n            className: 'e-content'\n        });\n        this.ariaService.setOptions(innerDiv, { busy: false });\n        div.appendChild(innerDiv);\n        this.setPanel(div);\n        gObj.element.appendChild(div);\n    };\n    /**\n     * The function is used to render grid content table\n     */\n    ContentRender.prototype.renderTable = function () {\n        var contentDiv = this.getPanel();\n        var virtualTable = contentDiv.querySelector('.e-virtualtable');\n        var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n        if (this.parent.enableVirtualization && !isNullOrUndefined(virtualTable) && !isNullOrUndefined(virtualTrack)\n            && (!isBlazor() || (isBlazor() && !this.parent.isServerRendered))) {\n            remove(virtualTable);\n            remove(virtualTrack);\n        }\n        contentDiv.appendChild(this.createContentTable('_content_table'));\n        this.setTable(contentDiv.querySelector('.e-table'));\n        this.ariaService.setOptions(this.getTable(), {\n            multiselectable: this.parent.selectionSettings.type === 'Multiple'\n        });\n        this.initializeContentDrop();\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().classList.add('e-frozenhdrcont');\n        }\n    };\n    /**\n     * The function is used to create content table elements\n     * @return {Element}\n     * @hidden\n     */\n    ContentRender.prototype.createContentTable = function (id) {\n        var innerDiv = this.getPanel().firstElementChild;\n        if (!isBlazor()) {\n            if (this.getTable()) {\n                remove(this.getTable());\n            }\n        }\n        var table = innerDiv.querySelector('.e-table') ? innerDiv.querySelector('.e-table') :\n            this.parent.createElement('table', { className: 'e-table', attrs: {\n                    cellspacing: '0.25px', role: 'grid',\n                    id: this.parent.element.id + id\n                }\n            });\n        this.setColGroup(this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true));\n        table.appendChild(this.getColGroup());\n        table.appendChild(this.parent.createElement('tbody'));\n        innerDiv.appendChild(table);\n        return innerDiv;\n    };\n    ContentRender.prototype.splitRows = function (idx) {\n        if (this.parent.getFrozenColumns()) {\n            if (idx === 0) {\n                this.freezeRows = this.rows;\n                this.freezeRowElements = this.rowElements;\n            }\n            else {\n                this.movableRows = this.rows;\n            }\n        }\n    };\n    /**\n     * Refresh the content of the Grid.\n     * @return {void}\n     */\n    // tslint:disable-next-line:max-func-body-length\n    ContentRender.prototype.refreshContentRows = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        if (gObj.currentViewData.length === 0) {\n            return;\n        }\n        var dataSource = this.currentMovableRows || gObj.currentViewData;\n        var isReact = gObj.isReact && !isNullOrUndefined(gObj.rowTemplate);\n        var frag = isReact ? gObj.createElement('tbody') : document.createDocumentFragment();\n        if (!this.initialPageRecords) {\n            this.initialPageRecords = extend([], dataSource);\n        }\n        var hdrfrag = isReact ? gObj.createElement('tbody') : document.createDocumentFragment();\n        var columns = gObj.getColumns();\n        var tr;\n        var hdrTbody;\n        var frzCols = gObj.getFrozenColumns();\n        var trElement;\n        var row = new RowRenderer(this.serviceLocator, null, this.parent);\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling\n            && args.requestType === 'infiniteScroll';\n        this.rowElements = [];\n        this.rows = [];\n        var fCont = this.getPanel().querySelector('.e-frozencontent');\n        var mCont = this.getPanel().querySelector('.e-movablecontent');\n        var cont = this.getPanel().querySelector('.e-content');\n        if (isGroupAdaptive(gObj)) {\n            if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder']\n                .some(function (value) { return args.requestType === value; })) {\n                gObj.vcRows = [];\n                gObj.vRows = [];\n            }\n        }\n        var modelData;\n        var isServerRendered = 'isServerRendered';\n        if (isBlazor() && this.parent[isServerRendered]) {\n            modelData = this.generator.generateRows(dataSource, args);\n            if (this.parent.enableVirtualization) {\n                this.prevInfo = this.prevInfo ? this.prevInfo : args.virtualInfo;\n                this.prevInfo = args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'Y' && this.currentInfo.page &&\n                    this.currentInfo.page !== args.virtualInfo.page ? this.currentInfo : args.virtualInfo;\n            }\n            this.rows = modelData;\n            this.freezeRows = modelData;\n            this.rowElements = [].slice.call(this.getTable().querySelectorAll('tr.e-row[data-uid]'));\n            if (frzCols) {\n                this.movableRows = modelData.map(function (mRow) {\n                    var sRow = new Row(mRow);\n                    sRow.cells = mRow.cells.slice(frzCols, mRow.cells.length);\n                    mRow.cells = mRow.cells.slice(0, frzCols);\n                    return sRow;\n                });\n                this.freezeRowElements = this.rowElements;\n            }\n            this.isLoaded = true;\n            this.parent.hideSpinner();\n            args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n            var arg = extend({ rows: this.rows }, args);\n            if (this.getTable().querySelector('.e-emptyrow')) {\n                remove(this.getTable().querySelector('.e-emptyrow'));\n                if (!isNullOrUndefined(this.getTable().querySelectorAll('.e-table > tbody')[1])) {\n                    remove(this.getTable().querySelectorAll('.e-table > tbody')[1]);\n                }\n            }\n            this.parent.notify('contentcolgroup', {});\n            this.rafCallback(arg)();\n            if (frzCols) {\n                cont.style.overflowY = 'hidden';\n                fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                mCont.style.overflowY = this.parent.height !== 'auto' ? 'scroll' : 'auto';\n                fCont.style.borderRightWidth = '1px';\n                this.parent.notify(events.contentReady, { rows: this.movableRows, args: extend({}, arg, { isFrozen: false }) });\n            }\n            if (!(this.parent.isCheckBoxSelection || this.parent.selectionSettings.type === 'Multiple')\n                || (!this.parent.isPersistSelection && !this.parent.enableVirtualization)) {\n                var rowIndex = 'editRowIndex';\n                if (this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(args[rowIndex])) {\n                    this.parent.selectRow(args[rowIndex]);\n                }\n            }\n            if (this.parent.enableVirtualization && !this.parent.getHeaderContent().querySelectorAll('.e-check').length) {\n                var removeClassByUid = this.parent.getRows().filter(function (x) { return x.getAttribute('aria-selected'); })\n                    .map(function (y) { return y.getAttribute('data-uid'); });\n                var addClassByUid = this.parent.getRows().filter(function (x) { return x.getAttribute('aria-selected') === null; })\n                    .map(function (y) { return y.getAttribute('data-uid'); });\n                for (var i = 0; i < removeClassByUid.length; i++) {\n                    if (!isNullOrUndefined(this.parent.getRowObjectFromUID(removeClassByUid[i])) &&\n                        !this.parent.getRowObjectFromUID(removeClassByUid[i]).isSelected) {\n                        this.parent.getRowElementByUID(removeClassByUid[i]).removeAttribute('aria-selected');\n                        if (!isNullOrUndefined(this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check'))) {\n                            removeClass([this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check')], ['e-check']);\n                        }\n                        for (var j = 0; j < this.parent.getRowElementByUID(removeClassByUid[i]).children.length; j++) {\n                            this.parent.getRowElementByUID(removeClassByUid[i])\n                                .children[j].classList.remove('e-selectionbackground', 'e-active');\n                        }\n                    }\n                }\n                for (var i = 0; i < addClassByUid.length; i++) {\n                    if (!isNullOrUndefined(this.parent.getRowObjectFromUID(addClassByUid[i]))\n                        && this.parent.getRowObjectFromUID(addClassByUid[i]).isSelected) {\n                        this.parent.getRowElementByUID(addClassByUid[i]).setAttribute('aria-selected', 'true');\n                        if (!isNullOrUndefined(this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame'))) {\n                            addClass([this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame')], ['e-check']);\n                        }\n                        for (var j = 0; j < this.parent.getRowElementByUID(addClassByUid[i]).children.length; j++) {\n                            this.parent.getRowElementByUID(addClassByUid[i])\n                                .children[j].classList.add('e-selectionbackground', 'e-active');\n                        }\n                    }\n                }\n            }\n            return;\n        }\n        if (this.parent.enableVirtualization && this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll') {\n                if (args.virtualInfo.sentinelInfo.axis === 'X') {\n                    modelData = this.parent.contentModule.generateRows(dataSource, args);\n                    args.renderMovableContent = true;\n                }\n                else if (mCont.scrollLeft > 0 && !args.renderMovableContent) {\n                    this.viewColIndexes = args.virtualInfo.columnIndexes;\n                    var indexes = [];\n                    for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n                        indexes.push(i);\n                    }\n                    this.parent.setColumnIndexesInView(indexes);\n                    args.virtualInfo.columnIndexes = indexes;\n                }\n            }\n            modelData = this.parent.contentModule.generateRows(dataSource, args);\n        }\n        else {\n            modelData = this.checkCache(modelData, args);\n            if (!this.isAddRows && !this.useGroupCache) {\n                modelData = this.generator.generateRows(dataSource, args);\n            }\n        }\n        this.setGroupCache(modelData, args);\n        this.parent.notify(events.setInfiniteCache, { isInfiniteScroll: isInfiniteScroll, modelData: modelData, args: args });\n        if (isNullOrUndefined(modelData[0].cells[0])) {\n            mCont.querySelector('tbody').innerHTML = '';\n        }\n        var idx = modelData[0].cells[0].index;\n        if (isUndefined(idx) && this.parent.getFrozenColumns() && this.parent.isRowDragable()) {\n            idx = modelData[0].cells[1].index;\n        }\n        if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns() && args.renderMovableContent\n            && args.requestType === 'virtualscroll' && mCont.scrollLeft > 0 && args.virtualInfo.columnIndexes[0] !== 0) {\n            idx = this.parent.getFrozenColumns();\n        }\n        /* tslint:disable:no-any */\n        if (args.requestType !== 'infiniteScroll' && this.parent.registeredTemplate\n            && this.parent.registeredTemplate.template && !args.isFrozen) {\n            var templatetoclear = [];\n            for (var i = 0; i < this.parent.registeredTemplate.template.length; i++) {\n                for (var j = 0; j < this.parent.registeredTemplate.template[i].rootNodes.length; j++) {\n                    if (isNullOrUndefined(this.parent.registeredTemplate.template[i].rootNodes[j].parentNode)) {\n                        templatetoclear.push(this.parent.registeredTemplate.template[i]);\n                        /* tslint:enable:no-any */\n                    }\n                }\n            }\n            this.parent.destroyTemplate(['template'], templatetoclear);\n        }\n        if (this.parent.isReact && args.requestType !== 'infiniteScroll' && !args.isFrozen) {\n            this.parent.destroyTemplate(['template', 'rowTemplate', 'detailTemplate', 'captionTemplate', 'commandsTemplate']);\n            this.parent.renderTemplates();\n        }\n        if (this.parent.enableColumnVirtualization) {\n            var cellMerge = new CellMergeRender(this.serviceLocator, this.parent);\n            cellMerge.updateVirtualCells(modelData);\n        }\n        if (frzCols && idx >= frzCols) {\n            this.tbody = mCont.querySelector('tbody');\n        }\n        else {\n            this.tbody = this.getTable().querySelector('tbody');\n        }\n        var startIndex = 0;\n        var blockLoad = true;\n        if (isGroupAdaptive(gObj) && gObj.vcRows.length) {\n            var top_1 = 'top';\n            var scrollTop = !isNullOrUndefined(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top :\n                (!isNullOrUndefined(args.scrollTop) ? args.scrollTop[top_1] : 0);\n            if (scrollTop !== 0) {\n                var offsets_1 = gObj.vGroupOffsets;\n                var bSize = gObj.pageSettings.pageSize / 2;\n                var values = Object.keys(offsets_1).map(function (key) { return offsets_1[key]; });\n                for (var m = 0; m < values.length; m++) {\n                    if (scrollTop < values[m]) {\n                        if (!isNullOrUndefined(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n                            args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n                            startIndex = m === 0 || m === 1 ? 0 : (m * bSize);\n                            break;\n                        }\n                        else {\n                            args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n                            startIndex = m === 0 || m === 1 ? 0 : (m) * bSize;\n                            break;\n                        }\n                    }\n                }\n                if (scrollTop + this.contentPanel.firstElementChild.offsetHeight ===\n                    this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n                    blockLoad = false;\n                }\n            }\n        }\n        var isVFFrozenOnly = gObj.frozenRows && !gObj.getFrozenColumns() && this.parent.enableVirtualization\n            && args.requestType === 'reorder';\n        if ((gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X') || isVFFrozenOnly) {\n            var bIndex = args.virtualInfo.blockIndexes;\n            var page = args.virtualInfo.page;\n            args.virtualInfo.blockIndexes = [1, 2];\n            if (isVFFrozenOnly) {\n                args.virtualInfo.page = 1;\n            }\n            var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n            var mhdrData = this.vgenerator\n                .generateRows(data, args);\n            mhdrData.splice(this.parent.frozenRows);\n            for (var i = 0; i < this.parent.frozenRows; i++) {\n                mhdrData[i].cells.splice(0, this.parent.getFrozenColumns());\n                tr = row.render(mhdrData[i], columns);\n                hdrfrag.appendChild(tr);\n            }\n            args.virtualInfo.blockIndexes = bIndex;\n            args.virtualInfo.page = page;\n            if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n        }\n        this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n        for (var i = startIndex, len = modelData.length; i < len; i++) {\n            this.rows.push(modelData[i]);\n            if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n                this.setRowsInLazyGroup(modelData[i], i);\n                if (isNullOrUndefined(modelData[i].indent)) {\n                    continue;\n                }\n            }\n            this.setInfiniteVisibleRows(args, modelData[i]);\n            if (isGroupAdaptive(gObj) && this.rows.length >= (gObj.pageSettings.pageSize) && blockLoad) {\n                break;\n            }\n            if (!gObj.rowTemplate) {\n                tr = row.render(modelData[i], columns);\n                var isVFreorder = this.ensureFrozenHeaderRender(args);\n                if (gObj.frozenRows && i < gObj.frozenRows && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder) {\n                    hdrfrag.appendChild(tr);\n                }\n                else {\n                    frag.appendChild(tr);\n                }\n                if (modelData[i].isExpand) {\n                    gObj.notify(events.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n                }\n            }\n            else {\n                var rowTemplateID = gObj.element.id + 'rowTemplate';\n                var elements = void 0;\n                if (gObj.isReact) {\n                    var isHeader = gObj.frozenRows && i < gObj.frozenRows;\n                    var copied = extend({ index: i }, dataSource[i]);\n                    gObj.getRowTemplate()(copied, gObj, 'rowTemplate', rowTemplateID, null, null, isHeader ? hdrfrag : frag);\n                    gObj.renderTemplates();\n                }\n                else {\n                    elements = gObj.getRowTemplate()(extend({ index: i }, dataSource[i]), gObj, 'rowTemplate', rowTemplateID);\n                }\n                if (!gObj.isReact && elements[0].tagName === 'TBODY') {\n                    for (var j = 0; j < elements.length; j++) {\n                        var isTR = elements[j].nodeName.toLowerCase() === 'tr';\n                        if (isTR || (elements[j].querySelectorAll && elements[j].querySelectorAll('tr').length)) {\n                            tr = isTR ? elements[j] : elements[j].querySelector('tr');\n                        }\n                    }\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        hdrfrag.appendChild(tr);\n                    }\n                    else {\n                        frag.appendChild(tr);\n                    }\n                }\n                else {\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        tr = !gObj.isReact ? appendChildren(hdrfrag, elements) : hdrfrag.lastElementChild;\n                    }\n                    else {\n                        // frag.appendChild(tr);\n                        if (!gObj.isReact) {\n                            tr = appendChildren(frag, elements);\n                        }\n                        trElement = gObj.isReact ? frag.lastElementChild : tr.lastElementChild;\n                    }\n                }\n                var arg = { data: modelData[i].data, row: trElement ? trElement : tr };\n                this.parent.trigger(events.rowDataBound, arg);\n            }\n            if (modelData[i].isDataRow) {\n                this.rowElements.push(tr);\n            }\n            this.ariaService.setOptions(this.getTable(), { colcount: gObj.getColumns().length.toString() });\n        }\n        this.splitRows(idx);\n        if ((gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll)\n            || (args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X')) {\n            hdrTbody = frzCols ? gObj.getHeaderContent().querySelector(idx === 0 ? '.e-frozenheader'\n                : '.e-movableheader').querySelector('tbody') : gObj.getHeaderTable().querySelector('tbody');\n            if (isReact) {\n                var parentTable = hdrTbody.parentElement;\n                remove(hdrTbody);\n                parentTable.appendChild(hdrfrag);\n            }\n            else {\n                hdrTbody.innerHTML = '';\n                hdrTbody.appendChild(hdrfrag);\n            }\n        }\n        if (!gObj.enableVirtualization && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n            cont.style.height = (cont.offsetHeight - hdrTbody.offsetHeight) + 'px';\n        }\n        if (frzCols && idx === 0) {\n            this.getPanel().firstChild.style.overflowY = 'hidden';\n        }\n        if (!isBlazor() || this.parent.isJsComponent) {\n            args.rows = this.rows.slice(0);\n        }\n        args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n        this.index = idx;\n        getUpdateUsingRaf(function () {\n            _this.parent.notify(events.beforeFragAppend, args);\n            var isVFTable = _this.parent.enableVirtualization && _this.parent.getFrozenColumns() !== 0;\n            if (!_this.parent.enableVirtualization && !isInfiniteScroll) {\n                remove(_this.tbody);\n                _this.tbody = _this.parent.createElement('tbody');\n            }\n            if (frzCols && !isVFTable && !_this.parent.enableInfiniteScrolling) {\n                if (isReact) {\n                    _this.tbody = frag;\n                }\n                else {\n                    _this.tbody.appendChild(frag);\n                }\n                if (_this.index === 0) {\n                    _this.isLoaded = false;\n                    fCont.querySelector('table').appendChild(_this.tbody);\n                }\n                else {\n                    if (_this.tbody.childElementCount < 1) {\n                        _this.tbody.appendChild(_this.parent.createElement('tr').appendChild(_this.parent.createElement('td')));\n                    }\n                    _this.isLoaded = true;\n                    mCont.querySelector('table').appendChild(_this.tbody);\n                    if (_this.parent.getFrozenColumns() !== 0 && !_this.parent.allowTextWrap) {\n                        _this.parent.notify(events.freezeRender, { case: 'refreshHeight' });\n                    }\n                    fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                    mCont.style.overflowY = _this.parent.height !== 'auto' ? 'scroll' : 'auto';\n                    fCont.style.borderRightWidth = '1px';\n                }\n            }\n            else {\n                if (gObj.rowTemplate) {\n                    updateBlazorTemplate(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n                }\n                if (isVFTable) {\n                    if (!args.renderMovableContent) {\n                        _this.appendContent(fCont.querySelector('tbody'), frag, args);\n                        if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll'\n                            && mCont.scrollLeft > 0) {\n                            _this.parent.setColumnIndexesInView(_this.viewColIndexes);\n                            args.virtualInfo.columnIndexes = _this.viewColIndexes;\n                        }\n                    }\n                    else {\n                        _this.appendContent(mCont.querySelector('tbody'), frag, args);\n                        if (args.virtualInfo && args.virtualInfo.direction !== 'right' && args.virtualInfo.direction !== 'left') {\n                            fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                        }\n                        args.renderMovableContent = false;\n                    }\n                }\n                else {\n                    if (!isNullOrUndefined(_this.parent.infiniteScrollModule) && _this.parent.enableInfiniteScrolling) {\n                        _this.isAddRows = false;\n                        _this.parent.notify(events.removeInfiniteRows, { args: args });\n                        _this.parent.notify(events.appendInfiniteContent, {\n                            tbody: _this.tbody, frag: frag, args: args, rows: _this.rows,\n                            rowElements: _this.rowElements, visibleRows: _this.visibleRows\n                        });\n                        if (frzCols && idx !== 0) {\n                            fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                            mCont.style.overflowY = _this.parent.height !== 'auto' ? 'scroll' : 'auto';\n                            fCont.style.borderRightWidth = '1px';\n                        }\n                    }\n                    else {\n                        _this.useGroupCache = false;\n                        _this.appendContent(_this.tbody, frag, args);\n                    }\n                }\n            }\n            if (frzCols && idx === 0) {\n                if (isVFTable) {\n                    args.renderMovableContent = true;\n                }\n                _this.refreshContentRows(extend({}, args));\n            }\n            frag = null;\n        }, this.rafCallback(extend({}, args)));\n    };\n    ContentRender.prototype.appendContent = function (tbody, frag, args) {\n        var isReact = this.parent.isReact && !isNullOrUndefined(this.parent.rowTemplate);\n        if (isReact) {\n            this.getTable().appendChild(frag);\n        }\n        else {\n            tbody.appendChild(frag);\n            this.getTable().appendChild(tbody);\n        }\n    };\n    ContentRender.prototype.setRowsInLazyGroup = function (row, index) {\n        if (this.parent.groupSettings.enableLazyLoading && !this.useGroupCache && this.parent.groupSettings.columns.length) {\n            this.parent.contentModule.maintainRows(row, index);\n        }\n    };\n    ContentRender.prototype.setGroupCache = function (data, args) {\n        if (!this.useGroupCache && this.parent.groupSettings.enableLazyLoading) {\n            this.parent.notify(events.setGroupCache, { args: args, data: data });\n        }\n    };\n    ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n        return !((this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) || (this.parent.infiniteScrollSettings.enableCache\n            && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete'\n            && this.parent.pageSettings.currentPage !== 1));\n    };\n    ContentRender.prototype.checkCache = function (modelData, args) {\n        if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n            var index = args.isFrozen ? 1 : 0;\n            var frozenCols = this.parent.getFrozenColumns();\n            this.isAddRows = !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage]);\n            if (frozenCols && !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage])) {\n                this.isAddRows = this.infiniteCache[this.parent.pageSettings.currentPage][index].length !== 0;\n            }\n            if (this.isAddRows) {\n                var data = !frozenCols ? this.infiniteCache[this.parent.pageSettings.currentPage]\n                    : this.infiniteCache[this.parent.pageSettings.currentPage][index];\n                modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n            }\n            return modelData;\n        }\n        if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length &&\n            (args.requestType === 'paging' || args.requestType === 'columnstate' || args.requestType === 'reorder')\n            && this.parent.contentModule.getGroupCache()[this.parent.pageSettings.currentPage]) {\n            this.useGroupCache = true;\n            return this.parent.contentModule.initialGroupRows(args.requestType === 'reorder');\n        }\n        return null;\n    };\n    ContentRender.prototype.setInfiniteVisibleRows = function (args, data) {\n        var frozenCols = this.parent.getFrozenColumns();\n        if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache) {\n            if (frozenCols) {\n                !args.isFrozen ? this.visibleFrozenRows.push(data) : this.visibleRows.push(data);\n            }\n            else if (!this.parent.infiniteScrollSettings.enableCache) {\n                this.visibleRows.push(data);\n            }\n        }\n    };\n    ContentRender.prototype.getCurrentBlockInfiniteRecords = function (isFreeze) {\n        var data = [];\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            if (!Object.keys(this.infiniteCache).length) {\n                return [];\n            }\n            var frozenCols = this.parent.getFrozenColumns();\n            var rows = this.parent.getRows();\n            var index = parseInt(rows[this.parent.frozenRows].getAttribute('aria-rowindex'), 10);\n            var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n            index = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10);\n            var last = Math.ceil(index / this.parent.pageSettings.pageSize);\n            if (frozenCols) {\n                var idx = isFreeze ? 0 : 1;\n                for (var i = first; i <= last; i++) {\n                    data = !data.length ? this.infiniteCache[i][idx]\n                        : data.concat(this.infiniteCache[i][idx]);\n                }\n                if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n                    data = this.infiniteCache[1][idx].slice(0, this.parent.frozenRows).concat(data);\n                }\n            }\n            else {\n                for (var i = first; i <= last; i++) {\n                    data = !data.length ? this.infiniteCache[i] : data.concat(this.infiniteCache[i]);\n                }\n                if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n                    data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n                }\n            }\n        }\n        return data;\n    };\n    ContentRender.prototype.getReorderedVFRows = function (args) {\n        return this.parent.contentModule.getReorderedFrozenRows(args);\n    };\n    ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n        if (this.parent.frozenRows && this.parent.getFrozenColumns() && this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n            var tr = void 0;\n            this.currentMovableRows = dataSource;\n            var fhdrData = this.getReorderedVFRows(args);\n            for (var i = 0; i < fhdrData.length; i++) {\n                tr = row.render(fhdrData[i], columns);\n                hdrfrag.appendChild(tr);\n            }\n            if (args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n            if (args.renderMovableContent) {\n                this.parent.currentViewData = this.currentMovableRows;\n                this.currentMovableRows = null;\n            }\n        }\n    };\n    ContentRender.prototype.getInfiniteRows = function () {\n        var rows = [];\n        var frozenCols = this.parent.getFrozenColumns();\n        if (this.parent.enableInfiniteScrolling) {\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                var keys = Object.keys(this.infiniteCache);\n                for (var i = 0; i < keys.length; i++) {\n                    rows = !frozenCols ? rows.concat(this.infiniteCache[keys[i]]) : rows.concat(this.infiniteCache[keys[i]][0]);\n                }\n            }\n            else {\n                rows = frozenCols ? this.visibleFrozenRows : this.visibleRows;\n            }\n        }\n        return rows;\n    };\n    ContentRender.prototype.getInfiniteMovableRows = function () {\n        var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n        var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows\n            : this.visibleRows : [];\n        return infiniteRows;\n    };\n    /**\n     * Get the content div element of grid\n     * @return {Element}\n     */\n    ContentRender.prototype.getPanel = function () {\n        return this.contentPanel;\n    };\n    /**\n     * Set the content div element of grid\n     * @param  {Element} panel\n     */\n    ContentRender.prototype.setPanel = function (panel) {\n        this.contentPanel = panel;\n    };\n    /**\n     * Get the content table element of grid\n     * @return {Element}\n     */\n    ContentRender.prototype.getTable = function () {\n        return this.contentTable;\n    };\n    /**\n     * Set the content table element of grid\n     * @param  {Element} table\n     */\n    ContentRender.prototype.setTable = function (table) {\n        this.contentTable = table;\n    };\n    /**\n     * Get the Row collection in the Grid.\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n     */\n    ContentRender.prototype.getRows = function () {\n        var infiniteRows = this.getInfiniteRows();\n        return infiniteRows.length ? infiniteRows : this.parent.getFrozenColumns() ? this.freezeRows : this.rows;\n    };\n    /**\n     * Get the Movable Row collection in the Freeze pane Grid.\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n     */\n    ContentRender.prototype.getMovableRows = function () {\n        var infiniteRows = this.getInfiniteMovableRows();\n        return infiniteRows.length ? infiniteRows : this.movableRows;\n    };\n    /**\n     * Get the content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.getRowElements = function () {\n        return this.parent.getFrozenColumns() ? this.freezeRowElements : this.rowElements;\n    };\n    /**\n     * Get the Freeze pane movable content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.getMovableRowElements = function () {\n        return this.rowElements;\n    };\n    /**\n     * Get the content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.setRowElements = function (elements) {\n        this.rowElements = elements;\n    };\n    /**\n     * Get the header colgroup element\n     * @returns {Element}\n     */\n    ContentRender.prototype.getColGroup = function () {\n        return this.colgroup;\n    };\n    /**\n     * Set the header colgroup element\n     * @param {Element} colgroup\n     * @returns {Element}\n     */\n    ContentRender.prototype.setColGroup = function (colGroup) {\n        if (!isNullOrUndefined(colGroup)) {\n            colGroup.id = 'content-' + colGroup.id;\n        }\n        return this.colgroup = colGroup;\n    };\n    /**\n     * Function to hide content table column based on visible property\n     * @param  {Column[]} columns?\n     */\n    ContentRender.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        if (isBlazor() && gObj.isServerRendered) {\n            this.parent.notify('setvisibility', columns);\n        }\n        var frzCols = gObj.getFrozenColumns();\n        var rows = [];\n        if (frzCols) {\n            var fRows = this.freezeRows;\n            var mRows = this.movableRows;\n            var rowLen = fRows.length;\n            var cellLen = void 0;\n            for (var i = 0, row = void 0; i < rowLen; i++) {\n                cellLen = mRows[i].cells.length;\n                row = fRows[i].clone();\n                for (var j = 0; j < cellLen; j++) {\n                    row.cells.push(mRows[i].cells[j]);\n                }\n                rows.push(row);\n            }\n        }\n        else {\n            rows = this.getRows();\n        }\n        var element;\n        var testRow;\n        rows.some(function (r) { if (r.isDataRow) {\n            testRow = r;\n        } return r.isDataRow; });\n        var tasks = [];\n        var needFullRefresh = true;\n        if (!gObj.groupSettings.columns.length && testRow) {\n            needFullRefresh = false;\n        }\n        var tr = gObj.getDataRows();\n        var args = {};\n        var infiniteData = this.infiniteRowVisibility();\n        var contentrows = infiniteData ? infiniteData\n            : this.rows.filter(function (row) { return !row.isDetailRow; });\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[c];\n            var idx = this.parent.getNormalizedColumnIndex(column.uid);\n            var colIdx = this.parent.getColumnIndexByUid(column.uid);\n            var displayVal = column.visible === true ? '' : 'none';\n            if (idx !== -1 && testRow && idx < testRow.cells.length) {\n                if (frzCols) {\n                    var normalizedfrzCols = this.parent.isRowDragable() ? frzCols + 1 : frzCols;\n                    if (idx < normalizedfrzCols) {\n                        setStyleAttribute(this.getColGroup().childNodes[idx], { 'display': displayVal });\n                        var infiniteFreezeData = this.infiniteRowVisibility(true);\n                        contentrows = infiniteFreezeData ? infiniteFreezeData : this.freezeRows;\n                        tr = gObj.getDataRows();\n                    }\n                    else {\n                        var mTable = gObj.getContent().querySelector('.e-movablecontent').querySelector('colgroup');\n                        colIdx = idx = idx - frzCols;\n                        setStyleAttribute(mTable.childNodes[idx], { 'display': displayVal });\n                        tr = gObj.getMovableDataRows();\n                        var infiniteMovableData = this.infiniteRowVisibility();\n                        contentrows = infiniteMovableData ? infiniteMovableData : this.movableRows;\n                    }\n                }\n                else {\n                    setStyleAttribute(this.getColGroup().childNodes[idx], { 'display': displayVal });\n                }\n            }\n            if (!needFullRefresh) {\n                this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n            }\n            if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n                this.parent.updateMediaColumns(column);\n            }\n            this.parent.invokedFromMedia = false;\n        }\n        if (needFullRefresh) {\n            this.refreshContentRows({ requestType: 'refresh' });\n        }\n        else {\n            if (!this.parent.getFrozenColumns()) {\n                this.parent.notify(events.partialRefresh, { rows: contentrows, args: args });\n            }\n            else {\n                this.parent.notify(events.partialRefresh, { rows: this.freezeRows, args: { isFrozen: true, rows: this.freezeRows } });\n                this.parent.notify(events.partialRefresh, { rows: this.movableRows, args: { isFrozen: false, rows: this.movableRows } });\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n        var trs = Object.keys(tr);\n        for (var i = 0; i < trs.length; i++) {\n            var td = tr[trs[i]].querySelectorAll('td.e-rowcell')[idx];\n            if (tr[trs[i]].querySelectorAll('td.e-rowcell').length && td) {\n                setStyleAttribute(tr[trs[i]].querySelectorAll('td.e-rowcell')[idx], { 'display': displayVal });\n                if (tr[trs[i]].querySelectorAll('td.e-rowcell')[idx].classList.contains('e-hide')) {\n                    removeClass([tr[trs[i]].querySelectorAll('td.e-rowcell')[idx]], ['e-hide']);\n                }\n                if (this.parent.isRowDragable()) {\n                    var index = this.parent.getFrozenColumns() ? idx : idx + 1;\n                    rows[trs[i]].cells[index].visible = displayVal === '' ? true : false;\n                }\n                else {\n                    rows[trs[i]].cells[idx].visible = displayVal === '' ? true : false;\n                }\n            }\n        }\n        this.parent.notify(events.infiniteShowHide, { visible: displayVal, index: idx, isFreeze: this.isInfiniteFreeze });\n    };\n    ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n        var infiniteData;\n        if (this.parent.enableInfiniteScrolling) {\n            this.isInfiniteFreeze = isFreeze;\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                infiniteData = isFreeze ? this.getCurrentBlockInfiniteRecords(true) : this.getCurrentBlockInfiniteRecords();\n            }\n            else {\n                infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n            }\n        }\n        return infiniteData;\n    };\n    ContentRender.prototype.colGroupRefresh = function () {\n        if (this.getColGroup()) {\n            var colGroup = void 0;\n            if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns()\n                && this.parent.contentModule.isXaxis()) {\n                colGroup = this.parent.getMovableVirtualHeader().querySelector('colgroup').cloneNode(true);\n            }\n            else {\n                colGroup = isBlazor() ? this.parent.getHeaderTable().querySelector('colgroup').cloneNode(true) :\n                    this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true);\n            }\n            this.getTable().replaceChild(colGroup, this.getColGroup());\n            this.setColGroup(colGroup);\n        }\n    };\n    ContentRender.prototype.initializeContentDrop = function () {\n        var gObj = this.parent;\n        var drop = new Droppable(gObj.element, {\n            accept: '.e-dragclone',\n            drop: this.drop\n        });\n    };\n    ContentRender.prototype.canSkip = function (column, row, index) {\n        /**\n         * Skip the toggle visiblity operation when one of the following success\n         * 1. Grid has empty records\n         * 2. column visible property is unchanged\n         * 3. cell`s isVisible property is same as column`s visible property.\n         */\n        return isNullOrUndefined(row) || //(1)\n            isNullOrUndefined(column.visible) || //(2)    \n            row.cells[index].visible === column.visible; //(3)\n    };\n    ContentRender.prototype.getModelGenerator = function () {\n        return this.generator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    };\n    ContentRender.prototype.renderEmpty = function (tbody) {\n        if (isBlazor() && !this.parent.isJsComponent && this.parent.frozenRows) {\n            return;\n        }\n        this.getTable().appendChild(tbody);\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().querySelector('tbody').innerHTML = '';\n        }\n    };\n    ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n        if (this.parent.getFrozenColumns()) {\n            var rows = this.getMovableRows().filter(function (row) { return clearAll || uid === row.uid; });\n            for (var i = 0; i < rows.length; i++) {\n                rows[i].isSelected = set;\n            }\n        }\n        var row = this.getRows().filter(function (row) { return clearAll || uid === row.uid; });\n        for (var j = 0; j < row.length; j++) {\n            row[j].isSelected = set;\n            var cells = row[j].cells;\n            for (var k = 0; k < cells.length; k++) {\n                cells[k].isSelected = set;\n            }\n        }\n    };\n    ContentRender.prototype.getRowByIndex = function (index) {\n        index = this.getInfiniteRowIndex(index);\n        return this.parent.getDataRows()[index];\n    };\n    ContentRender.prototype.getInfiniteRowIndex = function (index) {\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            var fRows = this.parent.frozenRows;\n            var idx = fRows > index ? 0 : fRows;\n            var firstRowIndex = parseInt(this.parent.getRows()[idx].getAttribute('aria-rowindex'), 10);\n            index = fRows > index ? index : (index - firstRowIndex) + fRows;\n        }\n        return index;\n    };\n    ContentRender.prototype.getVirtualRowIndex = function (index) {\n        return index;\n    };\n    ContentRender.prototype.getMovableRowByIndex = function (index) {\n        index = this.getInfiniteRowIndex(index);\n        return this.parent.getMovableDataRows()[index];\n    };\n    ContentRender.prototype.enableAfterRender = function (e) {\n        if (e.module === 'group' && e.enable) {\n            this.generator = this.getModelGenerator();\n        }\n    };\n    ContentRender.prototype.setRowObjects = function (rows) {\n        this.rows = rows;\n    };\n    /** @hidden */\n    ContentRender.prototype.immutableModeRendering = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        gObj.hideSpinner();\n        var key = gObj.getPrimaryKeyFieldNames()[0];\n        var oldKeys = {};\n        var newKeys = {};\n        var newRowObjs = [];\n        var oldIndexes = {};\n        var oldRowObjs = gObj.getRowsObject().slice();\n        var batchChangeKeys = this.getBatchEditedRecords(key, oldRowObjs);\n        var newIndexes = {};\n        var hasBatch = Object.keys(batchChangeKeys).length !== 0;\n        if (gObj.getContent().querySelector('.e-emptyrow') || args.requestType === 'reorder'\n            || this.parent.groupSettings.columns.length) {\n            this.refreshContentRows(args);\n        }\n        else {\n            if (gObj.currentViewData.length === 0) {\n                return;\n            }\n            var oldRowElements = {};\n            var tbody = gObj.createElement('tbody');\n            var dataSource = gObj.currentViewData;\n            var trs = [].slice.call(this.getTable().querySelector('tbody').children);\n            if (this.prevCurrentView.length) {\n                var prevLen = this.prevCurrentView.length;\n                var currentLen = dataSource.length;\n                if (prevLen === currentLen) {\n                    for (var i = 0; i < currentLen; i++) {\n                        newKeys[dataSource[i][key]] = oldKeys[this.prevCurrentView[i][key]] = i;\n                        newIndexes[i] = dataSource[i][key];\n                        oldRowElements[oldRowObjs[i].uid] = trs[i];\n                        oldIndexes[i] = this.prevCurrentView[i][key];\n                    }\n                }\n                else {\n                    for (var i = 0; i < currentLen; i++) {\n                        newKeys[dataSource[i][key]] = i;\n                        newIndexes[i] = dataSource[i][key];\n                    }\n                    for (var i = 0; i < prevLen; i++) {\n                        oldRowElements[oldRowObjs[i].uid] = trs[i];\n                        oldKeys[this.prevCurrentView[i][key]] = i;\n                        oldIndexes[i] = this.prevCurrentView[i][key];\n                    }\n                }\n            }\n            for (var i = 0; i < dataSource.length; i++) {\n                var oldIndex = oldKeys[dataSource[i][key]];\n                if (!isNullOrUndefined(oldIndex)) {\n                    var isEqual = false;\n                    if (this.mutableData) {\n                        isEqual = this.objectEqualityChecker(this.prevCurrentView[i], dataSource[i]);\n                    }\n                    var tr = oldRowElements[oldRowObjs[oldIndex].uid];\n                    newRowObjs.push(gObj.getRowsObject()[oldIndex]);\n                    if (this.rowElements[i] && this.rowElements[i].getAttribute('data-uid') === newRowObjs[i].uid\n                        && ((hasBatch && isNullOrUndefined(batchChangeKeys[newIndexes[i]]))\n                            || (!hasBatch && (isEqual || this.prevCurrentView[i] === dataSource[i])))) {\n                        if (oldIndex !== i) {\n                            this.refreshImmutableContent(i, tr, newRowObjs[i]);\n                        }\n                        tbody.appendChild(tr);\n                        continue;\n                    }\n                    if ((hasBatch && !isNullOrUndefined(batchChangeKeys[newIndexes[i]]))\n                        || (!this.mutableData && dataSource[i] !== this.prevCurrentView[oldIndex])\n                        || (this.mutableData && !isEqual)) {\n                        oldRowObjs[oldIndex].setRowValue(dataSource[i]);\n                    }\n                    tbody.appendChild(tr);\n                    this.refreshImmutableContent(i, tr, newRowObjs[i]);\n                }\n                else {\n                    var row = new RowRenderer(this.serviceLocator, null, gObj);\n                    var modelData = this.generator.generateRows([dataSource[i]]);\n                    newRowObjs.push(modelData[0]);\n                    var tr = row.render(modelData[0], gObj.getColumns());\n                    tbody.appendChild(tr);\n                    this.refreshImmutableContent(i, tr, newRowObjs[i]);\n                }\n            }\n            this.rows = newRowObjs;\n            this.rowElements = [].slice.call(tbody.children);\n            remove(this.getTable().querySelector('tbody'));\n            this.getTable().appendChild(tbody);\n            this.parent.trigger(events.dataBound, {}, function () {\n                if (_this.parent.allowTextWrap) {\n                    _this.parent.notify(events.freezeRender, { case: 'textwrap' });\n                }\n            });\n            if (args) {\n                var action = (args.requestType || '').toLowerCase() + '-complete';\n                this.parent.notify(action, args);\n            }\n        }\n    };\n    ContentRender.prototype.objectEqualityChecker = function (old, next) {\n        var keys = Object.keys(old);\n        var isEqual = true;\n        for (var i = 0; i < keys.length; i++) {\n            if (old[keys[i]] !== next[keys[i]]) {\n                isEqual = false;\n                break;\n            }\n        }\n        return isEqual;\n    };\n    ContentRender.prototype.getBatchEditedRecords = function (primaryKey, rows) {\n        var keys = {};\n        var changes = this.parent.getBatchChanges();\n        var changedRecords = [];\n        var addedRecords = [];\n        if (Object.keys(changes).length) {\n            changedRecords = changes.changedRecords;\n            addedRecords = changes.addedRecords;\n        }\n        if (addedRecords.length) {\n            if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                rows.splice(rows.length - 1, addedRecords.length);\n            }\n            else {\n                rows.splice(0, addedRecords.length);\n            }\n        }\n        for (var i = 0; i < changedRecords.length; i++) {\n            keys[changedRecords[i][primaryKey]] = i;\n        }\n        return keys;\n    };\n    ContentRender.prototype.refreshImmutableContent = function (index, tr, row) {\n        row.isAltRow = this.parent.enableAltRow ? index % 2 !== 0 : false;\n        row.isAltRow ? tr.classList.add('e-altrow') : tr.classList.remove('e-altrow');\n        tr.setAttribute('aria-rowindex', index.toString());\n        this.updateCellIndex(tr, index);\n    };\n    ContentRender.prototype.updateCellIndex = function (rowEle, index) {\n        for (var i = 0; i < rowEle.cells.length; i++) {\n            rowEle.cells[i].setAttribute('index', index.toString());\n        }\n    };\n    return ContentRender;\n}());\nexport { ContentRender };\n"]},"metadata":{},"sourceType":"module"}