{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, setValue, getValue, isBlazor, blazorTemplates } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, updateBlazorTemplate, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable } from './util';\nimport { setRowElements, resetRowIndex, compareChanges } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { gridObserver } from '../actions/blazor-action';\nimport { RowModelGenerator } from '../services/row-model-generator';\n/**\n * Represents the field name and direction of sort column.\n */\n\nvar SortDescriptor =\n/** @class */\nfunction (_super) {\n  __extends(SortDescriptor, _super);\n\n  function SortDescriptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], SortDescriptor.prototype, \"field\", void 0);\n\n  __decorate([Property()], SortDescriptor.prototype, \"direction\", void 0);\n\n  __decorate([Property(false)], SortDescriptor.prototype, \"isFromGroup\", void 0);\n\n  return SortDescriptor;\n}(ChildProperty);\n\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\n\nvar SortSettings =\n/** @class */\nfunction (_super) {\n  __extends(SortSettings, _super);\n\n  function SortSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], SortDescriptor)], SortSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], SortSettings.prototype, \"allowUnsort\", void 0);\n\n  return SortSettings;\n}(ChildProperty);\n\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\n\nvar Predicate =\n/** @class */\nfunction (_super) {\n  __extends(Predicate, _super);\n\n  function Predicate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], Predicate.prototype, \"field\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"operator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"value\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"matchCase\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"predicate\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualFilterValue\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualOperator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"type\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"ejpredicate\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"uid\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"isForeignKey\", void 0);\n\n  return Predicate;\n}(ChildProperty);\n\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\n\nvar InfiniteScrollSettings =\n/** @class */\nfunction (_super) {\n  __extends(InfiniteScrollSettings, _super);\n\n  function InfiniteScrollSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n\n  return InfiniteScrollSettings;\n}(ChildProperty);\n\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\n\nvar FilterSettings =\n/** @class */\nfunction (_super) {\n  __extends(FilterSettings, _super);\n\n  function FilterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], Predicate)], FilterSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property('FilterBar')], FilterSettings.prototype, \"type\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n\n  __decorate([Property(1500)], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"operators\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n\n  return FilterSettings;\n}(ChildProperty);\n\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\n\nvar SelectionSettings =\n/** @class */\nfunction (_super) {\n  __extends(SelectionSettings, _super);\n\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Row')], SelectionSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property('Flow')], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n\n  __decorate([Property('Single')], SelectionSettings.prototype, \"type\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"persistSelection\", void 0);\n\n  __decorate([Property('Default')], SelectionSettings.prototype, \"checkboxMode\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n\n  __decorate([Property(true)], SelectionSettings.prototype, \"enableToggle\", void 0);\n\n  return SelectionSettings;\n}(ChildProperty);\n\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\n\nvar SearchSettings =\n/** @class */\nfunction (_super) {\n  __extends(SearchSettings, _super);\n\n  function SearchSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property([])], SearchSettings.prototype, \"fields\", void 0);\n\n  __decorate([Property('')], SearchSettings.prototype, \"key\", void 0);\n\n  __decorate([Property('contains')], SearchSettings.prototype, \"operator\", void 0);\n\n  __decorate([Property(true)], SearchSettings.prototype, \"ignoreCase\", void 0);\n\n  __decorate([Property(false)], SearchSettings.prototype, \"ignoreAccent\", void 0);\n\n  return SearchSettings;\n}(ChildProperty);\n\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\n\nvar RowDropSettings =\n/** @class */\nfunction (_super) {\n  __extends(RowDropSettings, _super);\n\n  function RowDropSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], RowDropSettings.prototype, \"targetID\", void 0);\n\n  return RowDropSettings;\n}(ChildProperty);\n\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\n\nvar TextWrapSettings =\n/** @class */\nfunction (_super) {\n  __extends(TextWrapSettings, _super);\n\n  function TextWrapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Both')], TextWrapSettings.prototype, \"wrapMode\", void 0);\n\n  return TextWrapSettings;\n}(ChildProperty);\n\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\n\nvar ResizeSettings =\n/** @class */\nfunction (_super) {\n  __extends(ResizeSettings, _super);\n\n  function ResizeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Normal')], ResizeSettings.prototype, \"mode\", void 0);\n\n  return ResizeSettings;\n}(ChildProperty);\n\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\n\nvar GroupSettings =\n/** @class */\nfunction (_super) {\n  __extends(GroupSettings, _super);\n\n  function GroupSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showDropArea\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showToggleButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showUngroupButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n\n  __decorate([Property([])], GroupSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property()], GroupSettings.prototype, \"captionTemplate\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n\n  return GroupSettings;\n}(ChildProperty);\n\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\n\nvar EditSettings =\n/** @class */\nfunction (_super) {\n  __extends(EditSettings, _super);\n\n  function EditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowAdding\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowEditing\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowDeleting\", void 0);\n\n  __decorate([Property('Normal')], EditSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"showConfirmDialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"template\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"headerTemplate\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"footerTemplate\", void 0);\n\n  __decorate([Property('Top')], EditSettings.prototype, \"newRowPosition\", void 0);\n\n  __decorate([Property({})], EditSettings.prototype, \"dialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n\n  return EditSettings;\n}(ChildProperty);\n\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n  /**\n   * Constructor for creating the component\n   * @hidden\n   */\n\n\n  function Grid(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.isPreventScrollEvent = false;\n    _this.inViewIndexes = [];\n    _this.keyA = false;\n    _this.media = {};\n    _this.componentRefresh = Component.prototype.refresh;\n    /** @hidden */\n\n    _this.isVirtualAdaptive = false;\n    /** @hidden */\n\n    _this.vRows = [];\n    /** @hidden */\n\n    _this.vcRows = [];\n    /** @hidden */\n\n    _this.vGroupOffsets = {};\n    /** @hidden */\n\n    _this.rowUid = 0;\n    /**\n     * Gets the currently visible records of the Grid.\n     */\n\n    _this.currentViewData = [];\n    /** @hidden */\n\n    _this.lockcolPositionCount = 0;\n    /** @hidden */\n\n    _this.prevPageMoving = false;\n    /** @hidden */\n\n    _this.pageTemplateChange = false;\n    /** @hidden */\n\n    _this.isAutoGen = false;\n    _this.mediaBindInstance = {};\n    /** @hidden */\n\n    _this.commandDelIndex = undefined;\n    /** @hidden */\n\n    _this.asyncTimeOut = 50; // enable/disable logger for MVC & Core\n\n    _this.enableLogger = true;\n    _this.needsID = true;\n    Grid_1.Inject(Selection);\n    setValue('mergePersistData', _this.mergePersistGridData, _this);\n    return _this;\n  }\n\n  Grid_1 = Grid;\n  /**\n   * Get the properties to be maintained in the persisted state.\n   * @return {string}\n   */\n\n  Grid.prototype.getPersistData = function () {\n    var keyEntity = ['pageSettings', 'sortSettings', 'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n    var ignoreOnPersist = {\n      pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n      filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n      groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton', 'disablePageWiseAggregates', 'hideCaptionCount'],\n      searchSettings: ['fields', 'operator', 'ignoreCase'],\n      sortSettings: [],\n      columns: [],\n      selectedRowIndex: [],\n      scrollPosition: []\n    };\n    var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template', 'commandTemplate', 'commands', 'dataSource', 'headerText'];\n\n    for (var i = 0; i < keyEntity.length; i++) {\n      var currentObject = this[keyEntity[i]];\n\n      for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n        var val = _a[_i];\n        delete currentObject[val];\n      }\n    }\n\n    this.pageSettings.template = undefined;\n    /* tslint:disable-next-line:no-any */\n\n    if (this.isAngular) {\n      /* tslint:disable:no-string-literal */\n      delete this.groupSettings['properties']['captionTemplate'];\n    }\n\n    this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n    return this.addOnPersist(keyEntity);\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   * @return {ModuleDeclaration[]}\n   * @hidden\n   */\n\n\n  Grid.prototype.requiredModules = function () {\n    var modules = [];\n\n    if (this.isDestroyed) {\n      return modules;\n    }\n\n    if (this.allowFiltering) {\n      modules.push({\n        member: 'filter',\n        args: [this, this.filterSettings, this.serviceLocator]\n      });\n    }\n\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'ExcelExport',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'PdfExport',\n        args: [this]\n      });\n    }\n\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPaging) {\n      modules.push({\n        member: 'pager',\n        args: [this, this.pageSettings]\n      });\n    }\n\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this, this.selectionSettings, this.serviceLocator]\n      });\n    }\n\n    modules.push({\n      member: 'resize',\n      args: [this]\n    });\n\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this]\n      });\n    }\n\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this]\n      });\n    }\n\n    if (this.allowGrouping) {\n      modules.push({\n        member: 'group',\n        args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.aggregates.length) {\n      modules.push({\n        member: 'aggregate',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isDetail()) {\n      modules.push({\n        member: 'detailRow',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.toolbar || this.toolbarTemplate) {\n      modules.push({\n        member: 'toolbar',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      modules.push({\n        member: 'virtualscroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.getFrozenColumns() || this.frozenRows) {\n      modules.push({\n        member: 'freeze',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isCommandColumn(this.columns)) {\n      modules.push({\n        member: 'commandColumn',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n      modules.push({\n        member: 'edit',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    this.extendRequiredModules(modules);\n    return modules;\n  };\n\n  Grid.prototype.extendRequiredModules = function (modules) {\n    if (this.enableInfiniteScrolling) {\n      modules.push({\n        member: 'infiniteScroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.groupSettings.enableLazyLoading) {\n      modules.push({\n        member: 'lazyLoadGroup',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.contextMenuItems) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnChooser) {\n      modules.push({\n        member: 'columnChooser',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isForeignKeyEnabled(this.columns)) {\n      modules.push({\n        member: 'foreignKey',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableLogger) {\n      modules.push({\n        member: 'logger',\n        args: [this]\n      });\n    }\n\n    if (isBlazor()) {\n      modules.push({\n        member: 'blazor',\n        args: [this]\n      });\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler;\n   * @private\n   */\n\n\n  Grid.prototype.preRender = function () {\n    this.serviceLocator = new ServiceLocator();\n    this.initProperties();\n    this.initializeServices();\n  };\n\n  Grid.prototype.initProperties = function () {\n    /* tslint:disable */\n    this.isInitial = true;\n    this.sortedColumns = [];\n    this.inViewIndexes = [];\n    this.mediaCol = [];\n    this.isInitialLoad = false;\n    this.allowServerDataBinding = false;\n    this.ignoreCollectionWatch = true;\n\n    if (isBlazor() && this.enableVirtualization && this.allowGrouping) {\n      var isExpanded = 'isExpanded';\n      this[isExpanded] = false;\n    }\n\n    this.mergeCells = {};\n    this.isEdit = false;\n    this.checkAllRows = 'None';\n    this.isCheckBoxSelection = false;\n    this.isPersistSelection = false;\n    this.componentRefresh = Component.prototype.refresh;\n    this.filterOperators = {\n      contains: 'contains',\n      endsWith: 'endswith',\n      equal: 'equal',\n      greaterThan: 'greaterthan',\n      greaterThanOrEqual: 'greaterthanorequal',\n      lessThan: 'lessthan',\n      lessThanOrEqual: 'lessthanorequal',\n      notEqual: 'notequal',\n      startsWith: 'startswith'\n    };\n    this.defaultLocale = {\n      EmptyRecord: 'No records to display',\n      True: 'true',\n      False: 'false',\n      InvalidFilterMessage: 'Invalid Filter Data',\n      GroupDropArea: 'Drag a column header here to group its column',\n      UnGroup: 'Click here to ungroup',\n      UnGroupButton: 'Click here to ungroup',\n      GroupDisable: 'Grouping is disabled for this column',\n      FilterbarTitle: '\\'s filter bar cell',\n      EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n      // Toolbar Items\n      Add: 'Add',\n      Edit: 'Edit',\n      Cancel: 'Cancel',\n      Update: 'Update',\n      Delete: 'Delete',\n      Print: 'Print',\n      Pdfexport: 'PDF Export',\n      Excelexport: 'Excel Export',\n      Wordexport: 'Word Export',\n      Csvexport: 'CSV Export',\n      Search: 'Search',\n      Columnchooser: 'Columns',\n      Save: 'Save',\n      Item: 'item',\n      Items: 'items',\n      EditOperationAlert: 'No records selected for edit operation',\n      DeleteOperationAlert: 'No records selected for delete operation',\n      SaveButton: 'Save',\n      OKButton: 'OK',\n      CancelButton: 'Cancel',\n      EditFormTitle: 'Details of ',\n      AddFormTitle: 'Add New Record',\n      BatchSaveConfirm: 'Are you sure you want to save changes?',\n      BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n      ConfirmDelete: 'Are you sure you want to Delete Record?',\n      CancelEdit: 'Are you sure you want to Cancel the changes?',\n      ChooseColumns: 'Choose Column',\n      SearchColumns: 'search columns',\n      Matchs: 'No Matches Found',\n      FilterButton: 'Filter',\n      ClearButton: 'Clear',\n      StartsWith: 'Starts With',\n      EndsWith: 'Ends With',\n      Contains: 'Contains',\n      Equal: 'Equal',\n      NotEqual: 'Not Equal',\n      LessThan: 'Less Than',\n      LessThanOrEqual: 'Less Than Or Equal',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqual: 'Greater Than Or Equal',\n      ChooseDate: 'Choose a Date',\n      EnterValue: 'Enter the value',\n      Copy: 'Copy',\n      Group: 'Group by this column',\n      Ungroup: 'Ungroup by this column',\n      autoFitAll: 'Autofit all columns',\n      autoFit: 'Autofit this column',\n      AutoFitAll: 'Autofit all columns',\n      AutoFit: 'Autofit this column',\n      Export: 'Export',\n      FirstPage: 'First Page',\n      LastPage: 'Last Page',\n      PreviousPage: 'Previous Page',\n      NextPage: 'Next Page',\n      SortAscending: 'Sort Ascending',\n      SortDescending: 'Sort Descending',\n      EditRecord: 'Edit Record',\n      DeleteRecord: 'Delete Record',\n      FilterMenu: 'Filter',\n      SelectAll: 'Select All',\n      Blanks: 'Blanks',\n      FilterTrue: 'True',\n      FilterFalse: 'False',\n      NoResult: 'No Matches Found',\n      ClearFilter: 'Clear Filter',\n      NumberFilter: 'Number Filters',\n      TextFilter: 'Text Filters',\n      DateFilter: 'Date Filters',\n      DateTimeFilter: 'DateTime Filters',\n      MatchCase: 'Match Case',\n      Between: 'Between',\n      CustomFilter: 'Custom Filter',\n      CustomFilterPlaceHolder: 'Enter the value',\n      CustomFilterDatePlaceHolder: 'Choose a date',\n      AND: 'AND',\n      OR: 'OR',\n      ShowRowsWhere: 'Show rows where:',\n      FilterMenuDialogARIA: 'Filter menu dialog',\n      ExcelFilterDialogARIA: 'Excel filter dialog',\n      DialogEditARIA: 'Edit dialog',\n      ColumnChooserDialogARIA: 'Column chooser dialog',\n      ColumnMenuDialogARIA: 'Column menu dialog',\n      CustomFilterDialogARIA: 'Customer filter dialog'\n    };\n    this.keyConfigs = {\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      rightArrow: 'rightarrow',\n      leftArrow: 'leftarrow',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftRight: 'shift+rightarrow',\n      shiftLeft: 'shift+leftarrow',\n      home: 'home',\n      end: 'end',\n      escape: 'escape',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      pageUp: 'pageup',\n      pageDown: 'pagedown',\n      ctrlAltPageUp: 'ctrl+alt+pageup',\n      ctrlAltPageDown: 'ctrl+alt+pagedown',\n      altPageUp: 'alt+pageup',\n      altPageDown: 'alt+pagedown',\n      altDownArrow: 'alt+downarrow',\n      altUpArrow: 'alt+uparrow',\n      ctrlDownArrow: 'ctrl+downarrow',\n      ctrlUpArrow: 'ctrl+uparrow',\n      ctrlPlusA: 'ctrl+A',\n      ctrlPlusP: 'ctrl+P',\n      insert: 'insert',\n      delete: 'delete',\n      f2: 'f2',\n      enter: 'enter',\n      ctrlEnter: 'ctrl+enter',\n      shiftEnter: 'shift+enter',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      space: 'space',\n      ctrlPlusC: 'ctrl+C',\n      ctrlShiftPlusH: 'ctrl+shift+H',\n      ctrlSpace: 'ctrl+space',\n      ctrlLeftArrow: 'ctrl+leftarrow',\n      ctrlRightArrow: 'ctrl+rightarrow'\n    };\n    /* tslint:enable */\n  };\n  /**\n   * For internal use only - To Initialize the component rendering.\n   * @private\n   */\n\n\n  Grid.prototype.render = function () {\n    this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n    this.ariaService.setOptions(this.element, {\n      role: 'grid'\n    });\n\n    if (isBlazor()) {\n      this.renderComplete();\n    }\n\n    createSpinner({\n      target: this.element\n    }, this.createElement);\n    this.renderModule = new Render(this, this.serviceLocator);\n    this.searchModule = new Search(this);\n    this.scrollModule = new Scroll(this);\n    this.notify(events.initialLoad, {});\n\n    if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n      this.isVirtualAdaptive = true;\n    }\n\n    this.trigger(events.load);\n    prepareColumns(this.columns, this.enableColumnVirtualization);\n\n    if (this.enablePersistence) {\n      this.notify(events.columnsPrepared, {});\n    }\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      this.getMediaColumns();\n      setColumnIndex(this.columns);\n    }\n\n    this.checkLockColumns(this.columns);\n    this.getColumns();\n    this.processModel();\n    this.gridRender();\n    this.wireEvents();\n    this.addListener();\n    this.updateDefaultCursor();\n    this.updateStackedFilter();\n    this.showSpinner();\n    this.notify(events.initialEnd, {});\n\n    if (isBlazor() && this.isServerRendered) {\n      gridObserver.notify(events.componentRendered, {\n        id: this.element.id,\n        grid: this\n      });\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   */\n\n\n  Grid.prototype.showSpinner = function () {\n    showSpinner(this.element);\n  };\n  /**\n   * Manually showed spinner needs to hide by `hideSpinnner`.\n   */\n\n\n  Grid.prototype.hideSpinner = function () {\n    hideSpinner(this.element);\n  };\n\n  Grid.prototype.updateStackedFilter = function () {\n    if (this.allowFiltering && this.filterSettings.type === 'FilterBar' && this.getHeaderContent().querySelectorAll('.e-stackedheadercell').length) {\n      this.getHeaderContent().classList.add('e-stackedfilter');\n    } else {\n      this.getHeaderContent().classList.remove('e-stackedfilter');\n    }\n  };\n\n  Grid.prototype.getMediaColumns = function () {\n    if (!this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      this.getShowHideService = this.serviceLocator.getService('showHideService');\n\n      if (!isNullOrUndefined(gcol)) {\n        for (var index = 0; index < gcol.length; index++) {\n          if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n            this.pushMediaColumn(gcol[index], index);\n          }\n        }\n      }\n    }\n  };\n\n  Grid.prototype.pushMediaColumn = function (col, index) {\n    this.mediaCol.push(col);\n    this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n    this.mediaQueryUpdate(index, this.media[col.uid]);\n    this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n    this.media[col.uid].addListener(this.mediaBindInstance[index]);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.updateMediaColumns = function (col) {\n    if (!this.enableColumnVirtualization) {\n      var index = this.getColumnIndexByUid(col.uid);\n\n      for (var i = 0; i < this.mediaCol.length; i++) {\n        if (col.uid === this.mediaCol[i].uid) {\n          this.mediaCol.splice(i, 1);\n          return;\n        }\n      }\n\n      this.pushMediaColumn(col, index);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n    var col = this.getColumns()[columnIndex];\n\n    if (this.mediaCol.some(function (mediaColumn) {\n      return mediaColumn.uid === col.uid;\n    })) {\n      col.visible = e.matches;\n\n      if (this.isInitialLoad) {\n        this.invokedFromMedia = true;\n\n        if (col.visible) {\n          this.showHider.show(col.headerText, 'headerText');\n        } else {\n          this.showHider.hide(col.headerText, 'headerText');\n        }\n      }\n    }\n  };\n\n  Grid.prototype.refreshMediaCol = function () {\n    this.isInitialLoad = true;\n    var footerContent = this.element.querySelector('.e-gridfooter');\n\n    if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n      addClass([footerContent], ['e-footerpadding']);\n    }\n\n    var checkboxColumn = this.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      this.isCheckBoxSelection = false;\n    }\n  };\n\n  Grid.prototype.removeMediaListener = function () {\n    for (var i = 0; i < this.mediaCol.length; i++) {\n      this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   * @private\n   */\n\n\n  Grid.prototype.eventInitializer = function () {//eventInitializer\n  };\n  /**\n   * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n   * @method destroy\n   * @return {void}\n   */\n\n\n  Grid.prototype.destroy = function () {\n    var gridElement = this.element;\n\n    if (!gridElement) {\n      return;\n    }\n\n    var hasGridChild = gridElement.querySelector('.e-gridheader') && gridElement.querySelector('.e-gridcontent') ? true : false;\n\n    if (hasGridChild) {\n      this.unwireEvents();\n    }\n\n    this.removeListener();\n    this.removeMediaListener();\n    this.notify(events.destroy, {});\n    this.destroyDependentModules();\n\n    if (hasGridChild) {\n      _super.prototype.destroy.call(this);\n    }\n\n    this.toolTipObj.destroy();\n    var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService', 'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider', 'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[i]]) {\n        this[modules[i]] = null;\n      }\n    }\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      this.element.innerHTML = '';\n    } else {\n      this.element.style.display = 'none';\n    }\n\n    classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n  };\n\n  Grid.prototype.destroyDependentModules = function () {\n    var gridElement = this.element;\n\n    if (!gridElement || !gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent')) {\n      return;\n    }\n\n    this.scrollModule.destroy();\n    this.keyboardModule.destroy();\n    this.focusModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  Grid.prototype.getModuleName = function () {\n    return 'grid';\n  };\n\n  Grid.prototype.enableBoxSelection = function () {\n    if (this.enableAutoFill) {\n      this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n      this.element.classList.add('e-afenabled');\n    } else {\n      this.element.classList.remove('e-afenabled');\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * @hidden\n   */\n\n  /* tslint:disable-next-line:max-line-length */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var requireRefresh = false;\n    var requireGridRefresh = false;\n    var freezeRefresh = false;\n    var checkCursor;\n    var args = {\n      requestType: 'refresh'\n    };\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.log('module_missing');\n    var properties = Object.keys(newProp);\n\n    if (properties.indexOf('columns') > -1) {\n      this.updateColumnObject();\n      requireGridRefresh = true;\n    }\n\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n\n      switch (prop) {\n        case 'allowPaging':\n          this.notify(events.uiUpdate, {\n            module: 'pager',\n            enable: this.allowPaging\n          });\n          requireRefresh = true;\n          break;\n\n        case 'pageSettings':\n          if (this.pageTemplateChange) {\n            this.pageTemplateChange = false;\n            this.notify(events.inBoundModelChanged, {\n              module: 'pager',\n              properties: newProp.pageSettings\n            });\n            break;\n          }\n\n          this.notify(events.inBoundModelChanged, {\n            module: 'pager',\n            properties: newProp.pageSettings\n          });\n\n          if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize) && isNullOrUndefined(newProp.pageSettings.totalRecordsCount) || !isNullOrUndefined(oldProp.pageSettings) && newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize) {\n            requireRefresh = true;\n          }\n\n          break;\n\n        case 'allowSorting':\n          this.notify(events.uiUpdate, {\n            module: 'sort',\n            enable: this.allowSorting\n          });\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'allowFiltering':\n          this.updateStackedFilter();\n          this.notify(events.uiUpdate, {\n            module: 'filter',\n            enable: this.allowFiltering\n          });\n          requireRefresh = true;\n\n          if (this.filterSettings.type !== 'FilterBar') {\n            this.refreshHeader();\n          }\n\n          break;\n\n        case 'height':\n        case 'width':\n          this.notify(events.uiUpdate, {\n            module: 'scroll',\n            properties: {\n              width: newProp.width,\n              height: newProp.height\n            }\n          });\n          break;\n\n        case 'allowReordering':\n          this.headerModule.refreshUI();\n          checkCursor = true;\n          break;\n\n        case 'allowRowDragAndDrop':\n          this.notify(events.uiUpdate, {\n            module: 'rowDragAndDrop',\n            enable: this.allowRowDragAndDrop\n          });\n          this.renderModule.refresh();\n          this.headerModule.refreshUI();\n          break;\n\n        case 'allowSelection':\n          this.notify(events.uiUpdate, {\n            module: 'selection',\n            enable: this.allowSelection\n          });\n          break;\n\n        case 'enableAutoFill':\n          if (this.selectionModule) {\n            this.enableBoxSelection();\n            this.selectionModule.updateAutoFillPosition();\n          }\n\n          break;\n\n        case 'rowTemplate':\n          this.rowTemplateFn = templateCompiler(this.rowTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'detailTemplate':\n          this.detailTemplateFn = templateCompiler(this.detailTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'allowGrouping':\n          this.notify(events.uiUpdate, {\n            module: 'group',\n            enable: this.allowGrouping\n          });\n          this.headerModule.refreshUI();\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'enableInfiniteScrolling':\n        case 'childGrid':\n          requireRefresh = true;\n          break;\n\n        case 'toolbar':\n          this.notify(events.uiUpdate, {\n            module: 'toolbar'\n          });\n          break;\n\n        case 'groupSettings':\n          this.notify(events.inBoundModelChanged, {\n            module: 'group',\n            properties: newProp.groupSettings,\n            oldProperties: oldProp.groupSettings\n          });\n          break;\n\n        case 'aggregates':\n          if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n            requireRefresh = true;\n          }\n\n          this.notify(events.uiUpdate, {\n            module: 'aggregate',\n            properties: newProp\n          });\n          break;\n\n        case 'frozenColumns':\n        case 'frozenRows':\n        case 'enableVirtualization':\n        case 'currencyCode':\n        case 'locale':\n          this.log('frozen_rows_columns');\n          freezeRefresh = true;\n          requireGridRefresh = true;\n          break;\n\n        case 'query':\n          if (!this.getDataModule().isQueryInvokedFromData) {\n            requireRefresh = true;\n          }\n\n          this.getDataModule().isQueryInvokedFromData = false;\n          break;\n\n        default:\n          this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n      }\n    }\n\n    if (checkCursor) {\n      this.updateDefaultCursor();\n    }\n\n    if (requireGridRefresh) {\n      if (freezeRefresh || this.frozenColumns || this.frozenRows) {\n        if (!(isBlazor() && this.isServerRendered)) {\n          this.freezeRefresh();\n        }\n      } else {\n        this.refresh();\n      }\n    } else if (requireRefresh) {\n      this.notify(events.modelChanged, args);\n      requireRefresh = false;\n      this.maintainSelection(newProp.selectedRowIndex);\n    }\n  };\n  /* tslint:disable */\n\n\n  Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n    switch (prop) {\n      case 'enableRtl':\n        this.updateRTL();\n\n        if (this.allowPaging) {\n          this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n        }\n\n        if (this.height !== 'auto') {\n          this.scrollModule.removePadding(!newProp.enableRtl);\n          this.scrollModule.setPadding();\n        }\n\n        if (this.toolbar && this.toolbarModule) {\n          this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n        }\n\n        if (this.contextMenuItems && this.contextMenuModule) {\n          this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.showColumnMenu && this.columnMenuModule) {\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n          this.refreshHeader();\n        }\n\n        this.notify(events.rtlUpdated, {});\n        break;\n\n      case 'enableAltRow':\n        this.renderModule.refresh();\n        break;\n\n      case 'allowResizing':\n        this.headerModule.refreshUI();\n        this.updateResizeLines();\n        break;\n\n      case 'rowHeight':\n        if (this.rowHeight) {\n          addClass([this.element], 'e-grid-min-height');\n        } else {\n          removeClass([this.element], 'e-grid-min-height');\n        }\n\n        this.renderModule.refresh();\n        this.headerModule.refreshUI();\n        break;\n\n      case 'gridLines':\n        this.updateGridLines();\n        break;\n\n      case 'showColumnMenu':\n        this.headerModule.refreshUI();\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: true\n        });\n        break;\n\n      case 'columnMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: this.columnMenuItems\n        });\n        break;\n\n      case 'contextMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'contextMenu',\n          enable: this.contextMenuItems\n        });\n        break;\n\n      case 'showColumnChooser':\n        this.notify(events.uiUpdate, {\n          module: 'columnChooser',\n          enable: this.showColumnChooser\n        });\n        break;\n\n      case 'filterSettings':\n        this.updateStackedFilter();\n        this.notify(events.inBoundModelChanged, {\n          module: 'filter',\n          properties: newProp.filterSettings\n        });\n        break;\n\n      case 'searchSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'search',\n          properties: newProp.searchSettings\n        });\n        break;\n\n      case 'sortSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'sort'\n        });\n        break;\n\n      case 'selectionSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'selection',\n          properties: newProp.selectionSettings\n        });\n        break;\n\n      case 'editSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'edit',\n          properties: newProp.editSettings\n        });\n        break;\n\n      case 'allowTextWrap':\n      case 'textWrapSettings':\n        if (this.allowTextWrap) {\n          this.applyTextWrap();\n        } else {\n          this.removeTextWrap();\n        }\n\n        this.notify(events.freezeRender, {\n          case: 'textwrap',\n          isModeChg: prop === 'textWrapSettings'\n        });\n        break;\n\n      case 'dataSource':\n        var pending_1 = this.getDataModule().getState();\n\n        if (Object.getPrototypeOf(newProp).deepWatch) {\n          var pKeyField = this.getPrimaryKeyFieldNames()[0];\n\n          for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n            this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n          }\n        } else if (pending_1.isPending) {\n          var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n          var names = pending_1.group || [];\n\n          for (var i = 0; i < names.length; i++) {\n            gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n          }\n\n          this.dataSource = {\n            result: gResult,\n            count: this.dataSource.count,\n            aggregates: this.dataSource.aggregates\n          };\n          this.getDataModule().setState({});\n          pending_1.resolver(this.dataSource);\n        } else {\n          this.getDataModule().setState({\n            isDataChanged: false\n          });\n          this.notify(events.dataSourceModified, {});\n\n          if (!requireGridRefresh) {\n            this.renderModule.refresh();\n          }\n        }\n\n        this.scrollRefresh();\n        break;\n\n      case 'enableHover':\n        var action = newProp.enableHover ? addClass : removeClass;\n        action([this.element], 'e-gridhover');\n        break;\n\n      case 'selectedRowIndex':\n        if (!this.isSelectedRowIndexUpdating) {\n          this.selectRow(newProp.selectedRowIndex);\n        }\n\n        this.isSelectedRowIndexUpdating = false;\n        break;\n\n      case 'resizeSettings':\n        this.widthService.setWidthToTable();\n        break;\n    }\n  };\n\n  Grid.prototype.maintainSelection = function (index) {\n    var _this = this;\n\n    if (index !== -1) {\n      var fn_1 = function () {\n        _this.selectRow(index);\n\n        _this.off(events.contentReady, fn_1);\n      };\n\n      this.on(events.contentReady, fn_1, this);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.setProperties = function (prop, muteOnChange) {\n    _super.prototype.setProperties.call(this, prop, muteOnChange);\n\n    var filterSettings = 'filterSettings';\n\n    if (prop[filterSettings] && this.filterModule && muteOnChange) {\n      this.filterModule.refreshFilter();\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.updateDefaultCursor = function () {\n    var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n    var stdHdrCell = [].slice.call(this.getHeaderContent().querySelectorAll('.e-stackedheadercell'));\n    var cols = this.getColumns();\n\n    if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n      var cells = this.contentModule.getHeaderCells();\n      headerCells = cells.length ? cells : headerCells;\n    }\n\n    for (var i = 0; i < headerCells.length; i++) {\n      var cell = headerCells[i];\n\n      if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n        if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n          cell.classList.add('e-defaultcursor');\n        } else {\n          cell.classList.add('e-mousepointer');\n        }\n      }\n    }\n\n    for (var count = 0; count < stdHdrCell.length; count++) {\n      if (this.allowReordering) {\n        stdHdrCell[count].classList.add('e-mousepointer');\n      }\n    }\n  };\n\n  Grid.prototype.updateColumnModel = function (columns) {\n    for (var i = 0, len = columns.length; i < len; i++) {\n      if (columns[i].columns) {\n        this.updateColumnModel(columns[i].columns);\n      } else {\n        this.columnModel.push(columns[i]);\n      }\n    }\n\n    this.updateFrozenColumns();\n    this.updateLockableColumns();\n  };\n\n  Grid.prototype.updateFrozenColumns = function () {\n    var cols = this.columnModel;\n    var count = 0;\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].isFrozen) {\n        cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n        count++;\n      }\n    }\n  };\n\n  Grid.prototype.updateLockableColumns = function () {\n    var cols = this.columnModel;\n    var frozenCount = 0;\n    var movableCount = 0;\n    var frozenColumns = this.getFrozenColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].lockColumn) {\n        if (i < frozenColumns) {\n          cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n          frozenCount++;\n        } else {\n          cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n          movableCount++;\n        }\n      }\n    }\n  };\n\n  Grid.prototype.checkLockColumns = function (cols) {\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].columns) {\n        this.checkLockColumns(cols[i].columns);\n      } else if (cols[i].lockColumn) {\n        this.lockcolPositionCount++;\n      }\n    }\n  };\n  /**\n   * Gets the columns from the Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getColumns = function (isRefresh) {\n    var _this = this;\n\n    var inview = this.inViewIndexes.map(function (v) {\n      return v - _this.groupSettings.columns.length;\n    }).filter(function (v) {\n      return v > -1;\n    });\n    var vLen = inview.length;\n\n    if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n\n    var columns = vLen === 0 ? this.columnModel : this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n\n    if (this.contentModule && this.enableColumnVirtualization && this.getFrozenColumns() && inview.length && inview[0] > 0) {\n      var frozenCols = this.contentModule.ensureFrozenCols(columns);\n      columns = frozenCols;\n    }\n\n    return columns;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n    for (var i = 0; i < col.length; i++) {\n      var individualColumn = col[i];\n\n      if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n        this.stackedColumn = individualColumn;\n        break;\n      } else if (individualColumn.columns) {\n        this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n      }\n    }\n\n    return this.stackedColumn;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getColumnIndexesInView = function () {\n    return this.inViewIndexes;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getQuery = function () {\n    return this.query;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.getLocaleConstants = function () {\n    return this.defaultLocale;\n  };\n  /**\n   * @private\n   */\n\n\n  Grid.prototype.setColumnIndexesInView = function (indexes) {\n    this.inViewIndexes = indexes;\n  };\n  /**\n   * Gets the visible columns from the Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getVisibleColumns = function () {\n    var cols = [];\n\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.visible) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n  /**\n   * Gets the header div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getHeaderContent = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * Sets the header div of the Grid to replace the old header.\n   * @param  {Element} element - Specifies the Grid header.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridHeaderContent = function (element) {\n    this.headerModule.setPanel(element);\n  };\n  /**\n   * Gets the content table of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getContentTable = function () {\n    return this.contentModule.getTable();\n  };\n  /**\n   * Sets the content table of the Grid to replace the old content table.\n   * @param  {Element} element - Specifies the Grid content table.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridContentTable = function (element) {\n    this.contentModule.setTable(element);\n  };\n  /**\n   * Gets the content div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * Sets the content div of the Grid to replace the old Grid content.\n   * @param  {Element} element - Specifies the Grid content.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridContent = function (element) {\n    this.contentModule.setPanel(element);\n  };\n  /**\n   * Gets the header table element of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getHeaderTable = function () {\n    return this.headerModule.getTable();\n  };\n  /**\n   * Sets the header table of the Grid to replace the old one.\n   * @param  {Element} element - Specifies the Grid header table.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridHeaderTable = function (element) {\n    this.headerModule.setTable(element);\n  };\n  /**\n   * Gets the footer div of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFooterContent = function () {\n    this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n    return this.footerElement;\n  };\n  /**\n   * Gets the footer table element of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFooterContentTable = function () {\n    this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n    return this.footerElement.firstChild.firstChild;\n  };\n  /**\n   * Gets the pager of the Grid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getPager = function () {\n    return this.gridPager; //get element from pager\n  };\n  /**\n   * Sets the pager of the Grid to replace the old pager.\n   * @param  {Element} element - Specifies the Grid pager.\n   * @return {void}\n   */\n\n\n  Grid.prototype.setGridPager = function (element) {\n    this.gridPager = element;\n  };\n  /**\n   * Gets a row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets a movable tables row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getMovableRowByIndex = function (index) {\n    return this.contentModule.getMovableRowByIndex(index);\n  };\n  /**\n   * Gets a frozen tables row by index.\n   * @param  {number} index - Specifies the row index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getFrozenRowByIndex = function (index) {\n    return this.getFrozenDataRows()[index];\n  };\n  /**\n   * Gets all the data rows of the Grid.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Get a row information based on cell\n   * @param {Element}\n   * @return RowInfo\n   */\n\n\n  Grid.prototype.getRowInfo = function (target) {\n    var ele = target;\n    var args = {\n      target: target\n    };\n\n    if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse') && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n      var cell = closest(ele, '.e-rowcell');\n\n      if (!cell) {\n        var row = closest(ele, '.e-row');\n\n        if (!isNullOrUndefined(row)) {\n          var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n          var rowIndex = parseInt(row.getAttribute('aria-rowindex'), 10);\n          args = {\n            row: row,\n            rowData: rowObj.data,\n            rowIndex: rowIndex\n          };\n        }\n\n        return args;\n      }\n\n      var cellIndex = parseInt(cell.getAttribute('aria-colindex'), 10);\n\n      if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n        var row_1 = closest(cell, '.e-row');\n        var rowIndex = parseInt(row_1.getAttribute('aria-rowindex'), 10);\n        var frzCols = this.getFrozenColumns();\n        var isMovable = frzCols ? cellIndex >= frzCols : false;\n        var rows = isMovable ? this.contentModule.getMovableRows() : this.contentModule.getRows();\n        var rowsObject = rows.filter(function (r) {\n          return r.uid === row_1.getAttribute('data-uid');\n        });\n        var rowData = {};\n        var column = void 0;\n\n        if (Object.keys(rowsObject).length) {\n          rowData = rowsObject[0].data;\n          column = rowsObject[0].cells[isMovable ? cellIndex - frzCols : cellIndex + this.getIndentCount()].column;\n        }\n\n        args = {\n          cell: cell,\n          cellIndex: cellIndex,\n          row: row_1,\n          rowIndex: rowIndex,\n          rowData: rowData,\n          column: column,\n          target: target\n        };\n      }\n    }\n\n    return args;\n  };\n  /**\n   * Gets the Grid's movable content rows from frozen grid.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getMovableRows = function () {\n    return this.contentModule.getMovableRowElements();\n  };\n  /**\n   * Gets all the Grid's data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getDataRows = function () {\n    if (isNullOrUndefined(this.getContentTable().querySelector('tbody'))) {\n      return [];\n    }\n\n    var rows = [].slice.call(this.getContentTable().querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderTable().querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows);\n    return dataRows;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.addMovableRows = function (fRows, mrows) {\n    for (var i = 0, len = mrows.length; i < len; i++) {\n      fRows.push(mrows[i]);\n    }\n\n    return fRows;\n  };\n\n  Grid.prototype.generateDataRows = function (rows) {\n    var dRows = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[i].classList.contains('e-row') && !rows[i].classList.contains('e-hiddenrow')) {\n        if (this.isCollapseStateEnabled()) {\n          dRows[parseInt(rows[i].getAttribute(\"aria-rowindex\"))] = rows[i];\n        } else {\n          dRows.push(rows[i]);\n        }\n      }\n    }\n\n    return dRows;\n  };\n  /**\n   * Gets all the Grid's movable table data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getMovableDataRows = function () {\n    var rows = [].slice.call(this.getContent().querySelector('.e-movablecontent').querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen table data rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getFrozenDataRows = function () {\n    var rows = [].slice.call(this.getContent().querySelector('.e-frozencontent').querySelector('tbody').children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozenheader').querySelector('tbody').children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows);\n    return dataRows;\n  };\n  /**\n   * Updates particular cell value based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {string } field - Specifies the field name which you want to update.\n   * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n   */\n\n\n  Grid.prototype.setCellValue = function (key, field, value) {\n    var cells = 'cells';\n    var rowData = 'data';\n    var rowIdx = 'index';\n    var rowuID = 'uid';\n    var fieldIdx;\n    var col;\n    var tr;\n    var mTr;\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var cell = new CellRenderer(this, this.serviceLocator);\n    var selectedRow = {};\n    var movableSelectedRow = {};\n    var rowObjects = this.contentModule.getRows();\n    var movableRowObjects = this.contentModule.getMovableRows();\n    fieldIdx = this.getColumnIndexByField(field);\n\n    if (this.groupSettings.columns.length) {\n      fieldIdx = fieldIdx + this.groupSettings.columns.length;\n    }\n\n    if (this.childGrid || this.detailTemplate) {\n      fieldIdx++;\n    }\n\n    if (this.isRowDragable()) {\n      fieldIdx++;\n    }\n\n    col = this.getColumnByField(field);\n    selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    movableSelectedRow = movableRowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    tr = !isNullOrUndefined(selectedRow) ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n    mTr = !isNullOrUndefined(movableSelectedRow) ? this.element.querySelector('[data-uid=' + movableSelectedRow[rowuID] + ']') : null;\n\n    if (!isNullOrUndefined(tr)) {\n      setValue(field, value, selectedRow[rowData]);\n      var td = !isNullOrUndefined(tr[cells][fieldIdx]) ? tr[cells][fieldIdx] : mTr[cells][fieldIdx - this.frozenColumns];\n\n      if (!isNullOrUndefined(td)) {\n        var sRow = selectedRow[cells][fieldIdx];\n        var mRow = void 0;\n\n        if (this.frozenColumns) {\n          mRow = movableSelectedRow[cells][fieldIdx - this.frozenColumns];\n        }\n\n        cell.refreshTD(td, !isNullOrUndefined(sRow) ? sRow : mRow, selectedRow[rowData], {\n          index: selectedRow[rowIdx]\n        });\n\n        if (this.aggregates.length > 0) {\n          this.notify(events.refreshFooterRenderer, {});\n\n          if (this.groupSettings.columns.length > 0) {\n            this.notify(events.groupAggregates, {});\n          }\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        if (!isNullOrUndefined(movableSelectedRow) && !isNullOrUndefined(movableSelectedRow['changes'])) {\n          movableSelectedRow['changes'][field] = value;\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        this.trigger(events.queryCellInfo, {\n          cell: td,\n          column: col,\n          data: selectedRow[rowData]\n        });\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Updates and refresh the particular row values based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   *  @param {Object} rowData - To update new data for the particular row.\n   */\n\n\n  Grid.prototype.setRowData = function (key, rowData) {\n    var rwdata = 'data';\n    var rowuID = 'uid';\n    var rowObjects = this.contentModule.getRows();\n    var selectedRow;\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n\n    if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n      rowObjects = rowObjects.filter(function (row) {\n        return row.isDataRow;\n      });\n    }\n\n    selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n\n    if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n      selectedRow.changes = rowData;\n      refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n      rowRenderer.refresh(selectedRow, this.getColumns(), true);\n\n      if (this.aggregates.length > 0) {\n        this.notify(events.refreshFooterRenderer, {});\n\n        if (this.groupSettings.columns.length > 0) {\n          this.notify(events.groupAggregates, {});\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Gets a cell by row and column index.\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n    var frzCols = this.getFrozenColumns();\n    return frzCols && columnIndex >= frzCols ? this.getMovableDataRows()[rowIndex] && this.getMovableDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - frzCols] : this.getDataRows()[rowIndex] && this.getDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex];\n  };\n  /**\n   * Gets a movable table cell by row and column index.\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n    return this.getMovableDataRows()[rowIndex] && this.getMovableDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - this.getFrozenColumns()];\n  };\n  /**\n   * Gets a column header by column index.\n   * @param  {number} index - Specifies the column index.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByIndex = function (index) {\n    return this.getHeaderTable().querySelectorAll('.e-headercell')[index];\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowObjectFromUID = function (uid) {\n    var rows = this.contentModule.getRows();\n    var row = this.rowObject(rows, uid);\n\n    if (this.getFrozenColumns()) {\n      if (!row) {\n        row = this.rowObject(this.contentModule.getMovableRows(), uid);\n        return row;\n      }\n    }\n\n    if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n      row = this.rowObject(this.vRows, uid);\n      return row;\n    }\n\n    return row;\n  };\n\n  Grid.prototype.rowObject = function (rows, uid) {\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n\n      if (row.uid === uid) {\n        return row;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableRowsObject = function () {\n    return this.contentModule.getMovableRows();\n  };\n  /**\n   * Gets a column header by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByField = function (field) {\n    var column = this.getColumnByField(field);\n    return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n  };\n  /**\n   * Gets a column header by UID.\n   * @param  {string} field - Specifies the column uid.\n   * @return {Element}\n   */\n\n\n  Grid.prototype.getColumnHeaderByUid = function (uid) {\n    var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n    return element ? element.parentElement : undefined;\n  };\n  /**\n   * @hidden\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByIndex = function (index) {\n    var column;\n    this.getColumns().some(function (col, i) {\n      column = col;\n      return i === index;\n    });\n    return column;\n  };\n  /**\n   * Gets a Column by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {Column}\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.field === field) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets a column index by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getColumnIndexByField = function (field) {\n    var cols = this.getColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].field === field) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Gets a column by UID.\n   * @param  {string} uid - Specifies the column UID.\n   * @return {Column}\n   * @blazorType GridColumn\n   */\n\n\n  Grid.prototype.getColumnByUid = function (uid) {\n    return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item, index) {\n      if (item.uid === uid) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n    if (stackedColumn === void 0) {\n      stackedColumn = [];\n    }\n\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n\n      if (column.columns) {\n        stackedColumn.push(column);\n        this.getStackedColumns(column.columns, stackedColumn);\n      }\n    }\n\n    return stackedColumn;\n  };\n  /**\n   * Gets a column index by UID.\n   * @param  {string} uid - Specifies the column UID.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getColumnIndexByUid = function (uid) {\n    var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.uid === uid) {\n        return index;\n      }\n\n      return undefined;\n    })[0];\n    return !isNullOrUndefined(index) ? index : -1;\n  };\n  /**\n   * Gets UID by column name.\n   * @param  {string} field - Specifies the column name.\n   * @return {string}\n   */\n\n\n  Grid.prototype.getUidByColumnField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.field === field) {\n        return item.uid;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets TH index by column uid value.\n   * @private\n   * @param  {string} uid - Specifies the column uid.\n   * @return {number}\n   */\n\n\n  Grid.prototype.getNormalizedColumnIndex = function (uid) {\n    var index = this.getColumnIndexByUid(uid);\n    return index + this.getIndentCount();\n  };\n  /**\n  * Gets indent cell count.\n  * @private\n  * @return {number}\n  */\n\n\n  Grid.prototype.getIndentCount = function () {\n    var index = 0;\n\n    if (this.allowGrouping) {\n      index += this.groupSettings.columns.length;\n    }\n\n    if (this.isDetail()) {\n      index++;\n    }\n\n    if (this.allowRowDragAndDrop && isNullOrUndefined(this.rowDropSettings.targetID)) {\n      index++;\n    }\n    /**\n     * TODO: index normalization based on the stacked header, grouping and detailTemplate\n     * and frozen should be handled here\n     */\n\n\n    return index;\n  };\n  /**\n   * Gets the collection of column fields.\n   * @return {string[]}\n   */\n\n\n  Grid.prototype.getColumnFieldNames = function () {\n    var columnNames = [];\n    var column;\n\n    for (var i = 0, len = this.getColumns().length; i < len; i++) {\n      column = this.getColumns()[i];\n\n      if (column.visible) {\n        columnNames.push(column.field);\n      }\n    }\n\n    return columnNames;\n  };\n  /**\n   * Gets a compiled row template.\n   * @return {Function}\n   * @private\n   */\n\n\n  Grid.prototype.getRowTemplate = function () {\n    return this.rowTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getDetailTemplate = function () {\n    return this.detailTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getEditTemplate = function () {\n    return this.editTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit header template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getEditHeaderTemplate = function () {\n    return this.editHeaderTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit footer template.\n   * @private\n   * @return {Function}\n   */\n\n\n  Grid.prototype.getEditFooterTemplate = function () {\n    return this.editFooterTemplateFn;\n  };\n  /**\n   * Get the names of the primary key columns of the Grid.\n   * @return {string[]}\n   */\n\n\n  Grid.prototype.getPrimaryKeyFieldNames = function () {\n    var keys = [];\n\n    for (var k = 0; k < this.columnModel.length; k++) {\n      if (this.columnModel[k].isPrimaryKey) {\n        keys.push(this.columnModel[k].field);\n      }\n    }\n\n    return keys;\n  };\n  /**\n   * Refreshes the Grid header and content.\n   */\n\n\n  Grid.prototype.refresh = function () {\n    this.headerModule.refreshUI();\n    this.updateStackedFilter();\n    this.renderModule.refresh();\n  };\n  /**\n   * Refreshes the Grid header.\n   */\n\n\n  Grid.prototype.refreshHeader = function () {\n    this.headerModule.refreshUI();\n  };\n  /**\n   * Gets the collection of selected rows.\n   * @return {Element[]}\n   */\n\n\n  Grid.prototype.getSelectedRows = function () {\n    return this.selectionModule ? this.selectionModule.selectedRecords : [];\n  };\n  /**\n   * Gets the collection of selected row indexes.\n   * @return {number[]}\n   */\n\n\n  Grid.prototype.getSelectedRowIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n  };\n  /**\n   * Gets the collection of selected row and cell indexes.\n   * @return {number[]}\n   */\n\n\n  Grid.prototype.getSelectedRowCellIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n  };\n  /**\n   * Gets the collection of selected records.\n   * @return {Object[]}\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getSelectedRecords = function () {\n    return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n  };\n  /**\n   * Gets the data module.\n   * @return {Data}\n   */\n\n\n  Grid.prototype.getDataModule = function () {\n    return this.renderModule.data;\n  };\n  /**\n   * Shows a column by its column name.\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   * @return {void}\n   */\n\n\n  Grid.prototype.showColumns = function (keys, showBy) {\n    showBy = showBy ? showBy : 'headerText';\n    this.showHider.show(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   * @return {void}\n   */\n\n\n  Grid.prototype.hideColumns = function (keys, hideBy) {\n    hideBy = hideBy ? hideBy : 'headerText';\n    this.showHider.hide(keys, hideBy);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenColumns = function () {\n    return this.frozenColumns + this.getFrozenCount(this.columns, 0);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getVisibleFrozenColumns = function () {\n    return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n  };\n  /**\n   * Get the current Filter operator and field.\n   * @return {Object}\n   */\n\n\n  Grid.prototype.getFilterUIInfo = function () {\n    return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n  };\n\n  Grid.prototype.getVisibleFrozenColumnsCount = function () {\n    var visibleFrozenColumns = 0;\n    var col = this.columns;\n\n    for (var i = 0; i < this.frozenColumns; i++) {\n      if (col[i].visible) {\n        visibleFrozenColumns++;\n      }\n    }\n\n    return visibleFrozenColumns;\n  };\n\n  Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].columns) {\n        cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n      } else {\n        if (cols[i].isFrozen && cols[i].visible) {\n          cnt++;\n        }\n      }\n    }\n\n    return cnt;\n  };\n\n  Grid.prototype.getFrozenCount = function (cols, cnt) {\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].columns) {\n        cnt = this.getFrozenCount(cols[i].columns, cnt);\n      } else {\n        if (cols[i].isFrozen) {\n          cnt++;\n        }\n      }\n    }\n\n    return cnt;\n  };\n  /**\n   * Navigates to the specified target page.\n   * @param  {number} pageNo - Defines the page number to navigate.\n   * @return {void}\n   */\n\n\n  Grid.prototype.goToPage = function (pageNo) {\n    if (this.pagerModule) {\n      this.pagerModule.goToPage(pageNo);\n    }\n  };\n  /**\n   * Defines the text of external message.\n   * @param  {string} message - Defines the message to update.\n   * @return {void}\n   */\n\n\n  Grid.prototype.updateExternalMessage = function (message) {\n    if (this.pagerModule) {\n      this.pagerModule.updateExternalMessage(message);\n    }\n  };\n  /**\n   * Sorts a column with the given options.\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   * @return {void}\n   */\n\n\n  Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearSorting = function () {\n    if (this.sortModule) {\n      this.sortModule.clearSorting();\n    }\n  };\n  /**\n   * Remove sorted column by field name.\n   * @param {string} field - Defines the column field name to remove sort.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeSortColumn = function (field) {\n    if (this.sortModule) {\n      this.sortModule.removeSortColumn(field);\n    }\n  };\n  /**\n   * Filters grid row by column name with the given options.\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n   * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n   * @return {void}\n   */\n\n\n  Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n    if (this.filterModule) {\n      this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n  };\n  /**\n   * Clears all the filtered rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearFiltering = function (fields) {\n    if (this.filterModule) {\n      this.filterModule.clearFiltering(fields);\n    }\n  };\n  /**\n   * Removes filtered column by field name.\n   * @param  {string} field - Defines column field name to remove filter.\n   * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n    if (this.filterModule) {\n      this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   * @param  {number[]} rowIndexes - Specifies the row indexes.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRows = function (rowIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(rowIndexes);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * Selects a cell by the given index.\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    this.selectionModule.selectCellsByRange(startIndex, endIndex);\n  };\n  /**\n   * Searches Grid records using the given key.\n   * You can customize the default search option by using the\n   * [`searchSettings`](./#searchsettings/).\n   * @param  {string} searchString - Defines the key.\n   * @return {void}\n   */\n\n\n  Grid.prototype.search = function (searchString) {\n    if (this.searchModule) {\n      this.searchModule.search(searchString);\n    }\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./#printmode).\n   * @return {void}\n   */\n\n\n  Grid.prototype.print = function () {\n    if (this.printModule) {\n      this.printModule.print();\n    }\n  };\n  /**\n   * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n   * @param {Object} data - Defines the JSON data of the record to be deleted.\n   */\n\n\n  Grid.prototype.deleteRecord = function (fieldname, data) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(fieldname, data);\n    }\n  };\n  /**\n   * Starts edit the selected row. At least one row must be selected before invoking this method.\n   * `editSettings.allowEditing` should be true.\n   * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n   * @return {void}\n   */\n\n\n  Grid.prototype.startEdit = function () {\n    if (this.editModule) {\n      this.editModule.startEdit();\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   */\n\n\n  Grid.prototype.endEdit = function () {\n    if (this.editModule) {\n      this.editModule.endEdit();\n    }\n  };\n  /**\n   * Cancels edited state.\n   */\n\n\n  Grid.prototype.closeEdit = function () {\n    if (this.editModule) {\n      this.editModule.closeEdit();\n    }\n  };\n  /**\n   * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n   * > `editSettings.allowEditing` should be true.\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   */\n\n\n  Grid.prototype.addRecord = function (data, index) {\n    if (this.editModule) {\n      this.editModule.addRecord(data, index);\n    }\n  };\n  /**\n   * Delete any visible row by TR element.\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   */\n\n\n  Grid.prototype.deleteRow = function (tr) {\n    if (this.editModule) {\n      this.editModule.deleteRow(tr);\n    }\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   */\n\n\n  Grid.prototype.editCell = function (index, field) {\n    if (this.editModule) {\n      this.editModule.editCell(index, field);\n    }\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n   */\n\n\n  Grid.prototype.saveCell = function () {\n    if (this.editModule) {\n      this.editModule.saveCell();\n    }\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   */\n\n\n  Grid.prototype.updateCell = function (rowIndex, field, value) {\n    if (this.editModule) {\n      this.editModule.updateCell(rowIndex, field, value);\n    }\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n   */\n\n\n  Grid.prototype.updateRow = function (index, data) {\n    if (this.editModule) {\n      this.editModule.updateRow(index, data);\n    }\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   * @return {Object}\n   */\n\n\n  Grid.prototype.getBatchChanges = function () {\n    if (this.editModule) {\n      return this.editModule.getBatchChanges();\n    }\n\n    return {};\n  };\n  /**\n   * Enables or disables ToolBar items.\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   * @return {void}\n   */\n\n\n  Grid.prototype.enableToolbarItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   */\n\n\n  Grid.prototype.copy = function (withHeader) {\n    if (this.clipboardModule) {\n      this.clipboardModule.copy(withHeader);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.recalcIndentWidth = function () {\n    var _this = this;\n\n    if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n      return;\n    }\n\n    if (!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable() || this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') || !this.getContentTable()) {\n      return;\n    }\n\n    var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n    var headerCol = [].slice.call(this.getHeaderTable().querySelector('colgroup').childNodes);\n    var contentCol = [].slice.call(this.getContentTable().querySelector('colgroup').childNodes);\n    var perPixel = indentWidth / 30;\n    var i = 0;\n    var parentOffset = this.element.offsetWidth;\n\n    var applyWidth = function (index, width) {\n      if (ispercentageWidth(_this)) {\n        var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n        headerCol[index].style.width = newWidth;\n        contentCol[index].style.width = newWidth;\n      } else {\n        headerCol[index].style.width = width + 'px';\n        contentCol[index].style.width = width + 'px';\n      }\n\n      _this.notify(events.columnWidthChanged, {\n        index: index,\n        width: width\n      });\n    };\n\n    if (perPixel >= 1) {\n      indentWidth = 30 / perPixel;\n    }\n\n    if (this.enableColumnVirtualization || this.isAutoGen) {\n      indentWidth = 30;\n    }\n\n    while (i < this.groupSettings.columns.length) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isDetail()) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isRowDragable()) {\n      applyWidth(i, indentWidth);\n    }\n\n    this.isAutoGen = false;\n    this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.resetIndentWidth = function () {\n    if (ispercentageWidth(this)) {\n      this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n      this.widthService.setWidthToColumns();\n      this.recalcIndentWidth();\n    }\n\n    if ((this.width === 'auto' || typeof this.width === 'string' && this.width.indexOf('%') !== -1) && this.getColumns().filter(function (col) {\n      return (!col.width || col.width === 'auto') && col.minWidth;\n    }).length > 0) {\n      var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n      this.widthService.setMinwidthBycalculation(tgridWidth);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isRowDragable = function () {\n    return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n  };\n  /**\n   * Changes the Grid column positions by field names.\n   * @param  {string} fromFName - Defines the origin field name.\n   * @param  {string} toFName - Defines the destination field name.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumns = function (fromFName, toFName) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumns(fromFName, toFName);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n   * then you won't get the same results every time.\n   * @param  {number} fromIndex - Defines the origin field index.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n   * then you will get the same results every time.\n   * @param  {string} fieldName - Defines the field name.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid Row position with given indexes.\n   * @param  {number} fromIndexes - Defines the origin Indexes.\n   * @param  {number} toIndex - Defines the destination Index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n    if (this.rowDragAndDropModule) {\n      this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.refreshDataSource = function (e, args) {\n    this.notify('refreshdataSource', e);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.disableRowDD = function (enable) {\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n    var rows = this.getRows();\n    var disValue = enable ? 'none' : '';\n    setStyleAttribute(headerTable.querySelector('colgroup').childNodes[0], {\n      'display': disValue\n    });\n    setStyleAttribute(contentTable.querySelector('colgroup').childNodes[0], {\n      'display': disValue\n    });\n\n    for (var i = 0; i < this.getRows().length; i++) {\n      var ele = rows[i].firstElementChild;\n      enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n    }\n\n    for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n      var ele = headerRows[j];\n      enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n    }\n  };\n  /**\n   * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n   * > * This method ignores the hidden columns.\n   * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n   * @param  {string |string[]} fieldNames - Defines the column names.\n   * @return {void}\n   *\n   *\n   * ```typescript\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n   * });\n   * gridObj.appendTo('#Grid');\n   * </script>\n   * ```\n   *\n   */\n\n\n  Grid.prototype.autoFitColumns = function (fieldNames) {\n    if (this.resizeModule) {\n      this.resizeModule.autoFitColumns(fieldNames);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.createColumnchooser = function (x, y, target) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.renderColumnChooser(x, y, target);\n    }\n  };\n\n  Grid.prototype.initializeServices = function () {\n    this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n    this.serviceLocator.register('cellRendererFactory', new CellRendererFactory());\n    this.serviceLocator.register('rendererFactory', new RendererFactory());\n    this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n    this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n    this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n    this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n  };\n\n  Grid.prototype.processModel = function () {\n    var gCols = this.groupSettings.columns;\n    var sCols = this.sortSettings.columns;\n    var flag;\n    var j;\n\n    if (this.allowGrouping) {\n      var _loop_1 = function (i, len) {\n        j = 0;\n\n        for (var sLen = sCols.length; j < sLen; j++) {\n          if (sCols[j].field === gCols[i]) {\n            flag = true;\n            break;\n          }\n        }\n\n        if (!flag) {\n          sCols.push({\n            field: gCols[i],\n            direction: 'Ascending',\n            isFromGroup: true\n          });\n        } else {\n          if (this_1.allowSorting) {\n            this_1.sortedColumns.push(sCols[j].field);\n          } else {\n            sCols[j].direction = 'Ascending';\n          }\n        }\n\n        if (!this_1.groupSettings.showGroupedColumn) {\n          var column = this_1.enableColumnVirtualization ? this_1.columns.filter(function (c) {\n            return c.field === gCols[i];\n          })[0] : this_1.getColumnByField(gCols[i]);\n\n          if (column) {\n            column.visible = false;\n          } else {\n            this_1.log('initial_action', {\n              moduleName: 'group',\n              columnName: gCols[i]\n            });\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (var i = 0, len = gCols.length; i < len; i++) {\n        _loop_1(i, len);\n      }\n    }\n\n    if (!gCols.length) {\n      for (var i = 0; i < sCols.length; i++) {\n        this.sortedColumns.push(sCols[i].field);\n      }\n    }\n\n    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n    this.editTemplateFn = templateCompiler(this.editSettings.template);\n    this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n    this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n\n    if (!isNullOrUndefined(this.parentDetails)) {\n      var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' : this.parentDetails.parentKeyFieldValue;\n      this.query.where(this.queryString, 'equal', value, true);\n    }\n\n    this.initForeignColumn();\n  };\n\n  Grid.prototype.initForeignColumn = function () {\n    if (this.isForeignKeyEnabled(this.getColumns())) {\n      this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n    }\n  };\n\n  Grid.prototype.gridRender = function () {\n    this.updateRTL();\n\n    if (this.enableHover) {\n      this.element.classList.add('e-gridhover');\n    }\n\n    if (Browser.isDevice) {\n      this.element.classList.add('e-device');\n    }\n\n    if (this.rowHeight) {\n      this.element.classList.add('e-grid-min-height');\n    }\n\n    classList(this.element, ['e-responsive', 'e-default'], []);\n    var rendererFactory = this.serviceLocator.getService('rendererFactory');\n    this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n    this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n    this.printModule = new Print(this, this.scrollModule);\n    this.clipboardModule = new Clipboard(this);\n    this.renderModule.render();\n    this.eventInitializer();\n    this.createGridPopUpElement();\n    this.widthService.setWidthToColumns();\n    this.updateGridLines();\n    this.applyTextWrap();\n    this.createTooltip(); //for clip mode ellipsis\n\n    this.enableBoxSelection();\n  };\n\n  Grid.prototype.dataReady = function () {\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n\n    if (this.height !== 'auto') {\n      this.scrollModule.setPadding();\n    }\n  };\n\n  Grid.prototype.updateRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n\n  Grid.prototype.createGridPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-gridpopup',\n      styles: 'display:none;'\n    });\n    var content = this.createElement('div', {\n      className: 'e-content',\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    this.element.appendChild(popup);\n  };\n\n  Grid.prototype.updateGridLines = function () {\n    classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n\n    switch (this.gridLines) {\n      case 'Horizontal':\n        this.element.classList.add('e-horizontallines');\n        break;\n\n      case 'Vertical':\n        this.element.classList.add('e-verticallines');\n        break;\n\n      case 'None':\n        this.element.classList.add('e-hidelines');\n        break;\n\n      case 'Both':\n        this.element.classList.add('e-bothlines');\n        break;\n    }\n\n    this.updateResizeLines();\n  };\n\n  Grid.prototype.updateResizeLines = function () {\n    if (this.allowResizing && !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n      this.element.classList.add('e-resize-lines');\n    } else {\n      this.element.classList.remove('e-resize-lines');\n    }\n  };\n  /**\n   * The function is used to apply text wrap\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.applyTextWrap = function () {\n    if (this.allowTextWrap) {\n      var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n\n      switch (this.textWrapSettings.wrapMode) {\n        case 'Header':\n          wrap(this.element, false);\n          wrap(this.getContent(), false);\n          wrap(headerRows, true);\n          break;\n\n        case 'Content':\n          wrap(this.getContent(), true);\n          wrap(this.element, false);\n          wrap(headerRows, false);\n          break;\n\n        default:\n          wrap(this.element, true);\n          wrap(this.getContent(), false);\n          wrap(headerRows, false);\n      }\n\n      if (this.textWrapSettings.wrapMode !== 'Content') {\n        this.notify(events.refreshHandlers, {});\n      }\n    }\n  };\n  /**\n   * The function is used to remove text wrap\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeTextWrap = function () {\n    wrap(this.element, false);\n    var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n    wrap(headerRows, false);\n    wrap(this.getContent(), false);\n\n    if (this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.createTooltip = function () {\n    this.toolTipObj = new Tooltip({\n      opensOn: 'custom',\n      content: ''\n    }, this.element);\n  };\n  /** @hidden */\n\n\n  Grid.prototype.freezeRefresh = function () {\n    if (this.enableVirtualization) {\n      this.pageSettings.currentPage = 1;\n    }\n\n    this.componentRefresh();\n  };\n\n  Grid.prototype.getTooltipStatus = function (element) {\n    var width;\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerDivTag = 'e-gridheader';\n    var contentDivTag = 'e-gridcontent';\n    var htable = this.createTable(headerTable, headerDivTag, 'header');\n    var ctable = this.createTable(headerTable, headerDivTag, 'content');\n    var td = element;\n    var table = element.classList.contains('e-headercell') ? htable : ctable;\n    var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n    table.querySelector(ele).className = element.className;\n    table.querySelector(ele).innerHTML = element.innerHTML;\n    width = table.querySelector(ele).getBoundingClientRect().width;\n    document.body.removeChild(htable);\n    document.body.removeChild(ctable);\n\n    if (width > element.getBoundingClientRect().width) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Grid.prototype.mouseMoveHandler = function (e) {\n    if (this.isEllipsisTooltip()) {\n      var element = parentsUntil(e.target, 'e-ellipsistooltip');\n\n      if (this.prevElement !== element || e.type === 'mouseout') {\n        this.toolTipObj.close();\n      }\n\n      var tagName = e.target.tagName;\n      var elemNames = ['A', 'BUTTON', 'INPUT'];\n\n      if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n        if (element.getAttribute('aria-describedby')) {\n          return;\n        }\n\n        if (this.getTooltipStatus(element)) {\n          if (element.getElementsByClassName('e-headertext').length) {\n            this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n          } else {\n            this.toolTipObj.content = element.innerText;\n          }\n\n          this.prevElement = element;\n          this.toolTipObj.open(element);\n        }\n      }\n    }\n\n    this.hoverFrozenRows(e);\n  };\n  /** @hidden */\n\n\n  Grid.prototype.hoverFrozenRows = function (e) {\n    if (this.getFrozenColumns()) {\n      var row = parentsUntil(e.target, 'e-row');\n\n      if ([].slice.call(this.element.querySelectorAll('.e-frozenhover')).length && e.type === 'mouseout') {\n        var rows = [].slice.call(this.element.querySelectorAll('.e-frozenhover'));\n\n        for (var i = 0; i < rows.length; i++) {\n          rows[i].classList.remove('e-frozenhover');\n        }\n      } else if (row) {\n        var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute('aria-rowindex') + '\"]'));\n        rows.splice(rows.indexOf(row), 1);\n\n        if (row.getAttribute('aria-selected') != 'true' && rows[0]) {\n          rows[0].classList.add('e-frozenhover');\n        } else if (rows[0]) {\n          rows[0].classList.remove('e-frozenhover');\n        }\n      }\n    }\n  };\n\n  Grid.prototype.isEllipsisTooltip = function () {\n    var cols = this.getColumns();\n\n    if (this.clipMode === 'EllipsisWithTooltip') {\n      return true;\n    }\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].clipMode === 'EllipsisWithTooltip') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Grid.prototype.scrollHandler = function () {\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * To create table for ellipsiswithtooltip\n   * @hidden\n   */\n\n\n  Grid.prototype.createTable = function (table, tag, type) {\n    var myTableDiv = this.createElement('div');\n    myTableDiv.className = this.element.className;\n    myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n    var mySubDiv = this.createElement('div');\n    mySubDiv.className = tag;\n    var myTable = this.createElement('table');\n    myTable.className = table.className;\n    myTable.style.cssText = 'table-layout: auto;width: auto';\n    var ele = type === 'header' ? 'th' : 'td';\n    var myTr = this.createElement('tr');\n    var mytd = this.createElement(ele);\n    myTr.appendChild(mytd);\n    myTable.appendChild(myTr);\n    mySubDiv.appendChild(myTable);\n    myTableDiv.appendChild(mySubDiv);\n    document.body.appendChild(myTableDiv);\n    return myTableDiv;\n  };\n\n  Grid.prototype.onKeyPressed = function (e) {\n    if (e.action === 'tab' || e.action === 'shiftTab') {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * Binding events to the element while component creation.\n   * @hidden\n   */\n\n\n  Grid.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n    EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n    EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n    EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n\n    if (this.allowKeyboard) {\n      this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n    }\n\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n    EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n    EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n    EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n  };\n  /**\n   * Unbinding events from the element while component destroy.\n   * @hidden\n   */\n\n\n  Grid.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n    EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n    EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n    EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n    EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n    EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n    EventHandler.remove(window, 'resize', this.resetIndentWidth);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.addListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.on(events.dataReady, this.dataReady, this);\n    this.on(events.contentReady, this.recalcIndentWidth, this);\n    this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n    this.dataBoundFunction = this.refreshMediaCol.bind(this);\n    this.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.on(events.keyPressed, this.onKeyPressed, this);\n    this.on(events.contentReady, this.blazorTemplate, this);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.removeListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.off(events.dataReady, this.dataReady);\n    this.off(events.contentReady, this.recalcIndentWidth);\n    this.off(events.headerRefreshed, this.recalcIndentWidth);\n    this.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.off(events.keyPressed, this.onKeyPressed);\n  };\n\n  Grid.prototype.blazorTemplate = function () {\n    if (isBlazor()) {\n      if (this.pageSettings.template) {\n        updateBlazorTemplate(this.element.id + \"_template\", 'Template', this.pageSettings);\n      }\n\n      for (var i = 0; i < this.columnModel.length; i++) {\n        if (this.columnModel[i].template) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid, 'Template', this.columnModel[i], false);\n        }\n\n        if (this.columnModel[i].headerTemplate) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'headerTemplate', 'HeaderTemplate', this.columnModel[i], false);\n        }\n\n        if (this.filterSettings.type == 'FilterBar' && this.columnModel[i].filterTemplate) {\n          var fieldName = this.columnModel[i].field;\n          var tempID = this.element.id + this.columnModel[i].uid + 'filterTemplate';\n          var filteredColumns = this.filterSettings.columns;\n\n          for (var k = 0; k < filteredColumns.length; k++) {\n            if (fieldName == filteredColumns[k].field) {\n              blazorTemplates[tempID][0][fieldName] = filteredColumns[k].value;\n            }\n          }\n\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i], false);\n        }\n\n        if (this.filterSettings.type != 'FilterBar' && this.columnModel[i].filterTemplate) {\n          updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i]);\n        }\n      }\n\n      if (this.groupSettings.captionTemplate) {\n        updateBlazorTemplate(this.element.id + 'captionTemplate', 'CaptionTemplate', this.groupSettings);\n      }\n\n      var guid = 'guid';\n\n      for (var k = 0; k < this.aggregates.length; k++) {\n        for (var j = 0; j < this.aggregates[k].columns.length; j++) {\n          if (this.aggregates[k].columns[j].footerTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'footerTemplate', 'FooterTemplate', this.aggregates[k].columns[j]);\n          }\n\n          if (this.aggregates[k].columns[j].groupFooterTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupFooterTemplate', 'GroupFooterTemplate', this.aggregates[k].columns[j]);\n          }\n\n          if (this.aggregates[k].columns[j].groupCaptionTemplate) {\n            updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupCaptionTemplate', 'GroupCaptionTemplate', this.aggregates[k].columns[j]);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Get current visible data of grid.\n   * @return {Object[]}\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getCurrentViewRecords = function () {\n    if (isGroupAdaptive(this)) {\n      return isNullOrUndefined(this.currentViewData.records) ? this.currentViewData : this.currentViewData.records;\n    }\n\n    if (this.groupSettings.enableLazyLoading) {\n      return this.currentViewData;\n    }\n\n    ;\n    return this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records ? this.currentViewData.records : this.currentViewData;\n  };\n\n  Grid.prototype.mouseClickHandler = function (e) {\n    if (this.isChildGrid(e) || parentsUntil(e.target, 'e-gridpopup') && e.touches || this.element.querySelectorAll('.e-cloneproperties').length || this.checkEdit(e)) {\n      return;\n    }\n\n    if ((!this.allowRowDragAndDrop && (parentsUntil(e.target, 'e-gridcontent') || e.target.tagName === 'TD') || !(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader')) && e.touches) {\n      return;\n    }\n\n    if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop) {\n      e.preventDefault();\n    }\n\n    var args = this.getRowInfo(e.target);\n    var cancel = 'cancel';\n    args[cancel] = false;\n    var isDataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      isDataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    if (isBlazor()) {\n      var clonedColumn = extend({}, args.column);\n      args = {\n        rowData: args.rowData,\n        rowIndex: args.rowIndex,\n        cellIndex: args.cellIndex,\n        column: clonedColumn\n      };\n    }\n\n    if (isDataRow) {\n      this.trigger(events.recordClick, args);\n    }\n\n    this.notify(events.click, e);\n  };\n\n  Grid.prototype.checkEdit = function (e) {\n    var tr = parentsUntil(e.target, 'e-row');\n    var isEdit = this.editSettings.mode !== 'Batch' && this.isEdit && tr && (tr.classList.contains('e-editedrow') || tr.classList.contains('e-addedrow'));\n    return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || parentsUntil(e.target, 'e-rowcell') && parentsUntil(e.target, 'e-rowcell').classList.contains('e-editedbatchcell'));\n  };\n\n  Grid.prototype.dblClickHandler = function (e) {\n    var grid = parentsUntil(e.target, 'e-grid');\n\n    if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n      return;\n    }\n\n    var dataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      dataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    var args = this.getRowInfo(e.target);\n    args.target = e.target;\n\n    if (dataRow) {\n      this.trigger(events.recordDoubleClick, args);\n    }\n\n    this.notify(events.dblclick, e);\n  };\n\n  Grid.prototype.focusOutHandler = function (e) {\n    if (this.isChildGrid(e)) {\n      return;\n    }\n\n    if (!parentsUntil(e.target, 'e-grid')) {\n      this.element.querySelector('.e-gridpopup').style.display = 'None';\n    }\n\n    var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n\n    if (filterClear) {\n      filterClear.classList.add('e-hide');\n    }\n\n    var relatedTarget = e.relatedTarget;\n    var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n\n    if ((!relatedTarget || !parentsUntil(relatedTarget, 'e-grid') && (!isNullOrUndefined(ariaOwns) && ariaOwns) !== e.target.getAttribute('aria-owns')) && !this.keyPress && this.isEdit && !Browser.isDevice) {\n      if (this.editSettings.mode === 'Batch') {\n        this.editModule.saveCell();\n        this.notify(events.editNextValCell, {});\n      }\n\n      if (this.editSettings.mode === 'Normal') {\n        this.editModule.editFormValidate();\n      }\n    }\n\n    this.keyPress = false;\n  };\n\n  Grid.prototype.isChildGrid = function (e) {\n    var gridElement = parentsUntil(e.target, 'e-grid');\n\n    if (gridElement && gridElement.id !== this.element.id) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.mergePersistGridData = function (persistedData) {\n    var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n\n      if (this.enableVirtualization) {\n        dataObj.pageSettings.currentPage = 1;\n      }\n\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n\n        if (typeof this[key] === 'object' && !isNullOrUndefined(this[key])) {\n          if (Array.isArray(this[key]) && key === 'columns') {\n            if (!(isBlazor() && this.isServerRendered)) {\n              setColumnIndex(this[key]);\n            }\n\n            this.mergeColumns(dataObj[key], this[key]);\n            this[key] = dataObj[key];\n          } else {\n            extend(this[key], dataObj[key]);\n          }\n        } else {\n          this[key] = dataObj[key];\n        }\n      }\n\n      this.isProtectedOnChange = false;\n    }\n  };\n\n  Grid.prototype.mergeColumns = function (storedColumn, columns) {\n    var storedColumns = storedColumn;\n\n    var _loop_2 = function (i) {\n      var localCol = columns.filter(function (tCol) {\n        return tCol.index === storedColumns[i].index;\n      })[0];\n\n      if (!isNullOrUndefined(localCol)) {\n        if (localCol.columns && localCol.columns.length) {\n          this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        } else {\n          if (isBlazor()) {\n            var guid = 'guid';\n            storedColumns[i][guid] = localCol[guid];\n            storedColumns[i].uid = localCol.uid;\n          }\n\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        }\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_2(i);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isDetail = function () {\n    return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n  };\n\n  Grid.prototype.isCommandColumn = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isCommandColumn(col.columns);\n      }\n\n      return !!(col.commands || col.commandsTemplate);\n    });\n  };\n\n  Grid.prototype.isForeignKeyEnabled = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isForeignKeyEnabled(col.columns);\n      }\n\n      return !!(col.dataSource && col.foreignKeyValue);\n    });\n  };\n\n  Grid.prototype.keyPressHandler = function (e) {\n    var presskey = extend(e, {\n      cancel: false\n    });\n    this.trigger(\"keyPressed\", presskey);\n\n    if (presskey.cancel === true) {\n      e.stopImmediatePropagation();\n    }\n  };\n\n  Grid.prototype.keyDownHandler = function (e) {\n    if (e.altKey) {\n      if (e.keyCode === 74) {\n        //alt j\n        if (this.keyA) {\n          //alt A J\n          this.notify(events.groupCollapse, {\n            target: e.target,\n            collapse: false\n          });\n          this.keyA = false;\n        } else {\n          this.focusModule.focusHeader();\n          this.focusModule.addOutline();\n        }\n      }\n\n      if (e.keyCode === 87) {\n        //alt w\n        this.focusModule.focusContent();\n        this.focusModule.addOutline();\n      }\n\n      if (e.keyCode === 65) {\n        //alt A\n        this.keyA = true;\n      }\n\n      if (e.keyCode === 72 && this.keyA) {\n        //alt A H\n        this.notify(events.groupCollapse, {\n          target: e.target,\n          collapse: true\n        });\n        this.keyA = false;\n      }\n    }\n  };\n\n  Grid.prototype.keyActionHandler = function (e) {\n    this.keyPress = e.action !== 'space';\n\n    if (this.isChildGrid(e) || this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab') {\n      return;\n    }\n\n    if (this.allowKeyboard) {\n      if (e.action === 'ctrlPlusP') {\n        e.preventDefault();\n        this.print();\n      }\n\n      this.notify(events.keyPressed, e);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.setInjectedModules = function (modules) {\n    this.injectedModules = modules;\n  };\n\n  Grid.prototype.updateColumnObject = function () {\n    prepareColumns(this.columns, this.enableColumnVirtualization);\n\n    if (!(isBlazor() && this.isServerRendered)) {\n      setColumnIndex(this.columns);\n    }\n\n    this.initForeignColumn();\n    this.notify(events.autoCol, {});\n  };\n  /**\n   * Gets the foreign columns from Grid.\n   * @return {Column[]}\n   * @blazorType List<GridColumn>\n   */\n\n\n  Grid.prototype.getForeignKeyColumns = function () {\n    return this.getColumns().filter(function (col) {\n      return col.isForeignColumn();\n    });\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowHeight = function () {\n    return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n  };\n  /**\n   * Refreshes the Grid column changes.\n   */\n\n\n  Grid.prototype.refreshColumns = function () {\n    var fCnt = this.getContent().querySelector('.e-frozencontent');\n\n    if (this.getFrozenColumns() === 1 && !fCnt || this.getFrozenColumns() === 0 && fCnt) {\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n\n      this.freezeRefresh();\n    } else {\n      this.isPreventScrollEvent = true;\n      this.updateColumnObject();\n      this.checkLockColumns(this.getColumns());\n      this.refresh();\n\n      if (this.getFrozenColumns()) {\n        var mTbl = this.contentModule.getMovableContent().querySelector('.e-table');\n        remove(mTbl.querySelector('colgroup'));\n        var colGroup = this.getHeaderContent().querySelector('.e-movableheader').querySelector('colgroup').cloneNode(true);\n        mTbl.insertBefore(colGroup, mTbl.querySelector('tbody'));\n      }\n    }\n\n    if (this.getFrozenColumns()) {\n      this.headerModule.getMovableHeader().scrollLeft = this.contentModule.getMovableContent().scrollLeft;\n    }\n  };\n  /**\n   * Export Grid data to Excel file(.xlsx).\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport,\n  /* tslint:disable-next-line:no-any */\n  workbook, isBlob) {\n    if (isBlazor()) {\n      this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob);\n      return null;\n    }\n\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n  };\n  /**\n   * Export Grid data to CSV file.\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.csvExport = function (excelExportProperties,\n  /* tslint:disable-next-line:no-any */\n  isMultipleExport, workbook, isBlob) {\n    if (isBlazor()) {\n      this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob);\n      return null;\n    }\n\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n  };\n  /**\n   * Export Grid data to PDF document.\n   * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n   * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @return {Promise<any>}\n   * @blazorType void\n   */\n\n\n  Grid.prototype.pdfExport = function (pdfExportProperties,\n  /* tslint:disable-next-line:no-any */\n  isMultipleExport, pdfDoc, isBlob) {\n    if (isBlazor()) {\n      this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n      return null;\n    }\n\n    return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n  };\n  /**\n   * Groups a column by column name.\n   * @param  {string} columnName - Defines the column name to group.\n   * @return {void}\n   */\n\n\n  Grid.prototype.groupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.groupColumn(columnName);\n    }\n  };\n  /**\n   * Expands all the grouped rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.groupExpandAll = function () {\n    if (this.groupModule) {\n      this.groupModule.expandAll();\n    }\n  };\n  /**\n  * Collapses all the grouped rows of the Grid.\n  * @return {void}\n  */\n\n\n  Grid.prototype.groupCollapseAll = function () {\n    if (this.groupModule) {\n      this.groupModule.collapseAll();\n    }\n  };\n  /**\n   * Expands or collapses grouped rows by target element.\n   * @param  {Element} target - Defines the target element of the grouped row.\n   * @return {void}\n   */\n  // public expandCollapseRows(target: Element): void {\n  //     if (this.groupModule) {\n  //         this.groupModule.expandCollapseRows(target);\n  //     }\n  // }\n\n  /**\n   * Clears all the grouped columns of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearGrouping = function () {\n    if (this.groupModule) {\n      this.groupModule.clearGrouping();\n    }\n  };\n  /**\n   * Ungroups a column by column name.\n   * @param  {string} columnName - Defines the column name to ungroup.\n   * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n   * @return {void}\n   */\n\n\n  Grid.prototype.ungroupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.ungroupColumn(columnName);\n    }\n  };\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   * @param  {number} X - Defines the X axis.\n   * @param  {number} Y - Defines the Y axis.\n   * @return {void}\n   */\n\n\n  Grid.prototype.openColumnChooser = function (x, y) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.openColumnChooser(x, y);\n    }\n  };\n\n  Grid.prototype.scrollRefresh = function () {\n    var _this = this;\n\n    var refresh = function () {\n      _this.scrollModule.refresh();\n\n      _this.off(events.contentReady, refresh);\n    };\n\n    this.on(events.contentReady, refresh, this);\n  };\n  /**\n   * Collapses a detail row with the given target.\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @return {void}\n   */\n  // public detailCollapse(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.collapse(target);\n  //     }\n  // }\n\n  /**\n   * Collapses all the detail rows of the Grid.\n   * @return {void}\n   */\n\n\n  Grid.prototype.detailCollapseAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.collapseAll();\n    }\n  };\n  /**\n   * Expands a detail row with the given target.\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @return {void}\n   */\n  // public detailExpand(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.expand(target);\n  //     }\n  // }\n\n  /**\n  * Expands all the detail rows of the Grid.\n  * @return {void}\n  */\n\n\n  Grid.prototype.detailExpandAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.expandAll();\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearCellSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearCellSelection();\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   * @return {void}\n   */\n\n\n  Grid.prototype.clearRowSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearRowSelection();\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @return {void}\n   */\n\n\n  Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRowsByRange(startIndex, endIndex);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isContextMenuOpen = function () {\n    return this.contextMenuModule && this.contextMenuModule.isOpen;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.ensureModuleInjected = function (module) {\n    return this.getInjectedModules().indexOf(module) >= 0;\n  };\n  /**\n   * Destroys the given template reference.\n   * @param {string[]} propertyNames - Defines the collection of template name.\n   */\n  //tslint:disable-next-line:no-any\n\n\n  Grid.prototype.destroyTemplate = function (propertyNames, index) {\n    this.clearTemplate(propertyNames, index);\n  };\n  /**\n   * @hidden\n   * @private\n   */\n\n\n  Grid.prototype.log = function (type, args) {\n    this.loggerModule ? this.loggerModule.log(type, args) : function () {\n      return 0;\n    }();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.applyBiggerTheme = function (element) {\n    if (this.element.classList.contains('e-bigger')) {\n      element.classList.add('e-bigger');\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getPreviousRowData = function () {\n    var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n    return previousRowData;\n  };\n  /**\n   * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n   * @return {void}\n   */\n\n\n  Grid.prototype.hideScroll = function () {\n    var content = this.getContent().querySelector('.e-content');\n    var cTable = content.querySelector('.e-movablecontent') ? content.querySelector('.e-movablecontent') : content;\n    var fTable = content.querySelector('.e-frozencontent') ? content.querySelector('.e-frozencontent') : content;\n\n    if (cTable.scrollHeight <= cTable.clientHeight && fTable.scrollHeight <= fTable.clientHeight) {\n      this.scrollModule.removePadding();\n      cTable.style.overflowY = 'auto';\n    }\n\n    if (this.frozenColumns && cTable.scrollWidth <= cTable.clientWidth) {\n      cTable.style.overflowX = 'auto';\n      cTable.style.overflowY = 'auto';\n      this.notify(events.frozenHeight, 0);\n    }\n  };\n  /**\n   * Get row index by primary key or row data.\n   * @param  {string} value - Defines the primary key value.\n   * @param  {Object} value - Defines the row data.\n   */\n\n\n  Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    value = typeof value === 'object' ? value[pkName] : value;\n\n    for (var i = 0; i < this.getRowsObject().length; i++) {\n      if (this.getRowsObject()[i].data[pkName] === value) {\n        return this.getRowsObject()[i].index;\n      }\n    }\n\n    return -1;\n  };\n\n  ;\n  /**\n  * @hidden\n  */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n  Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n\n    for (var i = 0; i < gCols.length; i++) {\n      if (field === gCols[i].field) {\n        column = gCols[i];\n      }\n    }\n\n    return column;\n  };\n  /**\n  * @hidden\n  */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n\n    for (var i = 0; i < gCols.length; i++) {\n      if (uid === gCols[i].uid) {\n        column = gCols[i];\n      }\n    }\n\n    return column;\n  };\n  /**\n   * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n   * @return {Object[] | Promise<Object>}\n    */\n\n\n  Grid.prototype.getFilteredRecords = function () {\n    if (this.allowFiltering && this.filterSettings.columns.length) {\n      var query = this.renderModule.data.generateQuery(true);\n\n      if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n        return this.renderModule.data.getData(this.dataSource, query);\n      } else {\n        if (this.dataSource instanceof DataManager) {\n          return this.dataSource.executeLocal(query);\n        } else {\n          return new DataManager(this.dataSource, query).executeLocal(query);\n        }\n      }\n    }\n\n    return [];\n  };\n\n  Grid.prototype.getUserAgent = function () {\n    var userAgent = Browser.userAgent.toLowerCase();\n    return /iphone|ipod|ipad/.test(userAgent);\n  };\n  /**\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.tapEvent = function (e) {\n    if (this.getUserAgent()) {\n      if (!Global.timer) {\n        Global.timer = setTimeout(function () {\n          Global.timer = null;\n        }, 300);\n      } else {\n        clearTimeout(Global.timer);\n        Global.timer = null;\n        this.dblClickHandler(e);\n        this.notify(events.doubleTap, e);\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowUid = function (prefix) {\n    return \"\" + prefix + this.rowUid++;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableVirtualContent = function () {\n    return this.getContent().querySelector('.e-movablecontent');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenVirtualContent = function () {\n    return this.getContent().querySelector('.e-frozencontent');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getMovableVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.e-movableheader');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.e-frozenheader');\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowElementByUID = function (uid) {\n    var rowEle;\n    var rows = [];\n\n    if (this.getFrozenColumns()) {\n      var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector('tbody').children);\n      var mRows = [].slice.call(this.getMovableVirtualContent().querySelector('tbody').children);\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getFrozenVirtualHeader().querySelector('tbody').children);\n        rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector('tbody').children));\n        rows = rows.concat(fRows).concat(mRows);\n      } else {\n        rows = fRows.concat(mRows);\n      }\n    } else {\n      var cntRows = [].slice.call(this.getContent().querySelector('tbody').children);\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getHeaderContent().querySelector('tbody').children);\n        rows = rows.concat(cntRows);\n      } else {\n        rows = cntRows;\n      }\n    }\n\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n\n      if (row.getAttribute('data-uid') === uid) {\n        rowEle = row;\n        break;\n      }\n    }\n\n    return rowEle;\n  };\n  /**\n  * Gets the hidden columns from the Grid.\n  * @return {Column[]}\n  * @blazorType List<GridColumn>\n  */\n\n\n  Grid.prototype.getHiddenColumns = function () {\n    var cols = [];\n\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.visible === false) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n  /**\n   *  calculatePageSizeByParentHeight\n    */\n\n\n  Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n    if (this.allowPaging) {\n      if (this.allowTextWrap && this.textWrapSettings.wrapMode == 'Header' || !this.allowTextWrap) {\n        var pagesize = 0;\n\n        if (containerHeight.indexOf('%') != -1) {\n          containerHeight = parseInt(containerHeight) / 100 * this.element.clientHeight;\n        }\n\n        var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n\n        if (containerHeight > nonContentHeight) {\n          var contentHeight = 0;\n          contentHeight = containerHeight - this.getNoncontentHeight();\n          pagesize = contentHeight / this.getRowHeight();\n        }\n\n        if (pagesize > 0) {\n          return Math.floor(pagesize);\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  Grid.prototype.getNoncontentHeight = function () {\n    var height = 0;\n\n    if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n      height += this.getHeaderContent().clientHeight;\n    }\n\n    if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n      height += this.element.querySelector('.e-toolbar').clientHeight;\n    }\n\n    if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n      height += this.element.querySelector('.e-gridpager').clientHeight;\n    }\n\n    if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector(\".e-columnheader\").clientHeight)) {\n      height += this.element.querySelector(\".e-columnheader\").clientHeight;\n    }\n\n    if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n      height += this.element.querySelector('.e-groupdroparea').clientHeight;\n    }\n\n    if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n      for (var i = 0; i < this.element.querySelectorAll('.e-summaryrow').length; i++) {\n        height += this.element.querySelectorAll('.e-summaryrow')[i].clientHeight;\n      }\n    }\n\n    return height;\n  };\n  /**\n   *To perform aggregate operation on a column.\n   *@param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n   *@param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n    */\n\n\n  Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n    return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.isCollapseStateEnabled = function () {\n    var isExpanded = 'isExpanded';\n    return this[isExpanded] === false;\n  };\n  /**\n   * @param {number} key - Defines the primary key value.\n   * @param {Object} value - Defines the row data.\n    */\n\n\n  Grid.prototype.updateRowValue = function (key, rowData) {\n    var args = {\n      requestType: 'save',\n      data: rowData\n    };\n    this.showSpinner();\n    this.notify(events.updateData, args);\n    this.refresh();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.setForeignKeyData = function () {\n    this.dataBind();\n    var colpending = this.getDataModule().getForeignKeyDataState();\n\n    if (colpending.isPending) {\n      this.getDataModule().setForeignKeyDataState({});\n      colpending.resolver();\n    } else {\n      this.getDataModule().setForeignKeyDataState({\n        isDataChanged: false\n      });\n\n      if (this.contentModule || this.headerModule) {\n        this.renderModule.render();\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.resetFilterDlgPosition = function (field) {\n    var header = this.getColumnHeaderByField(field);\n\n    if (header) {\n      var target = header.querySelector('.e-filtermenudiv');\n      var filterDlg = this.element.querySelector('.e-filter-popup');\n\n      if (target && filterDlg) {\n        var gClient = this.element.getBoundingClientRect();\n        var fClient = target.getBoundingClientRect();\n\n        if (filterDlg) {\n          filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.renderTemplates = function () {\n    var portals = 'portals';\n    this.notify('reactTemplateRender', this[portals]);\n    this.renderReactTemplates();\n  };\n  /**\n   * Apply the changes to the Grid without refreshing the rows.\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @return {void}\n   */\n\n\n  Grid.prototype.batchUpdate = function (changes) {\n    this.processRowChanges(changes);\n  };\n  /**\n   * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @return {void}\n   */\n\n\n  Grid.prototype.batchAsyncUpdate = function (changes) {\n    this.processBulkRowChanges(changes);\n  };\n\n  Grid.prototype.processBulkRowChanges = function (changes) {\n    var _this = this;\n\n    if (!this.dataToBeUpdated) {\n      this.dataToBeUpdated = Object.assign({\n        addedRecords: [],\n        changedRecords: [],\n        deletedRecords: []\n      }, changes);\n      setTimeout(function () {\n        _this.processRowChanges(_this.dataToBeUpdated);\n\n        _this.dataToBeUpdated = null;\n      }, this.asyncTimeOut);\n    } else {\n      var loopstring = ['addedRecords', 'changedRecords', 'deletedRecords'];\n      var keyField = this.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < loopstring.length; i++) {\n        if (changes[loopstring[i]]) {\n          compareChanges(this, changes, loopstring[i], keyField);\n        }\n      }\n    }\n  };\n\n  Grid.prototype.processRowChanges = function (changes) {\n    var _this = this;\n\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    changes = Object.assign({\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: []\n    }, changes);\n    var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n\n    if (this.getDataModule().isRemote()) {\n      promise.then(function (e) {\n        _this.setNewData();\n      });\n    } else {\n      this.setNewData();\n    }\n  };\n\n  Grid.prototype.setNewData = function () {\n    var _this = this;\n\n    var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n    var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n    getData.then(function (e) {\n      _this.bulkRefresh(e.result, oldValues, e.count);\n    });\n  };\n\n  Grid.prototype.deleteRowElement = function (row) {\n    var tr = this.getRowElementByUID(row.uid);\n    var index = parseInt(tr.getAttribute('aria-rowindex'), 10);\n    remove(tr);\n\n    if (this.getFrozenColumns()) {\n      var mtr = this.getMovableRows()[index];\n      remove(mtr);\n    }\n  };\n\n  Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n    var _this = this;\n\n    var rowObj = this.getRowsObject();\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n\n    var _loop_3 = function (i) {\n      if (!result.filter(function (e) {\n        return e[keyField] === rowObj[i].data[keyField];\n      }).length) {\n        this_3.deleteRowElement(rowObj[i]);\n        rowObj.splice(i, 1);\n        i--;\n      }\n\n      out_i_1 = i;\n    };\n\n    var this_3 = this,\n        out_i_1;\n\n    for (var i = 0; i < rowObj.length; i++) {\n      _loop_3(i);\n\n      i = out_i_1;\n    }\n\n    var _loop_4 = function (i) {\n      var isRowExist;\n      oldValues.filter(function (e) {\n        if (e[keyField] === result[i][keyField]) {\n          if (e !== result[i]) {\n            _this.setRowData(result[i][keyField], result[i]);\n          }\n\n          isRowExist = true;\n        }\n      });\n\n      if (!isRowExist) {\n        this_4.renderRowElement(result[i], i);\n      }\n    };\n\n    var this_4 = this;\n\n    for (var i = 0; i < result.length; i++) {\n      _loop_4(i);\n    }\n\n    this.currentViewData = result;\n    var rows = [].slice.call(this.getContentTable().querySelectorAll('.e-row'));\n    resetRowIndex(this, this.getRowsObject(), rows);\n    setRowElements(this);\n\n    if (this.allowPaging) {\n      this.notify(events.inBoundModelChanged, {\n        module: 'pager',\n        properties: {\n          totalRecordsCount: count\n        }\n      });\n    }\n  };\n\n  Grid.prototype.renderRowElement = function (data, index) {\n    var row = new RowRenderer(this.serviceLocator, null, this);\n    var model = new RowModelGenerator(this);\n    var modelData = model.generateRows([data]);\n    var tr = row.render(modelData[0], this.getColumns());\n    var mTr;\n    var mTbody;\n    this.addRowObject(modelData[0], index);\n    var tbody = this.getContentTable().querySelector('tbody');\n\n    if (tbody.querySelector('.e-emptyrow')) {\n      var emptyRow = tbody.querySelector('.e-emptyrow');\n      emptyRow.parentNode.removeChild(emptyRow);\n\n      if (this.getFrozenColumns()) {\n        var moveTbody = this.getContent().querySelector('.e-movablecontent').querySelector('tbody');\n        moveTbody.firstElementChild.parentNode.removeChild(moveTbody.firstElementChild);\n      }\n    }\n\n    if (this.getFrozenColumns()) {\n      mTr = renderMovable(tr, this.getFrozenColumns(), this);\n\n      if (this.frozenRows && index < this.frozenRows) {\n        mTbody = this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody');\n      } else {\n        mTbody = this.getContent().querySelector('.e-movablecontent').querySelector('tbody');\n      }\n\n      mTbody.appendChild(mTr);\n\n      if (this.height === 'auto') {\n        this.notify(events.frozenHeight, {});\n      }\n    }\n\n    if (this.frozenRows && index < this.frozenRows) {\n      tbody = this.getHeaderContent().querySelector('tbody');\n    } else {\n      tbody = this.getContent().querySelector('tbody');\n    }\n\n    tbody = this.getContent().querySelector('tbody');\n    tbody.appendChild(tr);\n  };\n\n  Grid.prototype.addRowObject = function (row, index) {\n    var frzCols = this.getFrozenColumns();\n\n    if (frzCols) {\n      var mRows = this.getMovableRowsObject();\n      var mRow = row.clone();\n      mRow.cells = mRow.cells.slice(frzCols);\n      row.cells = row.cells.slice(0, frzCols);\n      mRows.splice(index, 1, mRow);\n    }\n\n    this.getRowsObject().splice(index, 1, row);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Grid.prototype.getHeight = function (height) {\n    if (!Number.isInteger(height) && height.indexOf('%') != -1) {\n      height = parseInt(height) / 100 * this.element.clientHeight;\n    } else if (!Number.isInteger(height) && this.height !== 'auto') {\n      height = parseInt(height);\n    } else {\n      height = this.height;\n    }\n\n    return height;\n  };\n\n  var Grid_1;\n\n  __decorate([Property()], Grid.prototype, \"parentDetails\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableAltRow\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableHover\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableAutoFill\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowKeyboard\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowTextWrap\", void 0);\n\n  __decorate([Complex({}, TextWrapSettings)], Grid.prototype, \"textWrapSettings\", void 0);\n\n  __decorate([Complex({}, ResizeSettings)], Grid.prototype, \"resizeSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPaging\", void 0);\n\n  __decorate([Complex({}, PageSettings)], Grid.prototype, \"pageSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableColumnVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n\n  __decorate([Complex({}, SearchSettings)], Grid.prototype, \"searchSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowSorting\", void 0);\n\n  __decorate([Property('Ellipsis')], Grid.prototype, \"clipMode\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowMultiSorting\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowExcelExport\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPdfExport\", void 0);\n\n  __decorate([Complex({}, SortSettings)], Grid.prototype, \"sortSettings\", void 0);\n\n  __decorate([Complex({}, InfiniteScrollSettings)], Grid.prototype, \"infiniteScrollSettings\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowSelection\", void 0);\n\n  __decorate([Property(-1)], Grid.prototype, \"selectedRowIndex\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], Grid.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowFiltering\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowResizing\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n\n  __decorate([Complex({}, RowDropSettings)], Grid.prototype, \"rowDropSettings\", void 0);\n\n  __decorate([Complex({}, FilterSettings)], Grid.prototype, \"filterSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowGrouping\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableImmutableMode\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnMenu\", void 0);\n\n  __decorate([Complex({}, GroupSettings)], Grid.prototype, \"groupSettings\", void 0);\n\n  __decorate([Complex({}, EditSettings)], Grid.prototype, \"editSettings\", void 0);\n\n  __decorate([Collection([], AggregateRow)], Grid.prototype, \"aggregates\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnChooser\", void 0);\n\n  __decorate([Complex({}, ColumnChooserSettings)], Grid.prototype, \"columnChooserSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableHeaderFocus\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"height\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"width\", void 0);\n\n  __decorate([Property('Default')], Grid.prototype, \"gridLines\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"rowTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"childGrid\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"queryString\", void 0);\n\n  __decorate([Property('AllPages')], Grid.prototype, \"printMode\", void 0);\n\n  __decorate([Property('Expanded')], Grid.prototype, \"hierarchyPrintMode\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"dataSource\", void 0);\n\n  __decorate([Property(null)], Grid.prototype, \"rowHeight\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"query\", void 0);\n\n  __decorate([Property('USD')], Grid.prototype, \"currencyCode\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbar\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"contextMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"columnMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbarTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"pagerTemplate\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenRows\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenColumns\", void 0);\n\n  __decorate([Property('All')], Grid.prototype, \"columnQueryMode\", void 0);\n\n  __decorate([Property({})], Grid.prototype, \"currentAction\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"created\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"load\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"queryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"headerCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordDoubleClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"printComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePrint\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportDetailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeExcelExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePdfExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStartHelper\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"detailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"toolbarClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchCancel\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beginEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"commandClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSaved\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"keyPressed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"checkBoxChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeCopy\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePaste\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeAutoFill\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataSourceChanged\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportGroupCaption\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n\n  Grid = Grid_1 = __decorate([NotifyPropertyChanges], Grid);\n  return Grid;\n}(Component);\n\nexport { Grid };","map":{"version":3,"sources":["D:/Projects/TCC/Finances/qub29a--run/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","ChildProperty","Browser","closest","extend","isNullOrUndefined","setValue","getValue","isBlazor","blazorTemplates","addClass","removeClass","append","remove","updateBlazorTemplate","classList","setStyleAttribute","Property","Collection","Complex","Event","NotifyPropertyChanges","L10n","EventHandler","KeyboardEvents","DataManager","DataUtil","createSpinner","hideSpinner","showSpinner","Tooltip","iterateArrayOrObject","prepareColumns","parentsUntil","wrap","templateCompiler","isGroupAdaptive","refreshForeignData","getRowHeight","setColumnIndex","Global","ispercentageWidth","renderMovable","setRowElements","resetRowIndex","compareChanges","events","Render","RenderType","RowRenderer","CellRenderer","CellRendererFactory","ServiceLocator","ValueFormatter","RendererFactory","ColumnWidthService","AriaService","FocusStrategy","PageSettings","ColumnChooserSettings","Selection","Search","ShowHide","Scroll","Print","AggregateRow","Clipboard","gridObserver","RowModelGenerator","SortDescriptor","_super","apply","SortSettings","Predicate","InfiniteScrollSettings","FilterSettings","SelectionSettings","SearchSettings","RowDropSettings","TextWrapSettings","ResizeSettings","GroupSettings","EditSettings","Grid","options","element","_this","call","isPreventScrollEvent","inViewIndexes","keyA","media","componentRefresh","refresh","isVirtualAdaptive","vRows","vcRows","vGroupOffsets","rowUid","currentViewData","lockcolPositionCount","prevPageMoving","pageTemplateChange","isAutoGen","mediaBindInstance","commandDelIndex","undefined","asyncTimeOut","enableLogger","needsID","Grid_1","Inject","mergePersistGridData","getPersistData","keyEntity","ignoreOnPersist","pageSettings","filterSettings","groupSettings","searchSettings","sortSettings","columns","selectedRowIndex","scrollPosition","ignoreOnColumn","currentObject","_i","_a","val","template","isAngular","pagerTemplate","addOnPersist","requiredModules","modules","isDestroyed","allowFiltering","push","member","args","serviceLocator","allowExcelExport","allowPdfExport","allowSorting","sortedColumns","allowPaging","allowSelection","selectionSettings","allowReordering","allowRowDragAndDrop","allowGrouping","aggregates","isDetail","toolbar","toolbarTemplate","enableVirtualization","enableColumnVirtualization","getFrozenColumns","frozenRows","isCommandColumn","editSettings","allowAdding","allowDeleting","allowEditing","extendRequiredModules","enableInfiniteScrolling","enableLazyLoading","contextMenuItems","showColumnMenu","showColumnChooser","isForeignKeyEnabled","preRender","initProperties","initializeServices","isInitial","mediaCol","isInitialLoad","allowServerDataBinding","ignoreCollectionWatch","isExpanded","mergeCells","isEdit","checkAllRows","isCheckBoxSelection","isPersistSelection","filterOperators","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notEqual","startsWith","defaultLocale","EmptyRecord","True","False","InvalidFilterMessage","GroupDropArea","UnGroup","UnGroupButton","GroupDisable","FilterbarTitle","EmptyDataSourceError","Add","Edit","Cancel","Update","Delete","Pdfexport","Excelexport","Wordexport","Csvexport","Columnchooser","Save","Item","Items","EditOperationAlert","DeleteOperationAlert","SaveButton","OKButton","CancelButton","EditFormTitle","AddFormTitle","BatchSaveConfirm","BatchSaveLostChanges","ConfirmDelete","CancelEdit","ChooseColumns","SearchColumns","Matchs","FilterButton","ClearButton","StartsWith","EndsWith","Contains","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","ChooseDate","EnterValue","Copy","Group","Ungroup","autoFitAll","autoFit","AutoFitAll","AutoFit","Export","FirstPage","LastPage","PreviousPage","NextPage","SortAscending","SortDescending","EditRecord","DeleteRecord","FilterMenu","SelectAll","Blanks","FilterTrue","FilterFalse","NoResult","ClearFilter","NumberFilter","TextFilter","DateFilter","DateTimeFilter","MatchCase","Between","CustomFilter","CustomFilterPlaceHolder","CustomFilterDatePlaceHolder","AND","OR","ShowRowsWhere","FilterMenuDialogARIA","ExcelFilterDialogARIA","DialogEditARIA","ColumnChooserDialogARIA","ColumnMenuDialogARIA","CustomFilterDialogARIA","keyConfigs","downArrow","upArrow","rightArrow","leftArrow","shiftDown","shiftUp","shiftRight","shiftLeft","home","end","escape","ctrlHome","ctrlEnd","pageUp","pageDown","ctrlAltPageUp","ctrlAltPageDown","altPageUp","altPageDown","altDownArrow","altUpArrow","ctrlDownArrow","ctrlUpArrow","ctrlPlusA","ctrlPlusP","insert","delete","f2","enter","ctrlEnter","shiftEnter","tab","shiftTab","space","ctrlPlusC","ctrlShiftPlusH","ctrlSpace","ctrlLeftArrow","ctrlRightArrow","render","log","ariaService","setOptions","role","renderComplete","createElement","renderModule","searchModule","scrollModule","notify","initialLoad","getDataModule","dataManager","dataSource","offline","url","trigger","load","enablePersistence","columnsPrepared","isServerRendered","getMediaColumns","checkLockColumns","getColumns","processModel","gridRender","wireEvents","addListener","updateDefaultCursor","updateStackedFilter","initialEnd","componentRendered","id","grid","type","getHeaderContent","querySelectorAll","add","gcol","getShowHideService","getService","index","hideAtMedia","visible","pushMediaColumn","col","uid","window","matchMedia","mediaQueryUpdate","bind","updateMediaColumns","getColumnIndexByUid","splice","columnIndex","e","some","mediaColumn","matches","invokedFromMedia","showHider","show","headerText","hide","refreshMediaCol","footerContent","querySelector","scrollHeight","height","checkboxColumn","filter","checkboxMode","removeMediaListener","removeListener","eventInitializer","destroy","gridElement","hasGridChild","unwireEvents","destroyDependentModules","toolTipObj","innerHTML","style","display","keyboardModule","focusModule","getModuleName","enableBoxSelection","enableAutoFill","cellSelectionMode","onPropertyChanged","newProp","oldProp","requireRefresh","requireGridRefresh","freezeRefresh","checkCursor","requestType","properties","keys","indexOf","updateColumnObject","properties_1","prop","uiUpdate","module","enable","inBoundModelChanged","currentPage","pageSize","totalRecordsCount","refreshHeader","width","headerModule","refreshUI","selectionModule","updateAutoFillPosition","rowTemplateFn","rowTemplate","detailTemplateFn","detailTemplate","oldProperties","isQueryInvokedFromData","extendedPropertyChange","frozenColumns","modelChanged","maintainSelection","updateRTL","ej2_instances","enableRtl","dataBind","removePadding","setPadding","toolbarModule","getToolbar","contextMenuModule","getContextMenu","columnMenuModule","getColumnMenu","showFilterBarOperator","rtlUpdated","updateResizeLines","rowHeight","updateGridLines","columnMenuItems","allowTextWrap","applyTextWrap","removeTextWrap","freezeRender","case","isModeChg","pending_1","getState","getPrototypeOf","deepWatch","pKeyField","getPrimaryKeyFieldNames","props","setRowData","isPending","gResult","result","names","group","count","setState","resolver","isDataChanged","dataSourceModified","scrollRefresh","action","enableHover","isSelectedRowIndexUpdating","selectRow","widthService","setWidthToTable","fn_1","off","contentReady","on","setProperties","muteOnChange","filterModule","refreshFilter","headerCells","slice","stdHdrCell","cols","cells","contentModule","getHeaderCells","cell","updateColumnModel","len","columnModel","updateFrozenColumns","updateLockableColumns","isFrozen","frozenCount","movableCount","lockColumn","isRefresh","inview","map","v","vLen","frozenCols","ensureFrozenCols","getStackedHeaderColumnByHeaderText","stackedHeader","individualColumn","field","stackedColumn","getColumnIndexesInView","getQuery","query","getLocaleConstants","setColumnIndexesInView","indexes","getVisibleColumns","getPanel","setGridHeaderContent","setPanel","getContentTable","getTable","setGridContentTable","setTable","getContent","setGridContent","getHeaderTable","setGridHeaderTable","getFooterContent","footerElement","getElementsByClassName","getFooterContentTable","firstChild","getPager","gridPager","setGridPager","getRowByIndex","getMovableRowByIndex","getFrozenRowByIndex","getFrozenDataRows","getRows","getRowElements","getRowInfo","ele","row","rowObj","getRowObjectFromUID","getAttribute","rowIndex","parseInt","rowData","data","cellIndex","isNaN","row_1","frzCols","isMovable","rows","getMovableRows","rowsObject","column","getIndentCount","getMovableRowElements","getDataRows","children","freezeRows","addMovableRows","dataRows","generateDataRows","fRows","mrows","dRows","isCollapseStateEnabled","getMovableDataRows","setCellValue","value","rowIdx","rowuID","fieldIdx","tr","mTr","pkName","selectedRow","movableSelectedRow","rowObjects","movableRowObjects","getColumnIndexByField","childGrid","isRowDragable","getColumnByField","td","sRow","mRow","refreshTD","refreshFooterRenderer","groupAggregates","queryCellInfo","rwdata","rowRenderer","isDataRow","changes","getForeignKeyColumns","getCellFromIndex","getMovableCellFromIndex","getColumnHeaderByIndex","rowObject","rows_1","getRowsObject","getMovableRowsObject","getColumnHeaderByField","getColumnHeaderByUid","parentElement","getColumnByIndex","item","getColumnByUid","concat","getStackedColumns","columns_1","getUidByColumnField","getNormalizedColumnIndex","rowDropSettings","targetID","getColumnFieldNames","columnNames","getRowTemplate","getDetailTemplate","getEditTemplate","editTemplateFn","getEditHeaderTemplate","editHeaderTemplateFn","getEditFooterTemplate","editFooterTemplateFn","k","isPrimaryKey","getSelectedRows","selectedRecords","getSelectedRowIndexes","selectedRowIndexes","getSelectedRowCellIndexes","selectedRowCellIndexes","getSelectedRecords","showColumns","showBy","hideColumns","hideBy","getFrozenCount","getVisibleFrozenColumns","getVisibleFrozenColumnsCount","getVisibleFrozenCount","getFilterUIInfo","visibleFrozenColumns","cnt","goToPage","pageNo","pagerModule","updateExternalMessage","message","sortColumn","columnName","direction","isMultiSort","sortModule","clearSorting","removeSortColumn","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","fields","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","clearSelection","selectCell","selectCellsByRange","startIndex","endIndex","search","searchString","print","printModule","deleteRecord","fieldname","editModule","startEdit","endEdit","closeEdit","addRecord","deleteRow","editCell","saveCell","updateCell","updateRow","getBatchChanges","enableToolbarItems","items","isEnable","enableItems","copy","withHeader","clipboardModule","recalcIndentWidth","indentWidth","offsetWidth","headerCol","childNodes","contentCol","perPixel","parentOffset","applyWidth","newWidth","toFixed","columnWidthChanged","setAttribute","resetIndentWidth","removeAttribute","setWidthToColumns","minWidth","tgridWidth","getTableWidth","setMinwidthBycalculation","reorderColumns","fromFName","toFName","reorderModule","reorderColumnByIndex","fromIndex","toIndex","reorderColumnByTargetIndex","reorderRows","fromIndexes","rowDragAndDropModule","refreshDataSource","disableRowDD","headerTable","contentTable","headerRows","disValue","firstElementChild","j","autoFitColumns","fieldNames","resizeModule","createColumnchooser","x","y","columnChooserModule","renderColumnChooser","register","localeObj","locale","valueFormatterService","gCols","sCols","flag","_loop_1","sLen","isFromGroup","this_1","showGroupedColumn","moduleName","headerTemplate","footerTemplate","parentDetails","parentKeyFieldValue","where","queryString","initForeignColumn","initForeignKeyColumn","isDevice","rendererFactory","getRenderer","Header","Content","createGridPopUpElement","createTooltip","dataReady","setWidth","setHeight","popup","className","styles","content","attrs","tabIndex","appendChild","gridLines","allowResizing","textWrapSettings","wrapMode","refreshHandlers","opensOn","getTooltipStatus","headerDivTag","contentDivTag","htable","createTable","ctable","table","getBoundingClientRect","document","body","removeChild","mouseMoveHandler","isEllipsisTooltip","prevElement","close","tagName","elemNames","innerText","open","hoverFrozenRows","clipMode","scrollHandler","tag","myTableDiv","cssText","mySubDiv","myTable","myTr","mytd","onKeyPressed","mouseClickHandler","focusOutHandler","dblClickHandler","keyPressHandler","allowKeyboard","keyAction","keyActionHandler","eventName","tapEvent","keyDownHandler","headerRefreshed","dataBoundFunction","addEventListener","dataBound","keyPressed","blazorTemplate","removeEventListener","filterTemplate","tempID","filteredColumns","captionTemplate","guid","groupFooterTemplate","groupCaptionTemplate","getCurrentViewRecords","records","isChildGrid","touches","checkEdit","preventDefault","cancel","clonedColumn","recordClick","click","mode","dataRow","recordDoubleClick","dblclick","filterClear","relatedTarget","ariaOwns","keyPress","editNextValCell","editFormValidate","persistedData","localStorage","getItem","dataObj","JSON","parse","isProtectedOnChange","keys_1","isArray","mergeColumns","storedColumn","storedColumns","_loop_2","localCol","tCol","this_2","commands","commandsTemplate","foreignKeyValue","presskey","stopImmediatePropagation","altKey","keyCode","groupCollapse","collapse","focusHeader","addOutline","focusContent","setInjectedModules","injectedModules","autoCol","isForeignColumn","refreshColumns","fCnt","mTbl","getMovableContent","colGroup","cloneNode","insertBefore","getMovableHeader","scrollLeft","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","groupColumn","groupModule","groupExpandAll","expandAll","groupCollapseAll","collapseAll","clearGrouping","ungroupColumn","openColumnChooser","detailCollapseAll","detailRowModule","detailExpandAll","clearCellSelection","clearRowSelection","selectCells","rowCellIndexes","selectRowsByRange","isContextMenuOpen","isOpen","ensureModuleInjected","getInjectedModules","destroyTemplate","propertyNames","clearTemplate","loggerModule","applyBiggerTheme","getPreviousRowData","previousRowData","hideScroll","cTable","fTable","clientHeight","overflowY","scrollWidth","clientWidth","overflowX","frozenHeight","getRowIndexByPrimaryKey","grabColumnByFieldFromAllCols","grabColumnByUidFromAllCols","getFilteredRecords","generateQuery","isRemote","getData","executeLocal","getUserAgent","userAgent","toLowerCase","test","timer","setTimeout","clearTimeout","doubleTap","getRowUid","prefix","getMovableVirtualContent","getFrozenVirtualContent","getMovableVirtualHeader","getFrozenVirtualHeader","getRowElementByUID","rowEle","mRows","cntRows","rows_2","getHiddenColumns","calculatePageSizeByParentHeight","containerHeight","pagesize","nonContentHeight","getNoncontentHeight","contentHeight","Math","floor","showDropArea","getSummaryValues","summaryCol","summaryData","updateRowValue","updateData","setForeignKeyData","colpending","getForeignKeyDataState","setForeignKeyDataState","resetFilterDlgPosition","header","filterDlg","gClient","fClient","left","right","toString","renderTemplates","portals","renderReactTemplates","batchUpdate","processRowChanges","batchAsyncUpdate","processBulkRowChanges","dataToBeUpdated","assign","addedRecords","changedRecords","deletedRecords","loopstring","keyField","promise","saveChanges","requiresCount","then","setNewData","oldValues","stringify","bulkRefresh","deleteRowElement","mtr","_loop_3","this_3","out_i_1","_loop_4","isRowExist","this_4","renderRowElement","model","modelData","generateRows","mTbody","addRowObject","tbody","emptyRow","parentNode","moveTbody","clone","getHeight","Number","isInteger"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, setValue, getValue, isBlazor, blazorTemplates } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, updateBlazorTemplate, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable } from './util';\nimport { setRowElements, resetRowIndex, compareChanges } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { gridObserver } from '../actions/blazor-action';\nimport { RowModelGenerator } from '../services/row-model-generator';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        Property(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */ (function (_super) {\n    __extends(ResizeSettings, _super);\n    function ResizeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], ResizeSettings.prototype, \"mode\", void 0);\n    return ResizeSettings;\n}(ChildProperty));\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        Property([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isPreventScrollEvent = false;\n        _this.inViewIndexes = [];\n        _this.keyA = false;\n        _this.media = {};\n        _this.componentRefresh = Component.prototype.refresh;\n        /** @hidden */\n        _this.isVirtualAdaptive = false;\n        /** @hidden */\n        _this.vRows = [];\n        /** @hidden */\n        _this.vcRows = [];\n        /** @hidden */\n        _this.vGroupOffsets = {};\n        /** @hidden */\n        _this.rowUid = 0;\n        /**\n         * Gets the currently visible records of the Grid.\n         */\n        _this.currentViewData = [];\n        /** @hidden */\n        _this.lockcolPositionCount = 0;\n        /** @hidden */\n        _this.prevPageMoving = false;\n        /** @hidden */\n        _this.pageTemplateChange = false;\n        /** @hidden */\n        _this.isAutoGen = false;\n        _this.mediaBindInstance = {};\n        /** @hidden */\n        _this.commandDelIndex = undefined;\n        /** @hidden */\n        _this.asyncTimeOut = 50;\n        // enable/disable logger for MVC & Core\n        _this.enableLogger = true;\n        _this.needsID = true;\n        Grid_1.Inject(Selection);\n        setValue('mergePersistData', _this.mergePersistGridData, _this);\n        return _this;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Grid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource', 'headerText'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.pageSettings.template = undefined;\n        /* tslint:disable-next-line:no-any */\n        if (this.isAngular) {\n            /* tslint:disable:no-string-literal */\n            delete this.groupSettings['properties']['captionTemplate'];\n        }\n        this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    Grid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator] });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator] });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            modules.push({\n                member: 'lazyLoadGroup',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator] });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this] });\n        }\n        if (isBlazor()) {\n            modules.push({ member: 'blazor', args: [this] });\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        /* tslint:disable */\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        if (isBlazor() && this.enableVirtualization && this.allowGrouping) {\n            var isExpanded = 'isExpanded';\n            this[isExpanded] = false;\n        }\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.componentRefresh = Component.prototype.refresh;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            UnGroupButton: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            SearchColumns: 'search columns',\n            Matchs: 'No Matches Found',\n            FilterButton: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            EndsWith: 'Ends With',\n            Contains: 'Contains',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            AutoFitAll: 'Autofit all columns',\n            AutoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No Matches Found',\n            ClearFilter: 'Clear Filter',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            FilterMenuDialogARIA: 'Filter menu dialog',\n            ExcelFilterDialogARIA: 'Excel filter dialog',\n            DialogEditARIA: 'Edit dialog',\n            ColumnChooserDialogARIA: 'Column chooser dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n        /* tslint:enable */\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { role: 'grid' });\n        if (isBlazor()) {\n            this.renderComplete();\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this, this.serviceLocator);\n        this.searchModule = new Search(this);\n        this.scrollModule = new Scroll(this);\n        this.notify(events.initialLoad, {});\n        if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n            this.isVirtualAdaptive = true;\n        }\n        this.trigger(events.load);\n        prepareColumns(this.columns, this.enableColumnVirtualization);\n        if (this.enablePersistence) {\n            this.notify(events.columnsPrepared, {});\n        }\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.getMediaColumns();\n            setColumnIndex(this.columns);\n        }\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        this.showSpinner();\n        this.notify(events.initialEnd, {});\n        if (isBlazor() && this.isServerRendered) {\n            gridObserver.notify(events.componentRendered, { id: this.element.id, grid: this });\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    Grid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually showed spinner needs to hide by `hideSpinnner`.\n     */\n    Grid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().querySelectorAll('.e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!isNullOrUndefined(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n                        this.pushMediaColumn(gcol[index], index);\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n        this.media[col.uid].addListener(this.mediaBindInstance[index]);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[i].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[columnIndex];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        var footerContent = this.element.querySelector('.e-gridfooter');\n        if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n            addClass([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.e-gridheader') &&\n            gridElement.querySelector('.e-gridcontent') ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(events.destroy, {});\n        this.destroyDependentModules();\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        if (!(isBlazor() && this.isServerRendered)) {\n            this.element.innerHTML = '';\n        }\n        else {\n            this.element.style.display = 'none';\n        }\n        classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent'))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n            this.element.classList.add('e-afenabled');\n        }\n        else {\n            this.element.classList.remove('e-afenabled');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize)\n                        && isNullOrUndefined(newProp.pageSettings.totalRecordsCount)\n                        || !isNullOrUndefined(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar') {\n                        this.refreshHeader();\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    this.renderModule.refresh();\n                    this.headerModule.refreshUI();\n                    break;\n                case 'allowSelection':\n                    this.notify(events.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'enableInfiniteScrolling':\n                case 'childGrid':\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.notify(events.uiUpdate, { module: 'toolbar' });\n                    break;\n                case 'groupSettings':\n                    this.notify(events.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    this.log('frozen_rows_columns');\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    break;\n                case 'query':\n                    if (!this.getDataModule().isQueryInvokedFromData) {\n                        requireRefresh = true;\n                    }\n                    this.getDataModule().isQueryInvokedFromData = false;\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.frozenColumns || this.frozenRows) {\n                if (!(isBlazor() && this.isServerRendered)) {\n                    this.freezeRefresh();\n                }\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(events.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    /* tslint:disable */\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n                    this.refreshHeader();\n                }\n                this.notify(events.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    addClass([this.element], 'e-grid-min-height');\n                }\n                else {\n                    removeClass([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(events.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                this.notify(events.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(events.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(events.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                break;\n            case 'dataSource':\n                var pending_1 = this.getDataModule().getState();\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n                    }\n                }\n                else if (pending_1.isPending) {\n                    var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n                    var names = (pending_1.group || []);\n                    for (var i = 0; i < names.length; i++) {\n                        gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n                    }\n                    this.dataSource = {\n                        result: gResult, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    pending_1.resolver(this.dataSource);\n                }\n                else {\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(events.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                var action = newProp.enableHover ? addClass : removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n            case 'resizeSettings':\n                this.widthService.setWidthToTable();\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this.selectRow(index);\n                _this.off(events.contentReady, fn_1);\n            };\n            this.on(events.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().querySelectorAll('.e-stackedheadercell'));\n        var cols = this.getColumns();\n        if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n            var cells = this.contentModule.getHeaderCells();\n            headerCells = cells.length ? cells : headerCells;\n        }\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[i];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[count].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns) {\n        for (var i = 0, len = columns.length; i < len; i++) {\n            if (columns[i].columns) {\n                this.updateColumnModel(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(columns[i]);\n            }\n        }\n        this.updateFrozenColumns();\n        this.updateLockableColumns();\n    };\n    Grid.prototype.updateFrozenColumns = function () {\n        var cols = this.columnModel;\n        var count = 0;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].isFrozen) {\n                cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n                count++;\n            }\n        }\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].columns) {\n                this.checkLockColumns(cols[i].columns);\n            }\n            else if (cols[i].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * Gets the columns from the Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n        if (this.contentModule && this.enableColumnVirtualization && this.getFrozenColumns() && inview.length\n            && inview[0] > 0) {\n            var frozenCols = this.contentModule.ensureFrozenCols(columns);\n            columns = frozenCols;\n        }\n        return columns;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[i];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * Gets the header div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     * @param  {Element} element - Specifies the Grid header.\n     * @return {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     * @param  {Element} element - Specifies the Grid content table.\n     * @return {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     * @param  {Element} element - Specifies the Grid content.\n     * @return {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     * @param  {Element} element - Specifies the Grid header table.\n     * @return {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getFooterContent = function () {\n        this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        this.footerElement = this.element.getElementsByClassName('e-gridfooter')[0];\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     * @return {Element}\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     * @param  {Element} element - Specifies the Grid pager.\n     * @return {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.getFrozenDataRows()[index];\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     * @return {Element[]}\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse')\n            && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n            var cell = closest(ele, '.e-rowcell');\n            if (!cell) {\n                var row = closest(ele, '.e-row');\n                if (!isNullOrUndefined(row)) {\n                    var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n                    var rowIndex = parseInt(row.getAttribute('aria-rowindex'), 10);\n                    args = { row: row, rowData: rowObj.data, rowIndex: rowIndex };\n                }\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute('aria-colindex'), 10);\n            if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n                var row_1 = closest(cell, '.e-row');\n                var rowIndex = parseInt(row_1.getAttribute('aria-rowindex'), 10);\n                var frzCols = this.getFrozenColumns();\n                var isMovable = frzCols ? cellIndex >= frzCols : false;\n                var rows = (isMovable ?\n                    this.contentModule.getMovableRows() : this.contentModule.getRows());\n                var rowsObject = rows.filter(function (r) { return r.uid === row_1.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[isMovable ? cellIndex - frzCols : cellIndex + this.getIndentCount()].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_1, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     * @return {Element[]}\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getMovableRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getDataRows = function () {\n        if (isNullOrUndefined(this.getContentTable().querySelector('tbody'))) {\n            return [];\n        }\n        var rows = [].slice.call(this.getContentTable().querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderTable().querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows);\n        return dataRows;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[i]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[i].classList.contains('e-row') && !rows[i].classList.contains('e-hiddenrow')) {\n                if (this.isCollapseStateEnabled()) {\n                    dRows[parseInt(rows[i].getAttribute(\"aria-rowindex\"))] = rows[i];\n                }\n                else {\n                    dRows.push(rows[i]);\n                }\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        var rows = [].slice.call(this.getContent().querySelector('.e-movablecontent').querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        var rows = [].slice.call(this.getContent().querySelector('.e-frozencontent').querySelector('tbody').children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozenheader').querySelector('tbody').children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows);\n        return dataRows;\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var fieldIdx;\n        var col;\n        var tr;\n        var mTr;\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new CellRenderer(this, this.serviceLocator);\n        var selectedRow = {};\n        var movableSelectedRow = {};\n        var rowObjects = this.contentModule.getRows();\n        var movableRowObjects = this.contentModule.getMovableRows();\n        fieldIdx = this.getColumnIndexByField(field);\n        if (this.groupSettings.columns.length) {\n            fieldIdx = fieldIdx + this.groupSettings.columns.length;\n        }\n        if (this.childGrid || this.detailTemplate) {\n            fieldIdx++;\n        }\n        if (this.isRowDragable()) {\n            fieldIdx++;\n        }\n        col = this.getColumnByField(field);\n        selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        movableSelectedRow = movableRowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        tr = !isNullOrUndefined(selectedRow) ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n        mTr = !isNullOrUndefined(movableSelectedRow) ? this.element.querySelector('[data-uid=' + movableSelectedRow[rowuID] + ']') : null;\n        if (!isNullOrUndefined(tr)) {\n            setValue(field, value, selectedRow[rowData]);\n            var td = !isNullOrUndefined(tr[cells][fieldIdx]) ?\n                tr[cells][fieldIdx] : mTr[cells][fieldIdx - this.frozenColumns];\n            if (!isNullOrUndefined(td)) {\n                var sRow = selectedRow[cells][fieldIdx];\n                var mRow = void 0;\n                if (this.frozenColumns) {\n                    mRow = movableSelectedRow[cells][fieldIdx - this.frozenColumns];\n                }\n                cell.refreshTD(td, !isNullOrUndefined(sRow) ? sRow : mRow, selectedRow[rowData], { index: selectedRow[rowIdx] });\n                if (this.aggregates.length > 0) {\n                    this.notify(events.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(events.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!isNullOrUndefined(movableSelectedRow) && !isNullOrUndefined(movableSelectedRow['changes'])) {\n                    movableSelectedRow['changes'][field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(events.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[rowData]\n                });\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rwdata = 'data';\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var selectedRow;\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n            selectedRow.changes = rowData;\n            refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n            rowRenderer.refresh(selectedRow, this.getColumns(), true);\n            if (this.aggregates.length > 0) {\n                this.notify(events.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(events.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        var frzCols = this.getFrozenColumns();\n        return frzCols && columnIndex >= frzCols ?\n            this.getMovableDataRows()[rowIndex] && this.getMovableDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - frzCols] :\n            this.getDataRows()[rowIndex] && this.getDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex];\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getMovableDataRows()[rowIndex] &&\n            this.getMovableDataRows()[rowIndex].querySelectorAll('.e-rowcell')[columnIndex - this.getFrozenColumns()];\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().querySelectorAll('.e-headercell')[index];\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if (this.getFrozenColumns()) {\n            if (!row) {\n                row = this.rowObject(this.contentModule.getMovableRows(), uid);\n                return row;\n            }\n        }\n        if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.uid === uid) {\n                return row;\n            }\n        }\n        return null;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        return this.contentModule.getMovableRows();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        var column = this.getColumnByField(field);\n        return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n        return element ? element.parentElement : undefined;\n    };\n    /**\n     * @hidden\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     * @blazorType GridColumn\n     */\n    Grid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets TH index by column uid value.\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @return {number}\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        return index + this.getIndentCount();\n    };\n    /**\n    * Gets indent cell count.\n    * @private\n    * @return {number}\n    */\n    Grid.prototype.getIndentCount = function () {\n        var index = 0;\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.allowRowDragAndDrop && isNullOrUndefined(this.rowDropSettings.targetID)) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[i];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     * @return {Function}\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit header template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getEditHeaderTemplate = function () {\n        return this.editHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit footer template.\n     * @private\n     * @return {Function}\n     */\n    Grid.prototype.getEditFooterTemplate = function () {\n        return this.editFooterTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     * @return {string[]}\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[k].isPrimaryKey) {\n                keys.push(this.columnModel[k].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     */\n    Grid.prototype.refresh = function () {\n        this.headerModule.refreshUI();\n        this.updateStackedFilter();\n        this.renderModule.refresh();\n    };\n    /**\n     * Refreshes the Grid header.\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    /**\n     * Get the current Filter operator and field.\n     * @return {Object}\n     */\n    Grid.prototype.getFilterUIInfo = function () {\n        return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var col = this.columns;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (col[i].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen && cols[i].visible) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearFiltering = function (fields) {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering(fields);\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @return {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n     * @return {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector('colgroup').childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector('colgroup').childNodes);\n        var perPixel = indentWidth / 30;\n        var i = 0;\n        var parentOffset = this.element.offsetWidth;\n        var applyWidth = function (index, width) {\n            if (ispercentageWidth(_this)) {\n                var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n                headerCol[index].style.width = newWidth;\n                contentCol[index].style.width = newWidth;\n            }\n            else {\n                headerCol[index].style.width = width + 'px';\n                contentCol[index].style.width = width + 'px';\n            }\n            _this.notify(events.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.resetIndentWidth = function () {\n        if (ispercentageWidth(this)) {\n            this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n            this.widthService.setWidthToColumns();\n            this.recalcIndentWidth();\n        }\n        if ((this.width === 'auto' || typeof (this.width) === 'string' && this.width.indexOf('%') !== -1)\n            && this.getColumns().filter(function (col) { return (!col.width || col.width === 'auto') && col.minWidth; }).length > 0) {\n            var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n            this.widthService.setMinwidthBycalculation(tgridWidth);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @return {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     * @return {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e, args) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        setStyleAttribute(headerTable.querySelector('colgroup').childNodes[0], { 'display': disValue });\n        setStyleAttribute(contentTable.querySelector('colgroup').childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[i].firstElementChild;\n            enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[j];\n            enable ? addClass([ele], 'e-hide') : removeClass([ele], ['e-hide']);\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames) {\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_1 = function (i, len) {\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[j].field === gCols[i]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[i], direction: 'Ascending', isFromGroup: true });\n                }\n                else {\n                    if (this_1.allowSorting) {\n                        this_1.sortedColumns.push(sCols[j].field);\n                    }\n                    else {\n                        sCols[j].direction = 'Ascending';\n                    }\n                }\n                if (!this_1.groupSettings.showGroupedColumn) {\n                    var column = this_1.enableColumnVirtualization ?\n                        this_1.columns.filter(function (c) { return c.field === gCols[i]; })[0] : this_1.getColumnByField(gCols[i]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_1.log('initial_action', { moduleName: 'group', columnName: gCols[i] });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_1(i, len);\n            }\n        }\n        if (!gCols.length) {\n            for (var i = 0; i < sCols.length; i++) {\n                this.sortedColumns.push(sCols[i].field);\n            }\n        }\n        this.rowTemplateFn = templateCompiler(this.rowTemplate);\n        this.detailTemplateFn = templateCompiler(this.detailTemplate);\n        this.editTemplateFn = templateCompiler(this.editSettings.template);\n        this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n        this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n        if (!isNullOrUndefined(this.parentDetails)) {\n            var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        this.updateRTL();\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (Browser.isDevice) {\n            this.element.classList.add('e-device');\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        classList(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n        this.printModule = new Print(this, this.scrollModule);\n        this.clipboardModule = new Clipboard(this);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup', styles: 'display:none;' });\n        var content = this.createElement('div', { className: 'e-content', attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    wrap(this.element, false);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, true);\n                    break;\n                case 'Content':\n                    wrap(this.getContent(), true);\n                    wrap(this.element, false);\n                    wrap(headerRows, false);\n                    break;\n                default:\n                    wrap(this.element, true);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, false);\n            }\n            if (this.textWrapSettings.wrapMode !== 'Content') {\n                this.notify(events.refreshHandlers, {});\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        wrap(this.element, false);\n        var headerRows = [].slice.call(this.element.querySelectorAll('.e-columnheader'));\n        wrap(headerRows, false);\n        wrap(this.getContent(), false);\n        if (this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     * @return {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new Tooltip({ opensOn: 'custom', content: '' }, this.element);\n    };\n    /** @hidden */\n    Grid.prototype.freezeRefresh = function () {\n        if (this.enableVirtualization) {\n            this.pageSettings.currentPage = 1;\n        }\n        this.componentRefresh();\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var width;\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerDivTag = 'e-gridheader';\n        var contentDivTag = 'e-gridcontent';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var td = element;\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        table.querySelector(ele).innerHTML = element.innerHTML;\n        width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if (width > element.getBoundingClientRect().width) {\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = parentsUntil(e.target, 'e-ellipsistooltip');\n            if (this.prevElement !== element || e.type === 'mouseout') {\n                this.toolTipObj.close();\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (element.getAttribute('aria-describedby')) {\n                    return;\n                }\n                if (this.getTooltipStatus(element)) {\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n                    }\n                    else {\n                        this.toolTipObj.content = element.innerText;\n                    }\n                    this.prevElement = element;\n                    this.toolTipObj.open(element);\n                }\n            }\n        }\n        this.hoverFrozenRows(e);\n    };\n    /** @hidden */\n    Grid.prototype.hoverFrozenRows = function (e) {\n        if (this.getFrozenColumns()) {\n            var row = parentsUntil(e.target, 'e-row');\n            if ([].slice.call(this.element.querySelectorAll('.e-frozenhover')).length && e.type === 'mouseout') {\n                var rows = [].slice.call(this.element.querySelectorAll('.e-frozenhover'));\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].classList.remove('e-frozenhover');\n                }\n            }\n            else if (row) {\n                var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute('aria-rowindex') + '\"]'));\n                rows.splice(rows.indexOf(row), 1);\n                if (row.getAttribute('aria-selected') != 'true' && rows[0]) {\n                    rows[0].classList.add('e-frozenhover');\n                }\n                else if (rows[0]) {\n                    rows[0].classList.remove('e-frozenhover');\n                }\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table');\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr');\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    Grid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    Grid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        EventHandler.remove(window, 'resize', this.resetIndentWidth);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(events.dataReady, this.dataReady, this);\n        this.on(events.contentReady, this.recalcIndentWidth, this);\n        this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.on(events.keyPressed, this.onKeyPressed, this);\n        this.on(events.contentReady, this.blazorTemplate, this);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(events.dataReady, this.dataReady);\n        this.off(events.contentReady, this.recalcIndentWidth);\n        this.off(events.headerRefreshed, this.recalcIndentWidth);\n        this.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.off(events.keyPressed, this.onKeyPressed);\n    };\n    Grid.prototype.blazorTemplate = function () {\n        if (isBlazor()) {\n            if (this.pageSettings.template) {\n                updateBlazorTemplate(this.element.id + \"_template\", 'Template', this.pageSettings);\n            }\n            for (var i = 0; i < this.columnModel.length; i++) {\n                if (this.columnModel[i].template) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid, 'Template', this.columnModel[i], false);\n                }\n                if (this.columnModel[i].headerTemplate) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'headerTemplate', 'HeaderTemplate', this.columnModel[i], false);\n                }\n                if (this.filterSettings.type == 'FilterBar' && this.columnModel[i].filterTemplate) {\n                    var fieldName = this.columnModel[i].field;\n                    var tempID = this.element.id + this.columnModel[i].uid + 'filterTemplate';\n                    var filteredColumns = this.filterSettings.columns;\n                    for (var k = 0; k < filteredColumns.length; k++) {\n                        if (fieldName == filteredColumns[k].field) {\n                            blazorTemplates[tempID][0][fieldName] = filteredColumns[k].value;\n                        }\n                    }\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i], false);\n                }\n                if (this.filterSettings.type != 'FilterBar' && this.columnModel[i].filterTemplate) {\n                    updateBlazorTemplate(this.element.id + this.columnModel[i].uid + 'filterTemplate', 'FilterTemplate', this.columnModel[i]);\n                }\n            }\n            if (this.groupSettings.captionTemplate) {\n                updateBlazorTemplate(this.element.id + 'captionTemplate', 'CaptionTemplate', this.groupSettings);\n            }\n            var guid = 'guid';\n            for (var k = 0; k < this.aggregates.length; k++) {\n                for (var j = 0; j < this.aggregates[k].columns.length; j++) {\n                    if (this.aggregates[k].columns[j].footerTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'footerTemplate', 'FooterTemplate', this.aggregates[k].columns[j]);\n                    }\n                    if (this.aggregates[k].columns[j].groupFooterTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupFooterTemplate', 'GroupFooterTemplate', this.aggregates[k].columns[j]);\n                    }\n                    if (this.aggregates[k].columns[j].groupCaptionTemplate) {\n                        updateBlazorTemplate(this.element.id + this.aggregates[k].columns[j][guid] + 'groupCaptionTemplate', 'GroupCaptionTemplate', this.aggregates[k].columns[j]);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get current visible data of grid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if (isGroupAdaptive(this)) {\n            return isNullOrUndefined(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            return this.currentViewData;\n        }\n        ;\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records) ?\n            this.currentViewData.records : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || (parentsUntil(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.querySelectorAll('.e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && (parentsUntil(e.target, 'e-gridcontent') ||\n            e.target.tagName === 'TD')) || (!(this.allowGrouping || this.allowReordering) &&\n            parentsUntil(e.target, 'e-gridheader'))) && e.touches) {\n            return;\n        }\n        if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop) {\n            e.preventDefault();\n        }\n        var args = this.getRowInfo(e.target);\n        var cancel = 'cancel';\n        args[cancel] = false;\n        var isDataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            isDataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        if (isBlazor()) {\n            var clonedColumn = extend({}, args.column);\n            args = { rowData: args.rowData, rowIndex: args.rowIndex,\n                cellIndex: args.cellIndex, column: clonedColumn };\n        }\n        if (isDataRow) {\n            this.trigger(events.recordClick, args);\n        }\n        this.notify(events.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = parentsUntil(e.target, 'e-row');\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains('e-editedrow') || tr.classList.contains('e-addedrow'));\n        return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || (parentsUntil(e.target, 'e-rowcell') &&\n            parentsUntil(e.target, 'e-rowcell').classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = parentsUntil(e.target, 'e-grid');\n        if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(events.recordDoubleClick, args);\n        }\n        this.notify(events.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!parentsUntil(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!parentsUntil(relatedTarget, 'e-grid') &&\n            (!isNullOrUndefined(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch') {\n                this.editModule.saveCell();\n                this.notify(events.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal') {\n                this.editModule.editFormValidate();\n            }\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = parentsUntil(e.target, 'e-grid');\n        if (gridElement && gridElement.id !== this.element.id) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.mergePersistGridData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            if (this.enableVirtualization) {\n                dataObj.pageSettings.currentPage = 1;\n            }\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[key] === 'object') && !isNullOrUndefined(this[key])) {\n                    if (Array.isArray(this[key]) && key === 'columns') {\n                        if (!(isBlazor() && this.isServerRendered)) {\n                            setColumnIndex(this[key]);\n                        }\n                        this.mergeColumns(dataObj[key], this[key]);\n                        this[key] = dataObj[key];\n                    }\n                    else {\n                        extend(this[key], dataObj[key]);\n                    }\n                }\n                else {\n                    this[key] = dataObj[key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var storedColumns = storedColumn;\n        var _loop_2 = function (i) {\n            var localCol = columns.filter(function (tCol) { return tCol.index === storedColumns[i].index; })[0];\n            if (!isNullOrUndefined(localCol)) {\n                if (localCol.columns && localCol.columns.length) {\n                    this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n                else {\n                    if (isBlazor()) {\n                        var guid = 'guid';\n                        storedColumns[i][guid] = localCol[guid];\n                        storedColumns[i].uid = localCol.uid;\n                    }\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_2(i);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isDetail = function () {\n        return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = extend(e, { cancel: false, });\n        this.trigger(\"keyPressed\", presskey);\n        if (presskey.cancel === true) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                if (this.keyA) { //alt A J\n                    this.notify(events.groupCollapse, { target: e.target, collapse: false });\n                    this.keyA = false;\n                }\n                else {\n                    this.focusModule.focusHeader();\n                    this.focusModule.addOutline();\n                }\n            }\n            if (e.keyCode === 87) { //alt w\n                this.focusModule.focusContent();\n                this.focusModule.addOutline();\n            }\n            if (e.keyCode === 65) { //alt A\n                this.keyA = true;\n            }\n            if (e.keyCode === 72 && this.keyA) { //alt A H\n                this.notify(events.groupCollapse, { target: e.target, collapse: true });\n                this.keyA = false;\n            }\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        this.keyPress = e.action !== 'space';\n        if (this.isChildGrid(e) ||\n            (this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter'\n                && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(events.keyPressed, e);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        prepareColumns(this.columns, this.enableColumnVirtualization);\n        if (!(isBlazor() && this.isServerRendered)) {\n            setColumnIndex(this.columns);\n        }\n        this.initForeignColumn();\n        this.notify(events.autoCol, {});\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     * @return {Column[]}\n     * @blazorType List<GridColumn>\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        return this.getColumns().filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowHeight = function () {\n        return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     */\n    Grid.prototype.refreshColumns = function () {\n        var fCnt = this.getContent().querySelector('.e-frozencontent');\n        if ((this.getFrozenColumns() === 1 && !fCnt) || (this.getFrozenColumns() === 0 && fCnt)) {\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else {\n            this.isPreventScrollEvent = true;\n            this.updateColumnObject();\n            this.checkLockColumns(this.getColumns());\n            this.refresh();\n            if (this.getFrozenColumns()) {\n                var mTbl = this.contentModule.getMovableContent().querySelector('.e-table');\n                remove(mTbl.querySelector('colgroup'));\n                var colGroup = ((this.getHeaderContent()\n                    .querySelector('.e-movableheader').querySelector('colgroup')).cloneNode(true));\n                mTbl.insertBefore(colGroup, mTbl.querySelector('tbody'));\n            }\n        }\n        if (this.getFrozenColumns()) {\n            this.headerModule.getMovableHeader().scrollLeft = this.contentModule.getMovableContent().scrollLeft;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob);\n            return null;\n        }\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n    };\n    /**\n     * Export Grid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob);\n            return null;\n        }\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n    };\n    /**\n     * Groups a column by column name.\n     * @param  {string} columnName - Defines the column name to group.\n     * @return {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n    * Collapses all the grouped rows of the Grid.\n    * @return {void}\n    */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @return {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     * @param  {string} columnName - Defines the column name to ungroup.\n     * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n     * @return {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this = this;\n        var refresh = function () {\n            _this.scrollModule.refresh();\n            _this.off(events.contentReady, refresh);\n        };\n        this.on(events.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @return {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     * @return {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @return {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n    * Expands all the detail rows of the Grid.\n    * @return {void}\n    */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     * @return {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     * @return {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @return {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @return {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     */\n    //tslint:disable-next-line:no-any\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     * @return {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.e-content');\n        var cTable = content.querySelector('.e-movablecontent') ? content.querySelector('.e-movablecontent') : content;\n        var fTable = content.querySelector('.e-frozencontent') ? content.querySelector('.e-frozencontent') : content;\n        if (cTable.scrollHeight <= cTable.clientHeight && fTable.scrollHeight <= fTable.clientHeight) {\n            this.scrollModule.removePadding();\n            cTable.style.overflowY = 'auto';\n        }\n        if (this.frozenColumns && cTable.scrollWidth <= cTable.clientWidth) {\n            cTable.style.overflowX = 'auto';\n            cTable.style.overflowY = 'auto';\n            this.notify(events.frozenHeight, 0);\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     * @param  {string} value - Defines the primary key value.\n     * @param  {Object} value - Defines the row data.\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[pkName] : value;\n        for (var i = 0; i < this.getRowsObject().length; i++) {\n            if (this.getRowsObject()[i].data[pkName] === value) {\n                return this.getRowsObject()[i].index;\n            }\n        }\n        return -1;\n    };\n    ;\n    /**\n    * @hidden\n    */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (field === gCols[i].field) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n    * @hidden\n    */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (uid === gCols[i].uid) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     * @return {Object[] | Promise<Object>}\n\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if (this.allowFiltering && this.filterSettings.columns.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad/.test(userAgent);\n    };\n    /**\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!Global.timer) {\n                Global.timer = setTimeout(function () {\n                    Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(Global.timer);\n                Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(events.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableVirtualContent = function () {\n        return this.getContent().querySelector('.e-movablecontent');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenVirtualContent = function () {\n        return this.getContent().querySelector('.e-frozencontent');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getMovableVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.e-movableheader');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getFrozenVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.e-frozenheader');\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        if (this.getFrozenColumns()) {\n            var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector('tbody').children);\n            var mRows = [].slice.call(this.getMovableVirtualContent().querySelector('tbody').children);\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getFrozenVirtualHeader().querySelector('tbody').children);\n                rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector('tbody').children));\n                rows = rows.concat(fRows).concat(mRows);\n            }\n            else {\n                rows = fRows.concat(mRows);\n            }\n        }\n        else {\n            var cntRows = [].slice.call(this.getContent().querySelector('tbody').children);\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getHeaderContent().querySelector('tbody').children);\n                rows = rows.concat(cntRows);\n            }\n            else {\n                rows = cntRows;\n            }\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n    * Gets the hidden columns from the Grid.\n    * @return {Column[]}\n    * @blazorType List<GridColumn>\n    */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     *  calculatePageSizeByParentHeight\n\n     */\n    Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n        if (this.allowPaging) {\n            if ((this.allowTextWrap && this.textWrapSettings.wrapMode == 'Header') || (!this.allowTextWrap)) {\n                var pagesize = 0;\n                if (containerHeight.indexOf('%') != -1) {\n                    containerHeight = parseInt(containerHeight) / 100 * this.element.clientHeight;\n                }\n                var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n                if (containerHeight > nonContentHeight) {\n                    var contentHeight = 0;\n                    contentHeight = containerHeight - this.getNoncontentHeight();\n                    pagesize = (contentHeight / this.getRowHeight());\n                }\n                if (pagesize > 0) {\n                    return Math.floor(pagesize);\n                }\n            }\n        }\n        return 0;\n    };\n    Grid.prototype.getNoncontentHeight = function () {\n        var height = 0;\n        if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n            height += this.getHeaderContent().clientHeight;\n        }\n        if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n            height += this.element.querySelector('.e-toolbar').clientHeight;\n        }\n        if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n            height += this.element.querySelector('.e-gridpager').clientHeight;\n        }\n        if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector(\".e-columnheader\").clientHeight)) {\n            height += this.element.querySelector(\".e-columnheader\").clientHeight;\n        }\n        if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n            height += this.element.querySelector('.e-groupdroparea').clientHeight;\n        }\n        if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n            for (var i = 0; i < this.element.querySelectorAll('.e-summaryrow').length; i++) {\n                height += this.element.querySelectorAll('.e-summaryrow')[i].clientHeight;\n            }\n        }\n        return height;\n    };\n    /**\n     *To perform aggregate operation on a column.\n     *@param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n     *@param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n\n     */\n    Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n        return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.isCollapseStateEnabled = function () {\n        var isExpanded = 'isExpanded';\n        return this[isExpanded] === false;\n    };\n    /**\n     * @param {number} key - Defines the primary key value.\n     * @param {Object} value - Defines the row data.\n\n     */\n    Grid.prototype.updateRowValue = function (key, rowData) {\n        var args = {\n            requestType: 'save', data: rowData,\n        };\n        this.showSpinner();\n        this.notify(events.updateData, args);\n        this.refresh();\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.setForeignKeyData = function () {\n        this.dataBind();\n        var colpending = this.getDataModule().getForeignKeyDataState();\n        if (colpending.isPending) {\n            this.getDataModule().setForeignKeyDataState({});\n            colpending.resolver();\n        }\n        else {\n            this.getDataModule().setForeignKeyDataState({ isDataChanged: false });\n            if (this.contentModule || this.headerModule) {\n                this.renderModule.render();\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.resetFilterDlgPosition = function (field) {\n        var header = this.getColumnHeaderByField(field);\n        if (header) {\n            var target = header.querySelector('.e-filtermenudiv');\n            var filterDlg = this.element.querySelector('.e-filter-popup');\n            if (target && filterDlg) {\n                var gClient = this.element.getBoundingClientRect();\n                var fClient = target.getBoundingClientRect();\n                if (filterDlg) {\n                    filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.renderTemplates = function () {\n        var portals = 'portals';\n        this.notify('reactTemplateRender', this[portals]);\n        this.renderReactTemplates();\n    };\n    /**\n     * Apply the changes to the Grid without refreshing the rows.\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @return {void}\n     */\n    Grid.prototype.batchUpdate = function (changes) {\n        this.processRowChanges(changes);\n    };\n    /**\n     * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @return {void}\n     */\n    Grid.prototype.batchAsyncUpdate = function (changes) {\n        this.processBulkRowChanges(changes);\n    };\n    Grid.prototype.processBulkRowChanges = function (changes) {\n        var _this = this;\n        if (!this.dataToBeUpdated) {\n            this.dataToBeUpdated = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n            setTimeout(function () {\n                _this.processRowChanges(_this.dataToBeUpdated);\n                _this.dataToBeUpdated = null;\n            }, this.asyncTimeOut);\n        }\n        else {\n            var loopstring = ['addedRecords', 'changedRecords', 'deletedRecords'];\n            var keyField = this.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < loopstring.length; i++) {\n                if (changes[loopstring[i]]) {\n                    compareChanges(this, changes, loopstring[i], keyField);\n                }\n            }\n        }\n    };\n    Grid.prototype.processRowChanges = function (changes) {\n        var _this = this;\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        changes = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n        var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n        if (this.getDataModule().isRemote()) {\n            promise.then(function (e) {\n                _this.setNewData();\n            });\n        }\n        else {\n            this.setNewData();\n        }\n    };\n    Grid.prototype.setNewData = function () {\n        var _this = this;\n        var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n        var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n        getData.then(function (e) {\n            _this.bulkRefresh(e.result, oldValues, e.count);\n        });\n    };\n    Grid.prototype.deleteRowElement = function (row) {\n        var tr = this.getRowElementByUID(row.uid);\n        var index = parseInt(tr.getAttribute('aria-rowindex'), 10);\n        remove(tr);\n        if (this.getFrozenColumns()) {\n            var mtr = this.getMovableRows()[index];\n            remove(mtr);\n        }\n    };\n    Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n        var _this = this;\n        var rowObj = this.getRowsObject();\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        var _loop_3 = function (i) {\n            if (!result.filter(function (e) { return e[keyField] === rowObj[i].data[keyField]; }).length) {\n                this_3.deleteRowElement(rowObj[i]);\n                rowObj.splice(i, 1);\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_3 = this, out_i_1;\n        for (var i = 0; i < rowObj.length; i++) {\n            _loop_3(i);\n            i = out_i_1;\n        }\n        var _loop_4 = function (i) {\n            var isRowExist;\n            oldValues.filter(function (e) {\n                if (e[keyField] === result[i][keyField]) {\n                    if (e !== result[i]) {\n                        _this.setRowData(result[i][keyField], result[i]);\n                    }\n                    isRowExist = true;\n                }\n            });\n            if (!isRowExist) {\n                this_4.renderRowElement(result[i], i);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < result.length; i++) {\n            _loop_4(i);\n        }\n        this.currentViewData = result;\n        var rows = [].slice.call(this.getContentTable().querySelectorAll('.e-row'));\n        resetRowIndex(this, this.getRowsObject(), rows);\n        setRowElements(this);\n        if (this.allowPaging) {\n            this.notify(events.inBoundModelChanged, { module: 'pager', properties: { totalRecordsCount: count } });\n        }\n    };\n    Grid.prototype.renderRowElement = function (data, index) {\n        var row = new RowRenderer(this.serviceLocator, null, this);\n        var model = new RowModelGenerator(this);\n        var modelData = model.generateRows([data]);\n        var tr = row.render(modelData[0], this.getColumns());\n        var mTr;\n        var mTbody;\n        this.addRowObject(modelData[0], index);\n        var tbody = this.getContentTable().querySelector('tbody');\n        if (tbody.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n            if (this.getFrozenColumns()) {\n                var moveTbody = this.getContent().querySelector('.e-movablecontent').querySelector('tbody');\n                (moveTbody.firstElementChild).parentNode.removeChild(moveTbody.firstElementChild);\n            }\n        }\n        if (this.getFrozenColumns()) {\n            mTr = renderMovable(tr, this.getFrozenColumns(), this);\n            if (this.frozenRows && index < this.frozenRows) {\n                mTbody = this.getHeaderContent().querySelector('.e-movableheader').querySelector('tbody');\n            }\n            else {\n                mTbody = this.getContent().querySelector('.e-movablecontent').querySelector('tbody');\n            }\n            mTbody.appendChild(mTr);\n            if (this.height === 'auto') {\n                this.notify(events.frozenHeight, {});\n            }\n        }\n        if (this.frozenRows && index < this.frozenRows) {\n            tbody = this.getHeaderContent().querySelector('tbody');\n        }\n        else {\n            tbody = this.getContent().querySelector('tbody');\n        }\n        tbody = this.getContent().querySelector('tbody');\n        tbody.appendChild(tr);\n    };\n    Grid.prototype.addRowObject = function (row, index) {\n        var frzCols = this.getFrozenColumns();\n        if (frzCols) {\n            var mRows = this.getMovableRowsObject();\n            var mRow = row.clone();\n            mRow.cells = mRow.cells.slice(frzCols);\n            row.cells = row.cells.slice(0, frzCols);\n            mRows.splice(index, 1, mRow);\n        }\n        this.getRowsObject().splice(index, 1, row);\n    };\n    /**\n     * @hidden\n     */\n    Grid.prototype.getHeight = function (height) {\n        if (!Number.isInteger(height) && height.indexOf('%') != -1) {\n            height = parseInt(height) / 100 * this.element.clientHeight;\n        }\n        else if (!Number.isInteger(height) && this.height !== 'auto') {\n            height = parseInt(height);\n        }\n        else {\n            height = this.height;\n        }\n        return height;\n    };\n    var Grid_1;\n    __decorate([\n        Property()\n    ], Grid.prototype, \"parentDetails\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Complex({}, ResizeSettings)\n    ], Grid.prototype, \"resizeSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], Grid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Complex({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Complex({}, ColumnChooserSettings)\n    ], Grid.prototype, \"columnChooserSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        Property('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        Property('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Property({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n    Grid = Grid_1 = __decorate([\n        NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(Component));\nexport { Grid };\n"]},"metadata":{},"sourceType":"module"}