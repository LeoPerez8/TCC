{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        for (var i = 0; i < Object.keys(data).length; i++) {\n            var tempData = data[i];\n            this.hierarchyData.push(extend({}, tempData));\n            if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                this.taskIds.push(tempData[this.parent.idMapping]);\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (!isNullOrUndefined(gridColumns[this.treeColumnIndex].template)) {\n            temp = gridColumns[this.treeColumnIndex].template;\n            field = gridColumns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (viewInfo.event === 'refresh-virtual-block') {\n                this.parent.refresh();\n            }\n            else {\n                this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","taskData","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","field","rowTemplate","treeColumn","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","treeGrid","rowSelecting","rowSelected","allowServerDataBinding","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","beginEdit","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","begineditArgs","cellEdit","cellSave","events_1","boundedEvents","pop","isExpandRefresh","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","cellSaved","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionComplete","actionBegin","expandicon","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","scrollHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","showChildSummary","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser"],"mappings":"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AAW,gBAAa,IACpCE,IACIkyB,WACD3a,EAASzX,UAAW,eAAY,IACnCE,IACIkyB,WACD3a,EAASzX,UAAW,iBAAc,IACrCE,IACIkyB,WACD3a,EAASzX,UAAW,gBAAa,IACpCE,IACIkyB,WACD3a,EAASzX,UAAW,eAAY,IACnCE,IACIkyB,WACD3a,EAASzX,UAAW,gBAAa,IACpCE,IACIkyB,WACD3a,EAASzX,UAAW,kBAAe,IACtCE,IACIkyB,WACD3a,EAASzX,UAAW,qBAAkB,IACzCE,IACIkyB,WACD3a,EAASzX,UAAW,gBAAa,IACpCE,IACIkyB,WACD3a,EAASzX,UAAW,eAAY,IACnCE,IACIkyB,WACD3a,EAASzX,UAAW,kBAAe,IACtCE,IACIkyB,WACD3a,EAASzX,UAAW,kBAAe,IACtCE,IACIkyB,WACD3a,EAASzX,UAAW,qBAAkB,IACzCE,IACIkyB,WACD3a,EAASzX,UAAW,wBAAqB,IAC5CE,IACIkyB,WACD3a,EAASzX,UAAW,sBAAmB,IAC1CE,IACIkyB,WACD3a,EAASzX,UAAW,eAAY,IACnCE,IACIkyB,WACD3a,EAASzX,UAAW,oBAAiB,IACxCE,IACIkyB,WACD3a,EAASzX,UAAW,gBAAa,IACpCE,IACIkyB,WACD3a,EAASzX,UAAW,wBAAqB,IAC5CE,IACIkyB,WACD3a,EAASzX,UAAW,sBAAmB,IAC1CE,IACIkyB,WACD3a,EAASzX,UAAW,wBAAqB,IAC5CE,IACIkyB,WACD3a,EAASzX,UAAW,mBAAgB,IACvCE,IACIkyB,WACD3a,EAASzX,UAAW,sBAAmB,IAC1CE,IACIkyB,WACD3a,EAASzX,UAAW,oBAAiB,IACxCE,IACIc,YAAS,IACVyW,EAASzX,UAAW,qBAAkB,IACzCE,IACIkyB,WACD3a,EAASzX,UAAW,mBAAgB,IACvCE,IACIkyB,WACD3a,EAASzX,UAAW,kBAAe,IACtCE,IACIkyB,WACD3a,EAASzX,UAAW,qBAAkB,IACzCE,IACIkyB,WACD3a,EAASzX,UAAW,oBAAiB,IACxCE,IACIkyB,WACD3a,EAASzX,UAAW,qBAAkB,IACzCE,IACIkyB,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"}